{"task_id": "Open/0", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/1", "completion": "    min_val = arr[0]\n    count = 1\n    for i in range(1,n):\n        if arr[i] < min_val:\n            min_val = arr[i]\n            count = 1\n        elif arr[i] == min_val:\n            count += 1\n    return count\n\narr = [1,2,3,4,5,6,7,8,9,10]\nn = len(arr)", "result": "passed", "passed": true}
{"task_id": "Open/2", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/3", "completion": "    count = 0\n    for i in range ( n ) :\n        for j in range ( i + 1, n ) :\n            if ( A [ i ] + A [ j ] ) % K == 0 :\n                count += 1\n    return count\n", "result": "passed", "passed": true}
{"task_id": "Open/4", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/5", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/6", "completion": "    output = []\n    for i in vec :\n        if i > 0 :\n            output.append(i)\n        else :\n            output.append(i + 1)\n    return output\n", "result": "failed: ", "passed": false}
{"task_id": "Open/7", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/8", "completion": "    prime_factors = {}\n    for i in a :\n        if i == 1 :\n            continue\n        for j in range(2,int(math.sqrt(i))+1) :\n            if i % j == 0 :\n                if j in prime_factors :\n                    prime_factors[j] += 1\n                else :\n                    prime_factors[j] = 1\n                break\n    return prime_factors\n", "result": "failed: ", "passed": false}
{"task_id": "Open/9", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/10", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/11", "completion": "    count = 0\n    for i in range(size):\n        if array[i] % 2 == 0 and array[i]!= 0 and array[i]!= 2:\n            count += 1\n    return count\n", "result": "passed", "passed": true}
{"task_id": "Open/12", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/13", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/14", "completion": "    if n % 4 == 0 :\n        return n\n    elif n % 4 == 1 :\n        return 1\n    elif n % 4 == 2 :\n        return n + 1\n    elif n % 4 == 3 :\n        return 0\n    else :\n        return \"\"\n", "result": "passed", "passed": true}
{"task_id": "Open/15", "completion": "    a = random.randint(2,n-1)\n    for i in range(t):\n        if (pow(a,(n-1)//2,n) == 1) or (pow(a,(n-1)//2,n) == n-1):\n            a = random.randint(2,n-1)\n        else:\n            return -1\n    return 1\n", "result": "passed", "passed": true}
{"task_id": "Open/16", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/17", "completion": "    return (x * (a + b) * (c - d)) / ((a * d) - (b * c))\n", "result": "passed", "passed": true}
{"task_id": "Open/18", "completion": "    count = 0\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == '1':\n                count += 1\n        else:\n            if s[i] == '0':\n                count += 1\n    return min(count, len(s) - count)\n", "result": "passed", "passed": true}
{"task_id": "Open/19", "completion": "    count = 0\n    for i in range(1,n+1):\n        if math.log(i,2) == math.floor(math.log(i,2)):\n            count += 1\n    return count\n", "result": "failed: ", "passed": false}
{"task_id": "Open/20", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/21", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/22", "completion": "    max_ending_here = max_so_far = 0\n    for i in range ( n ) :\n        max_ending_here = max ( max_ending_here + arr[i], arr[i] )\n        max_so_far = max ( max_so_far, max_ending_here )\n    return max_so_far\n", "result": "failed: ", "passed": false}
{"task_id": "Open/23", "completion": "    if i == n :\n        if sum == 0 :\n            count += 1\n        return count\n    return subsetSum( arr, n, i + 1, sum - arr[i], count ) + subsetSum( arr, n, i + 1, sum, count )\n\narr = [ 3, 34, 4, 12, 5, 2 ]\nn = len( arr )\nsum = 9\ncount = 0", "result": "passed", "passed": true}
{"task_id": "Open/24", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/25", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/26", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/27", "completion": "    return x <= y\n", "result": "passed", "passed": true}
{"task_id": "Open/28", "completion": "    return 9 * n * n - 9 * n + 1\n", "result": "passed", "passed": true}
{"task_id": "Open/29", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/30", "completion": "    return sum(i**2 for i in range(1,n+1)) / n\n", "result": "passed", "passed": true}
{"task_id": "Open/31", "completion": "    arr.sort()\n    return arr[k-1]\n", "result": "failed: ", "passed": false}
{"task_id": "Open/32", "completion": "    return 3 ** (n-1)\n", "result": "passed", "passed": true}
{"task_id": "Open/33", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/34", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/35", "completion": "    count = 0\n    for i in range(1,n+1):\n        if i % d == 0:\n            count += 1\n    return count\n", "result": "failed: ", "passed": false}
{"task_id": "Open/36", "completion": "    for i in range(n) :\n        while arr[i] > 0 and arr[i] <= n and arr[arr[i] - 1]!= arr[i] :\n            arr[arr[i] - 1], arr[i] = arr[i], arr[arr[i] - 1]\n    for i in range(n) :\n        if arr[i]!= i + 1 :\n            return i + 1\n    return n + 1\n", "result": "passed", "passed": true}
{"task_id": "Open/37", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/38", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/39", "completion": "    return N * (N + 1) / 2\n", "result": "passed", "passed": true}
{"task_id": "Open/40", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/41", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/42", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/43", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/44", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/45", "completion": "    min_ele = min( arr )\n    return min_ele * ( n - 1 )\n", "result": "passed", "passed": true}
{"task_id": "Open/46", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/47", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/48", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/49", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/50", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/51", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/52", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/53", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/54", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/55", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/56", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/57", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/58", "completion": "    result = 0\n    var1 = arr[0]\n    var2 = arr[1]\n    result = result + var1 + var2 + (var1 * var2)/100\n    for i in range(2,N):\n        result = result + arr[i] + (result * arr[i])/100\n    return result\n", "result": "passed", "passed": true}
{"task_id": "Open/59", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/60", "completion": "    for i in range ( 1, int ( n ** 0.5 ) + 1 ) :\n        if i ** 2 > n :\n            break\n        if ( n - i ** 2 ) ** 0.5 == int ( ( n - i ** 2 ) ** 0.5 ) :\n            return True\n    return False\n", "result": "passed", "passed": true}
{"task_id": "Open/61", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/62", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/63", "completion": "    sum = 0\n    min = arr[0]\n    for i in range(1,n):\n        sum += math.log(arr[i])\n        if arr[i] < min:\n            min = arr[i]\n    return sum + math.log(min) * n\n", "result": "failed: ", "passed": false}
{"task_id": "Open/64", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/65", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/66", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/67", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/68", "completion": "    if n == 1 :\n        return 0\n    else :\n        v = []\n        n -= 1\n        while n > 0 :\n            v.append( n % 5 )\n            n = n // 5\n        result = 0\n        for i in v[::-1] :\n            result = result * 10 + i\n        return 2 * result\n", "result": "passed", "passed": true}
{"task_id": "Open/69", "completion": "    currentSetBit = 0\n    for i in range( 0, 32 ) :\n        if n & 1 == 1 :\n            if currentSetBit > i :\n                return False\n            else :\n                currentSetBit = i\n        n = n >> 1\n    return True\n", "result": "failed: ", "passed": false}
{"task_id": "Open/70", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/71", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/72", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/73", "completion": "    max_count = 0\n    max_val = -1\n    for i in range(n):\n        if arr[i] == max_val:\n            max_count += 1\n        elif arr[i] > max_val:\n            max_count = 1\n            max_val = arr[i]\n        else:\n            continue\n    if max_count == 1:\n        return max_val\n    else:\n        return -1\n\narr = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,", "result": "failed: invalid syntax (<string>, line 21)", "passed": false}
{"task_id": "Open/74", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/75", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/76", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/77", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/78", "completion": "    return math.floor(n/2)\n", "result": "passed", "passed": true}
{"task_id": "Open/79", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/80", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/81", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/82", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/83", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/84", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/85", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/86", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/87", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/88", "completion": "    r = r / 1200\n    t = t * 12\n    EMI = (p * r * (1 + r)**t) / ((1 + r)**t - 1)\n    return EMI\n\nemi_calculator(10000, 10, 10)\n", "result": "passed", "passed": true}
{"task_id": "Open/89", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/90", "completion": "    return sum(1 for i in range(l,r+1) if i%10 in [2,3,9])\n", "result": "passed", "passed": true}
{"task_id": "Open/91", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/92", "completion": "    max_len = 0\n    start = 0\n    for i in range(len(str)) :\n        if str[i].isalnum() :\n            max_len += 1\n        else :\n            max_len = 0\n            start = i + 1\n    return max_len\n", "result": "failed: ", "passed": false}
{"task_id": "Open/93", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/94", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/95", "completion": "    total = 0\n    while n > 0:\n        total += fuel / n\n        n -= 1\n    return total\n", "result": "passed", "passed": true}
{"task_id": "Open/96", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/97", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/98", "completion": "    return math.floor(math.log10(n))+1\n", "result": "passed", "passed": true}
{"task_id": "Open/99", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/100", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/101", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/102", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/103", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/104", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/105", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/106", "completion": "    sum = 0\n    for i in range(1, n):\n        if n % i == 0:\n            sum += i\n    if sum == n:\n        return True\n    else:\n        return False\n", "result": "passed", "passed": true}
{"task_id": "Open/107", "completion": "    oddDays = 0\n    totalDays = 0\n    nonLeapYears = 0\n    leapYears = 0\n    centuries = 0\n    leapCenturies = 0\n    year = N\n    if year % 400 == 0:\n        leapCenturies = leapCenturies + 1\n    if year % 100 == 0:\n        centuries = centuries + 1\n    if year % 4 == 0:\n        leapYears = leapYears + 1\n    if year % 100 == 0:\n        leapYears = leapYears + 1\n    if year % 400 == 0:\n        leapYears = leapYears + 1\n    if year % 4 == 0:\n        nonLeapYears = nonLeapYears + 1\n    totalDays = nonLeapYears + 2 * leapYears\n    oddDays = totalDays % 7\n    return oddDays\n", "result": "failed: ", "passed": false}
{"task_id": "Open/108", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/109", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/110", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/111", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/112", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/113", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/114", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/115", "completion": "    if n == 0 :\n        return True\n    elif n == 1 :\n        return a[0] % 11 == 0\n    elif n == 2 :\n        return a[0] % 11 == 0 and a[1] % 11 == 0\n    else :\n        return a[0] % 11 == 0 and isPossibleToZero( a[1:n], n-1 )\n", "result": "passed", "passed": true}
{"task_id": "Open/116", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/117", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/118", "completion": "    return math.ceil( math.sqrt( 8 * p + 1 ) / 2 ) - 1\n", "result": "passed", "passed": true}
{"task_id": "Open/119", "completion": "    return len(set(arr)) == len(arr)\n", "result": "passed", "passed": true}
{"task_id": "Open/120", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/121", "completion": "    if lower == higher :\n        return lower\n    elif lower > higher :\n        return mostCommon ( higher, lower )\n    else :\n        return 2\n", "result": "passed", "passed": true}
{"task_id": "Open/122", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/123", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/124", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/125", "completion": "    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            return False\n    return True\n", "result": "passed", "passed": true}
{"task_id": "Open/126", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/127", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/128", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/129", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/130", "completion": "    # Initialize a variable to store the minimum steps.\n    min_steps = 0\n    \n    # Iterate through the array.\n    for i in range( n ) :\n        # Initialize a variable to store the current steps.\n        current_steps = 0\n        \n        # Iterate through the array.\n        for j in range( n ) :\n            # If the current element is greater than the previous element, add 1 to the current steps.\n            if arr[ j ] > arr[ j - 1 ] :\n                current_steps += 1\n            # If the current element is less than the previous element, add 2 to the current steps.\n            elif arr[ j ] < arr[ j - 1 ] :\n                current_steps += 2\n        \n        # If the current steps is less than the minimum steps, update the minimum steps.\n        if current_steps < min_steps :\n            min_steps = current_steps\n    \n    # Return the minimum steps.\n    return min_steps\n", "result": "failed: ", "passed": false}
{"task_id": "Open/131", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/132", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/133", "completion": "    if N <= 2:\n        return N\n    elif N <= 4:\n        return N + 3\n    elif (N - 4) % 4 == 0:\n        return N + 1\n    elif (N - 4) % 4 <= 2:\n        return N + 2\n    else:\n        return N - 1\n", "result": "passed", "passed": true}
{"task_id": "Open/134", "completion": "    return arr[0] % 2 == 1 and arr[n-1] % 2 == 1 and n % 2 == 1\n", "result": "passed", "passed": true}
{"task_id": "Open/135", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/136", "completion": "    min = 1\n    for i in range(n):\n        if arr[i] > min:\n            min = arr[i] + 1\n    return min\n\narr = [1, 2, 3, 4, 5]\nn = len(arr)", "result": "failed: ", "passed": false}
{"task_id": "Open/137", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/138", "completion": "    count = 0\n    for i in range(n) :\n        if arr[i] > arr[i-1] :\n            count += arr[i] - arr[i-1]\n            arr[i] = arr[i-1]\n    return count\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nn = len(arr)", "result": "passed", "passed": true}
{"task_id": "Open/139", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/140", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/141", "completion": "    return ( x * y ) / math.gcd ( x, y )\n", "result": "passed", "passed": true}
{"task_id": "Open/142", "completion": "    count = 0\n    while n % 2 == 0 :\n        count += 1\n        n = n // 2\n    return count\n", "result": "passed", "passed": true}
{"task_id": "Open/143", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/144", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/145", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/146", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/147", "completion": "    # Write your code here.\n    count = 0\n    for i in range(n):\n        if arr[i] == 0:\n            count += 1\n    return count\n", "result": "passed", "passed": true}
{"task_id": "Open/148", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/149", "completion": "    return s ** 0.5\n", "result": "passed", "passed": true}
{"task_id": "Open/150", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/151", "completion": "    xor = 0\n    for i in range(len1):\n        xor = xor ^ ord(str1[i])\n    return xor\n", "result": "passed", "passed": true}
{"task_id": "Open/152", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/153", "completion": "    vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s)-1):\n        if s[i] in vowels and s[i+1] in vowels:\n            if s[i] > s[i+1]:\n                return False\n    return True\n", "result": "passed", "passed": true}
{"task_id": "Open/154", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/155", "completion": "    return 2**math.ceil(math.log(n,2))-n", "result": "passed", "passed": true}
{"task_id": "Open/156", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/157", "completion": "    return ''.join(sorted(s))\n", "result": "passed", "passed": true}
{"task_id": "Open/158", "completion": "    left = 0\n    right = size - 1\n    while left <= right :\n        mid = (left + right) // 2\n        if ar[mid] == mid + 1 :\n            left = mid + 1\n        else :\n            right = mid - 1\n    return left\n", "result": "failed: ", "passed": false}
{"task_id": "Open/159", "completion": "    count = 0\n    for i in range(len(str)) :\n        if str[i] == '0' :\n            if str[i+1] == '1' :\n                count += 1\n            else :\n                count += 2\n        else :\n            count += 1\n    return count\n", "result": "failed: string index out of range", "passed": false}
{"task_id": "Open/160", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/161", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/162", "completion": "    return ( sx == dx and sy < dy ) or ( sx < dx and sy == dy )\n", "result": "passed", "passed": true}
{"task_id": "Open/163", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/164", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/165", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/166", "completion": "    # Step 1. Initialize the number of steps as 0.\n    steps = 0\n    # Step 2. Initialize the current position as source.\n    current = source\n    # Step 3. While current position is not equal to destination:\n    while current!= dest:\n        # If current position + step is greater than destination, then step = step - 1.\n        if current + step > dest:\n            step = step - 1\n        # If current position + step is less than destination, then step = step + 1.\n        if current + step < dest:\n            step = step + 1\n        # Increment the number of steps by 1.\n        steps += 1\n    # Step 4. Return number of steps.\n    return steps\n", "result": "timed out", "passed": false}
{"task_id": "Open/167", "completion": "    result = \"1\"\n    for i in range(1, n+1) :\n        current = result\n        count = 1\n        for j in range(len(current)) :\n            if current[j] == current[j-1] :\n                count += 1\n            else :\n                result += str(count) + current[j-1]\n                count = 1\n        result += str(count) + current[len(current)-1]\n    return result\n", "result": "failed: ", "passed": false}
{"task_id": "Open/168", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/169", "completion": "    return (abs(m) * abs(n)) / math.sqrt((abs(m) * abs(m)) + (abs(n) * abs(n)))\n", "result": "passed", "passed": true}
{"task_id": "Open/170", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/171", "completion": "    arr.sort()\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i+1,len(arr)):\n            for k in range(j+1,len(arr)):\n                if arr[k] - arr[i] <= L:\n                    count += 1\n    return count\n", "result": "passed", "passed": true}
{"task_id": "Open/172", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/173", "completion": "\n", "result": "failed: ", "passed": false}
{"task_id": "Open/174", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/175", "completion": "    product = 1\n    result = \"\"\n    for i in range(n):\n        product = product * (i+1)\n    for i in range(k):\n        result = result + str(math.log(product,10))\n    return result\n", "result": "failed: ", "passed": false}
{"task_id": "Open/176", "completion": "", "result": "failed: ", "passed": false}
{"task_id": "Open/177", "completion": "\n", "result": "failed: ", "passed": false}
