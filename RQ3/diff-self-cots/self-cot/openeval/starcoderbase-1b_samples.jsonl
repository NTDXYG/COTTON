{"task_id": "Open/0", "completion": "    sum = 0\n    for i in range(N) :\n        sum += arr[i]\n    if sum >= K :\n        return True\n    else :\n        return False\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nN = len(arr)\nK = 5\n"}
{"task_id": "Open/1", "completion": "    minVal = arr[0]\n    for i in range(1, n) :\n        if arr[i] < minVal :\n            minVal = arr[i]\n        else :\n            return False\n    return True\n"}
{"task_id": "Open/2", "completion": "    n = n & ( n - 1 )\n    return n == 0\n"}
{"task_id": "Open/3", "completion": "    count = 0\n    for i in range(n) :\n        if A[i] % K == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/4", "completion": "    return False\n"}
{"task_id": "Open/5", "completion": "    parity = 0\n    for i in range(len(x)) :\n        if x[i] % 2 == 1 :\n            parity += 1\n    return parity\n"}
{"task_id": "Open/6", "completion": "    # Step 1.\n    positive_list = []\n    # Step 2.\n    for i in vec :\n        if i >= 0 :\n            positive_list.append(i)\n        else :\n            positive_list.append(abs(i)+1)\n    # Step 3.\n    return positive_list\n"}
{"task_id": "Open/7", "completion": "    if n == 0 :\n        return 0\n    if n == 1 :\n        return 1\n    if arr[0] > arr[1] :\n        return 1 + findSubsequence ( arr[1:], n - 1 )\n    else :\n        return 1 + findSubsequence ( arr[1:], n - 1 )\n"}
{"task_id": "Open/8", "completion": "    count = 1\n    for i in range ( 2, int ( math.sqrt ( a ) ) + 1 ) :\n        if ( a % i ) == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/9", "completion": "    sum = 0\n    for i in range(n):\n        sum += arr[i] - arr[0]\n    for i in range(1,k+1):\n        sum += arr[i] - arr[i-1]\n    return sum\n"}
{"task_id": "Open/10", "completion": "    total_time = 0\n    for i in range ( len ( A ) ) :\n        if A[i] == B[i] :\n            total_time += 1\n        else :\n            B.append ( B.popleft() )\n            A.append ( A.popleft() )\n            total_time += 2\n    return total_time\n"}
{"task_id": "Open/11", "completion": "    count = 0\n    for i in range ( size ) :\n        if ( array[i] % 2 ) == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/12", "completion": "    count = 0\n    for c in s :\n        if c in k :\n            count += 1\n    return count\n"}
{"task_id": "Open/13", "completion": "    def f( n ) :\n        if n == 1 :\n            return True\n        elif n % 2 == 0 :\n            return False\n        else :\n            return f( n / 2 )\n    return f( n )\n"}
{"task_id": "Open/14", "completion": "    XOR = 0\n    for i in range(n):\n        if i % 2 == 0:\n            XOR += 1\n        else:\n            XOR += 0\n    return XOR\n"}
{"task_id": "Open/15", "completion": "    if t == 0 :\n        return 1\n    else :\n        a = random.randint(2, n-1)\n        b = pow(a, (n-1)/2, n)\n        if b == 1 or b == n-1 :\n            return lehmann(n, t-1)\n        else :\n            return -1\n"}
{"task_id": "Open/16", "completion": "    pass\n"}
{"task_id": "Open/17", "completion": "    return (x * (a + b) * (c - d)) / ((a * d) - (b * c))\n"}
{"task_id": "Open/18", "completion": "    count = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            count += 1\n        else:\n            count -= 1\n    return min(count, len(s) - count)\n"}
{"task_id": "Open/19", "completion": "    powerNumber = 1\n    for i in range(2, n+1) :\n        if i % 2 == 0 :\n            powerNumber *= 2\n        elif i % 3 == 0 :\n            powerNumber *= 3\n        else :\n            powerNumber += 1\n    return powerNumber\n"}
{"task_id": "Open/20", "completion": "    if x < 0 :\n        return True\n    else :\n        return x * product( x - 1, y )\n"}
{"task_id": "Open/21", "completion": "    count0 = 0\n    count1 = 0\n    count2 = 0\n    count3 = 0\n    for i in range ( len( a ) ) :\n        if ( a[i] % 4 == 0 ) :\n            count0 += 1\n        if ( a[i] % 4 == 1 ) :\n            count1 += 1\n        if ( a[i] % 4 == 2 ) :\n            count2 += 1\n        if ( a[i] % 4 == 3 ) :\n            count3 += 1\n    if ( count0 % 2 == 0 ) :\n        return 1\n    if ( count1 % 2 == 0 ) :\n        return 2\n    if ( count2 % 2 == 0 ) :\n        return 3\n    if ( count3 % 2 == 0 ) :\n        return 4\n    if ( count0 % 2 == 1 ) :\n        return 1\n    if ( count1 % 2 == 1 ) :\n        return 2\n    if ( count2 % 2 == 1 ) :\n        return 3\n    if ( count3 % 2 == 1 ) :\n        return 4"}
{"task_id": "Open/22", "completion": "    # Write your code here.\n    if len(arr) == 0 :\n        return 0\n    if len(arr) == 1 :\n        return 1\n    if len(arr) == 2 :\n        if arr[0] > arr[1] :\n            return 2\n        else :\n            return 1\n    if arr[0] > arr[1] :\n        return 2\n    else :\n        return 1 + lenOfLongIncSubArr( arr[1:], n - 1 )\n"}
{"task_id": "Open/23", "completion": "    if i == n :\n        count += 1\n        return count\n    elif sum < 0 :\n        count += subsetSum ( arr, n, i + 1, sum + arr[i], count )\n    elif sum > 0 :\n        count += subsetSum ( arr, n, i + 1, sum - arr[i], count )\n    return count\n"}
{"task_id": "Open/24", "completion": "    return 1 + ( n // 16 ) + ( n % 16 )\n"}
{"task_id": "Open/25", "completion": "    def series ( n ) :\n        sum = 0\n        n = n\n        while n > 0 :\n            sum += 1\n            n -= 1\n        return sum\n    return series\n"}
{"task_id": "Open/26", "completion": "    maxSum = 0\n    for i in range(1, n + 1) :\n        if n % i == 0 :\n            maxSum += i\n    return maxSum\n"}
{"task_id": "Open/27", "completion": "    return x <= y\n"}
{"task_id": "Open/28", "completion": "    return 9 * n * n - 9 * n + 1\n"}
{"task_id": "Open/29", "completion": "    return ( a - b ) / ( a + b )\n"}
{"task_id": "Open/30", "completion": "    sum_of_squares = 0\n    for i in range( n ) :\n        sum_of_squares += i * i\n    return sum_of_squares / n\n"}
{"task_id": "Open/31", "completion": "\n    arr.sort()\n    return arr[k-1]\n"}
{"task_id": "Open/32", "completion": "    return pow(3, n-1)\n"}
{"task_id": "Open/33", "completion": "\n"}
{"task_id": "Open/34", "completion": "    productCount = 0\n    for i in a :\n        productCount += i\n    if productCount < k :\n        return 0\n    else :\n        return 1\n"}
{"task_id": "Open/35", "completion": "    count = 0\n    for i in range(1, n+1) :\n        if i % d == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/36", "completion": "    arr = [ int(x) for x in arr ]\n    for i in range(n) :\n        if i not in arr :\n            arr.append(i)\n    return min(arr)\n"}
{"task_id": "Open/37", "completion": "\n"}
{"task_id": "Open/38", "completion": "    area = 1\n    for i in range(l, b + 1):\n        area += i\n    return area\n"}
{"task_id": "Open/39", "completion": "    return sum ( range ( 1, N + 1 ) )\n"}
{"task_id": "Open/40", "completion": "    maxCount = -1\n    for i in range(n):\n        if arr[i] == 1:\n            maxCount += 1\n        elif arr[i] == 0:\n            maxCount -= 1\n        elif arr[i] == 1:\n            maxCount += 1\n        elif arr[i] == 0:\n            maxCount -= 1\n    return maxCount\n"}
{"task_id": "Open/41", "completion": "    length = 0\n    for i in range(n):\n        if arr[i] == 0:\n            length += 1\n        else:\n            length -= 1\n    return length\n"}
{"task_id": "Open/42", "completion": "    pass\n"}
{"task_id": "Open/43", "completion": "    count = 0\n    for i in range(len(array)):\n        if array[i] < k:\n            count += 1\n        elif array[i] == k:\n            count += 1\n        elif array[i] > k:\n            count -= 1\n    return count\n"}
{"task_id": "Open/44", "completion": "    sum = 0\n    for i in range ( n ) :\n        if sum < 0 :\n            return True\n        sum += abs ( arr[i] - i )\n    return False\n"}
{"task_id": "Open/45", "completion": "    min_val = 0\n    for i in range(n) :\n        if arr[i] < min_val :\n            min_val = arr[i]\n        if arr[i] > min_val :\n            min_val = min_val * arr[i]\n    return min_val * (n - 1)\n"}
{"task_id": "Open/46", "completion": "    maxDistance = 0\n    for i in range(len(array)):\n        if array[i] > maxDistance:\n            maxDistance = array[i]\n        elif array[i] < maxDistance:\n            maxDistance = array[i]\n        elif array[i] == maxDistance:\n            return maxDistance\n    return maxDistance\n"}
{"task_id": "Open/47", "completion": "    return ( a * x1 + b * y1 + c == 0 )\n"}
{"task_id": "Open/48", "completion": "    count = 0\n    for i in range ( 0, a ) :\n        if ( i % 2 == 0 ) :\n            count += 1\n        if ( i % 3 == 0 ) :\n            count += 2\n        if ( i % 5 == 0 ) :\n            count += 3\n        if ( i % 7 == 0 ) :\n            count += 4\n        if ( i % 11 == 0 ) :\n            count += 5\n        if ( i % 13 == 0 ) :\n            count += 6\n        if ( i % 17 == 0 ) :\n            count += 7\n        if ( i % 19 == 0 ) :\n            count += 8\n        if ( i % 23 == 0 ) :\n            count += 9\n        if ( i % 29 == 0 ) :\n            count += 10\n        if ( i % 31 == 0 ) :\n            count += 11\n        if ( i % 37 == 0 ) :\n            count += 1\n    return count\n"}
{"task_id": "Open/49", "completion": "    pass\n"}
{"task_id": "Open/50", "completion": "    if n == 0 :\n        return -1\n    if n == 1 :\n        return a[0]\n    if a[0] % a[1] == 0 :\n        return findSmallest( a[1:], n - 1 )\n    else :\n        return -1\n"}
{"task_id": "Open/51", "completion": "\n"}
{"task_id": "Open/52", "completion": "    xor = 0\n    for i in range(n):\n        for j in range(n):\n            if (i+1) * (j+1) % 2 == 1:\n                xor ^= arr[i][j]\n    return xor\n"}
{"task_id": "Open/53", "completion": "    count = 0\n    for i in range(N):\n        if i % 2 == 0:\n            count += 1\n        else:\n            count -= 1\n    return count\n"}
{"task_id": "Open/54", "completion": "    sum = 0\n    for i in a :\n        sum += i\n    if sum < k :\n        return False\n    else :\n        return True\n"}
{"task_id": "Open/55", "completion": "    return ( n & 1 ) == 1\n"}
{"task_id": "Open/56", "completion": "    maxPartition = 0\n    for i in range(len(s)) :\n        if s[i] == s[i+1] :\n            maxPartition += 1\n    return maxPartition\n\n"}
{"task_id": "Open/57", "completion": "    if N % K == 0 :\n        return N\n    else :\n        return N - ( N % K )\n"}
{"task_id": "Open/58", "completion": "    result = 0\n    var1 = arr[0]\n    var2 = arr[1]\n    for i in range(2, N):\n        result += var1\n        var1 = var2\n        var2 = result\n    return result\n"}
{"task_id": "Open/59", "completion": "    return arr[index]\n"}
{"task_id": "Open/60", "completion": "    return False\n"}
{"task_id": "Open/61", "completion": "    count = 0\n    for i in range(len(a)) :\n        if a[i] == b[i] :\n            count += 1\n        else :\n            count -= 1\n    return count\n"}
{"task_id": "Open/62", "completion": "    # Write your code here.\n    return \"\"\n"}
{"task_id": "Open/63", "completion": "    minValue = 0\n    for i in range(n) :\n        if arr[i] < minValue :\n            minValue = arr[i]\n    return minValue\n"}
{"task_id": "Open/64", "completion": "    # Write your code here\n    pass\n"}
{"task_id": "Open/65", "completion": "    count = 0\n    for i in range(n) :\n        if count < k :\n            count += 1\n        else :\n            a.pop(i)\n    return count\n"}
{"task_id": "Open/66", "completion": "    # Write your code here\n    return 0\n"}
{"task_id": "Open/67", "completion": "    minStep = 0\n    for i in range(n):\n        if a[i] < 0 :\n            minStep += abs(a[i])\n        elif a[i] > 0 :\n            minStep += abs(a[i]) - 1\n        elif a[i] == 0 :\n            minStep += 2\n    return minStep\n"}
{"task_id": "Open/68", "completion": "    if n == 1 :\n        return 0\n    else :\n        v = [1]\n        while n > 1 :\n            if n % 2 == 0 :\n                v.append(n % 5)\n            n = int(n / 5)\n        result = 0\n        while n > 0 :\n            if n % 2 == 0 :\n                result += 2 * n\n            n = int(n / 5)\n        return 2 * result\n"}
{"task_id": "Open/69", "completion": "    return n % 2 == 0\n"}
{"task_id": "Open/70", "completion": "    closestMultiple = 1\n    while ( x > closestMultiple ) :\n        closestMultiple = closestMultiple + 1\n    return closestMultiple\n"}
{"task_id": "Open/71", "completion": "    if n < 0 :\n        return False\n    if n == 0 :\n        return True\n    if n == 1 :\n        return True\n    if n == 2 :\n        return True\n    if n == 3 :\n        return True\n    if n == 4 :\n        return True\n    if n == 5 :\n        return True\n    if n == 6 :\n        return True\n    if n == 7 :\n        return True\n    if n == 8 :\n        return True\n    if n == 9 :\n        return True\n    if n == 10 :\n        return True\n    if n == 11 :\n        return True\n    if n == 12 :\n        return True\n    if n == 13 :\n        return True\n    if n == 14 :\n        return True\n    if n == 15 :\n        return True\n    if n == 16 :\n        return True\n    if n == 17 :\n        return True\n    if n == 18 :\n        return True\n    if n == 19 :\n        return True\n    if n == 20 :\n        return True\n    if n == 21 :\n        return True\n    if n == 22 :\n        return True\n    if n"}
{"task_id": "Open/72", "completion": "    sum = 0\n    for i in range(1, n+1) :\n        sum += 2\n    return sum < 0\n"}
{"task_id": "Open/73", "completion": "    max_value = 0\n    for i in range(n) :\n        if arr[i] > max_value :\n            max_value = arr[i]\n        elif arr[i] == max_value :\n            max_value += 1\n    return max_value\n"}
{"task_id": "Open/74", "completion": "    count = 0\n    for i in range(n) :\n        if a[i] > a[i+1] :\n            count += 1\n    return count\n"}
{"task_id": "Open/75", "completion": "    return n\n"}
{"task_id": "Open/76", "completion": "\n"}
{"task_id": "Open/77", "completion": "    return (radian + 360) % 360\n"}
{"task_id": "Open/78", "completion": "    return math.floor(n/2)\n"}
{"task_id": "Open/79", "completion": "    sum = 0\n    for i in range(n):\n        sum += a + d * i\n    return sum < 0\n"}
{"task_id": "Open/80", "completion": "    power = 1\n    while ( power < n ) :\n        power = power * 2\n    return power\n\n"}
{"task_id": "Open/81", "completion": "    pass"}
{"task_id": "Open/82", "completion": "    if n == 0 :\n        return 1\n    else :\n        return findNumber ( n - 1 ) + n\n"}
{"task_id": "Open/83", "completion": "    pass\n"}
{"task_id": "Open/84", "completion": "    # Write your code here.\n    return 0\n"}
{"task_id": "Open/85", "completion": "    if x % y == 0 :\n        return y\n    elif y % x == 0 :\n        return x\n    else :\n        return getHCF ( y, x % y )\n"}
{"task_id": "Open/86", "completion": "    pass\n"}
{"task_id": "Open/87", "completion": "    count = 0\n    for i in range(len(str)):\n        if str[i] == substr[0]:\n            count += 1\n            substr = substr[1:]\n            if not substr:\n                return count\n    return 0\n"}
{"task_id": "Open/88", "completion": "    # Step 1. Initialize variables.\n    p = float(p)\n    r = float(r)\n    t = int(t)\n    \n    # Step 2. Initialize loan tenure.\n    m = 12 * t\n    \n    # Step 3. Initialize monthly interest rate.\n    r_m = r / 12\n    \n    # Step 4. Initialize principal amount.\n    p_m = p * r_m\n    \n    # Step 5. Initialize EMI.\n    emi = p_m * r_m * ((1 + r_m)**t) / ((1 + r_m)**t - 1)\n    \n    # Step 6. Calculate EMI.\n    return emi\n\nemi_calculator( 100000, 10, 12 )\n"}
{"task_id": "Open/89", "completion": "    count = 0\n    for i in range ( A ) :\n        for j in range ( B ) :\n            if A * j > C * C :\n                return count\n            if A * j < C * C :\n                count += 1\n    return count\n"}
{"task_id": "Open/90", "completion": "    count = 0\n    for i in range(l, r + 1) :\n        if i % 10 == 2 :\n            count += 1\n        elif i % 10 == 3 :\n            count += 1\n        elif i % 10 == 9 :\n            return count\n    return 0\n"}
{"task_id": "Open/91", "completion": "    # Write your code here.\n    return 1\n"}
{"task_id": "Open/92", "completion": "    maxLen = -1\n    for i in range(len(str)) :\n        if str[i].isdigit() :\n            maxLen += 1\n        elif str[i].isalpha() :\n            maxLen += 1\n        elif str[i].isspace() :\n            maxLen += 1\n        else :\n            return -1\n    return maxLen\n"}
{"task_id": "Open/93", "completion": "    count = 0\n    for i in range(n) :\n        if i % 2 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/94", "completion": "    return ''.join( [ chr( ord('a') + k ) for k in range( n ) ] )\n"}
{"task_id": "Open/95", "completion": "    distance = 0\n    for i in range(n):\n        distance += fuel/i\n    return distance\n"}
{"task_id": "Open/96", "completion": "    sum = 0\n    for i in range(n) :\n        sum += arr[i]\n    if sum < 0 :\n        return 0\n    sum = 0\n    for i in range(n) :\n        sum += arr[i]\n    if sum > 0 :\n        return 1\n    return 0\n"}
{"task_id": "Open/97", "completion": "    return word in sentence\n"}
{"task_id": "Open/98", "completion": "    count = 0\n    while n > 0 :\n        if n % 10 == 0 :\n            count += 1\n        elif n % 100 == 0 :\n            count += 2\n        elif n % 1000 == 0 :\n            count += 3\n        elif n % 10000 == 0 :\n            count += 4\n        elif n % 100000 == 0 :\n            count += 5\n        elif n % 1000000 == 0 :\n            count += 6\n        elif n % 10000000 == 0 :\n            count += 7\n        elif n % 100000000 == 0 :\n            count += 8\n        elif n % 1000000000 == 0 :\n            count += 9\n        n = n // 10\n    return count\n"}
{"task_id": "Open/99", "completion": "    pass\n"}
{"task_id": "Open/100", "completion": "    return False\n"}
{"task_id": "Open/101", "completion": "\n"}
{"task_id": "Open/102", "completion": "\n    count = 0\n    for i in range ( len ( string ) ) :\n        if string [ i ] == '0' :\n            count += 1\n        else :\n            count += 2\n    return count\n"}
{"task_id": "Open/103", "completion": "    minRemoval = 0\n    for i in range ( n ) :\n        diff = abs ( arr[i] - arr[i+1] )\n        if diff < minRemoval :\n            minRemoval = diff\n    return minRemoval\n"}
{"task_id": "Open/104", "completion": "    max_set_bits = 0\n    while left!= 0 :\n        if left & 1 :\n            max_set_bits += 1\n        left >>= 1\n    while right!= 0 :\n        if right & 1 :\n            max_set_bits += 1\n        right >>= 1\n    return max_set_bits\n"}
{"task_id": "Open/105", "completion": "    return 0\n"}
{"task_id": "Open/106", "completion": "    sum = 0\n    n = 0\n    while n < 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}
{"task_id": "Open/107", "completion": "    oddDays = 0\n    for year in range(1900, 2019):\n        if year % 400 == 0:\n            oddDays += 1\n        elif year % 100 == 0:\n            oddDays += 1\n        elif year % 4 == 0:\n            oddDays += 1\n        elif year % 1 == 0:\n            oddDays += 1\n    return oddDays\n"}
{"task_id": "Open/108", "completion": "    if a < 0 :\n        return -1\n    else :\n        return (a * (a + 1) * (2 * a + 1)) / 6\n"}
{"task_id": "Open/109", "completion": "    frequency = 0\n    while n :\n        if n % d :\n            frequency += 1\n        n //= d\n    return frequency\n"}
{"task_id": "Open/110", "completion": "    pass\n"}
{"task_id": "Open/111", "completion": "    return True\n"}
{"task_id": "Open/112", "completion": "    pass\n"}
{"task_id": "Open/113", "completion": "\n    # Write your code here.\n"}
{"task_id": "Open/114", "completion": "    return 0\n"}
{"task_id": "Open/115", "completion": "    a = [int(x) for x in a]\n    n = len(a)\n    if n == 0 :\n        return False\n    for i in range(n) :\n        if a[i] % 11!= 0 :\n            return False\n    return True\n\n"}
{"task_id": "Open/116", "completion": "    return 0\n"}
{"task_id": "Open/117", "completion": "\n    first = ''\n    last = ''\n\n    for char in string:\n        if char.isalpha():\n            first += char.upper()\n            last += char.upper()\n        else:\n            first += char\n            last += char\n\n    return first, last\n"}
{"task_id": "Open/118", "completion": "    bucket = 0\n    while True :\n        bucket += 1\n        if bucket >= math.sqrt(8 * bucket + 1) :\n            if bucket % 2 == 0 :\n                return True\n            else :\n                return False\n"}
{"task_id": "Open/119", "completion": "    return len( set( arr ) ) == len( arr )\n"}
{"task_id": "Open/120", "completion": "    count = 0\n    for i in range(len(string)):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            count += 1\n    return count\n"}
{"task_id": "Open/121", "completion": "    if lower == higher :\n        return lower\n    else :\n        return 2\n"}
{"task_id": "Open/122", "completion": "    # Write your code here.\n    return 0\n"}
{"task_id": "Open/123", "completion": "    length = 0\n    for i in range(len(s)) :\n        if s[i].isdigit() :\n            length += 1\n        else :\n            length = 0\n    return length\n"}
{"task_id": "Open/124", "completion": "    if N > M :\n        return 0\n    elif N == M :\n        return N\n    else :\n        return remainingArea(N-1, M, K) * remainingArea(N, M-1, K)\n"}
{"task_id": "Open/125", "completion": "    pass\n"}
{"task_id": "Open/126", "completion": "    return 0\n"}
{"task_id": "Open/127", "completion": "    if A == B :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/128", "completion": "    return x!= y\n"}
{"task_id": "Open/129", "completion": "    Sn_1 = 1\n    Sn_2 = 1\n    Sn_3 = 1\n    for i in range( 2, n + 1 ) :\n        Sn_1, Sn_2, Sn_3 = Sn_2, Sn_3, Sn_1 + Sn_2 + Sn_3\n    return Sn_3\n"}
{"task_id": "Open/130", "completion": "    minSteps = 0\n    for i in range(n):\n        if arr[i] < arr[i-1]:\n            minSteps += 1\n        elif arr[i] > arr[i-1]:\n            minSteps -= 1\n    return minSteps\n\narr = [1, 2, 3, 4, 5]\nn = len(arr)"}
{"task_id": "Open/131", "completion": "    return 0 if n % 4 == 0 or n % 4 == 3 else 1\n"}
{"task_id": "Open/132", "completion": "    m = 0\n    sum = 0\n    for i in range(N):\n        if i % a == 0:\n            m += 1\n        else:\n            sum += 1\n    ans = m * (m + 1) / 2 * a\n    return ans\n"}
{"task_id": "Open/133", "completion": "\n"}
{"task_id": "Open/134", "completion": "    if ( arr[0] % 2 == 0 ) and ( arr[-1] % 2 == 0 ) and ( n % 2 == 0 ) :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/135", "completion": "    count = 0\n    for i in range(N):\n        if i >= L and i <= R:\n            count += 1\n    return count\n"}
{"task_id": "Open/136", "completion": "    min = arr[0]\n    for i in range(1, n) :\n        if arr[i] < min :\n            min = arr[i]\n    return min\n"}
{"task_id": "Open/137", "completion": "    if s == \"\" :\n        return 0\n    else :\n        return smallestPoss ( s[1:], n - 1 ) + int ( s[0] )\n"}
{"task_id": "Open/138", "completion": "    count = 0\n    for i in range(n-1) :\n        if arr[i] > arr[i+1] :\n            count += 1\n            arr[i] = arr[i+1]\n    return count\n"}
{"task_id": "Open/139", "completion": "    sum = 0\n    for c in s :\n        sum += ord(c)\n    return sum/len(s)\n"}
{"task_id": "Open/140", "completion": "    banknotes = [0] * 10\n    banknotes[0] = A\n    banknotes[1] = B\n    banknotes[2] = S\n    banknotes[3] = N\n    for i in range(4, 10):\n        if banknotes[i] < 0:\n            return -1\n        banknotes[i] += banknotes[i-1]\n    return min(banknotes)\n"}
{"task_id": "Open/141", "completion": "    return x * y // math.gcd( x, y )\n"}
{"task_id": "Open/142", "completion": "    count = 0\n    while n!= 0 :\n        n = n & (n - 1)\n        count += 1\n    return count\n"}
{"task_id": "Open/143", "completion": "    sum_left = 0\n    sum_right = 0\n    for i in range(n):\n        sum_left = sum_left ^ arr[i]\n    for i in range(n):\n        sum_right = sum_right ^ arr[n-1-i]\n    if sum_left > sum_right:\n        return n-1-i\n    else:\n        return i\n"}
{"task_id": "Open/144", "completion": "    if n == 0 :\n        return 0\n    if n == 1 :\n        return 1\n    if n == 2 :\n        return 2\n    if arr[0] > arr[1] :\n        return 1 + lds( arr[1:], n - 1 )\n    else :\n        return 1 + lds( arr[1:], n - 2 )\n"}
{"task_id": "Open/145", "completion": "    arr = []\n    for i in range(n) :\n        arr.append(int(input()))\n    k = int(input())\n    return min(arr) + k\n"}
{"task_id": "Open/146", "completion": "    if K == 1 :\n        return 0\n    elif K == 2 :\n        return 1\n    else :\n        length = -1\n        num = 1\n        while num % K!= 0 :\n            if num % K == 0 :\n                length += 1\n            num -= 1\n        return length\n"}
{"task_id": "Open/147", "completion": "    arrLen = len(arr)\n    count = 0\n    minCount = 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}
{"task_id": "Open/148", "completion": "    sum = 0\n    for i in range(n) :\n        sum += i\n    return sum < 0\n"}
{"task_id": "Open/149", "completion": "    return s ** 0.5\n"}
{"task_id": "Open/150", "completion": "    return 0\n"}
{"task_id": "Open/151", "completion": "    xor = 0\n    for i in range(len1) :\n        if str1[i] in ['a','A'] :\n            xor += 65\n        elif str1[i] in ['b','B'] :\n            xor += 66\n        elif str1[i] in ['c','C'] :\n            xor += 67\n        elif str1[i] in ['d','D'] :\n            xor += 68\n        elif str1[i] in ['e','E'] :\n            xor += 69\n        elif str1[i] in ['f','F'] :\n            xor += 70\n        elif str1[i] in ['g','G'] :\n            xor += 71\n        elif str1[i] in ['h','H'] :\n            xor += 72\n        elif str1[i] in ['i','I'] :\n            xor += 73\n        elif str1[i] in ['j','J'] :\n            xor += 74\n        elif str1[i] in ['k','K'] :\n            xor += 75\n        elif str1[i] in ['l','L'] :\n            xor += 76\n       "}
{"task_id": "Open/152", "completion": "    pass\n"}
{"task_id": "Open/153", "completion": "    return False\n"}
{"task_id": "Open/154", "completion": "    count = 0\n    for i in range(low, high+1) :\n        if i % 10 >= k :\n            count += 1\n    return count\n"}
{"task_id": "Open/155", "completion": "    minDiff = 1\n    for i in range( 1, n ) :\n        if ( n & ( 1 << i ) ) == 0 :\n            minDiff = min( minDiff, 1 << i )\n    return minDiff\n"}
{"task_id": "Open/156", "completion": "    if r < 0 :\n        return -1\n    elif r == 0 :\n        return 0\n    elif r % 2 == 0 :\n        return 4 * r\n    else :\n        return 3 * r\n"}
{"task_id": "Open/157", "completion": "    return \"\"\n"}
{"task_id": "Open/158", "completion": "    pass\n"}
{"task_id": "Open/159", "completion": "    count = 0\n    for i in range(len(str)) :\n        if str[i] == '0' :\n            count += 1\n        elif str[i] == '1' :\n            count -= 1\n    return count\n"}
{"task_id": "Open/160", "completion": "    firstEven = 0\n    for i in range(n) :\n        if arr[i] % 2 == 0 :\n            firstEven += 1\n        else :\n            firstEven -= 1\n    return firstEven\n"}
{"task_id": "Open/161", "completion": "    xorArr = 0\n    ans = 0\n    for i in range(n):\n        xorArr += arr[i]\n    for i in range(n):\n        if xorArr > ans:\n            ans = xorArr\n    return ans\n"}
{"task_id": "Open/162", "completion": "    return True\n"}
{"task_id": "Open/163", "completion": "    count = 1\n    while n > 0 :\n        if n % 2 == 0 :\n            count += 1\n        if n % 3 == 0 :\n            count += 1\n        if n % 4 == 0 :\n            count += 1\n        if n % 5 == 0 :\n            count += 1\n        if n % 6 == 0 :\n            count += 1\n        if n % 7 == 0 :\n            count += 1\n        if n % 8 == 0 :\n            count += 1\n        if n % 9 == 0 :\n            count += 1\n        if n % 10 == 0 :\n            count += 1\n        if n % 11 == 0 :\n            count += 1\n        if n % 12 == 0 :\n            count += 1\n        if n % 13 == 0 :\n            count += 1\n        if n % 14 == 0 :\n            count += 1\n        n = n // 10\n    return count\n"}
{"task_id": "Open/164", "completion": "    count = {}\n    for i in range(n) :\n        if arr[i] in count :\n            count[arr[i]] += 1\n        else :\n            count[arr[i]] = 1\n    return sum(count.values())\n"}
{"task_id": "Open/165", "completion": "    return 0\n"}
{"task_id": "Open/166", "completion": "    if ( source >= dest ) :\n        return 0\n    elif ( source <= dest ) :\n        return 1\n    elif ( source == dest ) :\n        return 2\n    else :\n        return steps ( source - 1, step + 1, dest )\n"}
{"task_id": "Open/167", "completion": "    count = 1\n    for i in range ( n ) :\n        if count % 2 == 0 :\n            return count\n        count *= 10 + 1\n    return 0\n"}
{"task_id": "Open/168", "completion": "    max_length = 0\n    for i in range(len(arr)):\n        if arr[i] * max_length < 0:\n            return max_length\n        elif arr[i] * max_length > 0:\n            return arr[i] * max_length\n        elif arr[i] * max_length == 0:\n            return max_length + 1\n        else:\n            max_length = max(max_length, arr[i] * max_length)\n    return max_length\n"}
{"task_id": "Open/169", "completion": "    if ( m * m + n * n ) < 0 :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/170", "completion": "    count = 0\n    for i in range(n) :\n        if arr[i] > k :\n            count += 1\n        else :\n            count -= 1\n    return count\n"}
{"task_id": "Open/171", "completion": "    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if arr[j] - arr[i] <= L:\n                count += 1\n    return count\n"}
{"task_id": "Open/172", "completion": "    count = 0\n    for i in range(l, r+1) :\n        if i % 2 == 0 and i % 3 == 0 :\n            count += 2\n        elif i % 2 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/173", "completion": "    return 0\n"}
{"task_id": "Open/174", "completion": "    count = 0\n    for i in range(L, R + 1):\n        if i % 9 == 0:\n            count += 1\n        elif i % 9 == K:\n            count += 1\n    return count\n"}
{"task_id": "Open/175", "completion": "    product = 1\n    for digit in str(n):\n        product *= int(digit)\n    return math.log(product, 10)\n"}
{"task_id": "Open/176", "completion": "    first = -1\n    last = -1\n    for i in range(len(A)):\n        if A[i] > first:\n            first = A[i]\n        if A[i] < last:\n            last = A[i]\n    if first > last:\n        return -1\n    else:\n        return first\n"}
{"task_id": "Open/177", "completion": "    pass"}
