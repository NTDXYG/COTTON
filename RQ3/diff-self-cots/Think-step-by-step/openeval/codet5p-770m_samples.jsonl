{"task_id": "Open/0", "completion": "    sum = 0\n    count = 0\n    for i in arr :\n        sum += i\n        if sum > K :\n            count += 1\n    return count\n\narr = [1,2,3,4,5]\nN = len(arr)\nK = 5"}
{"task_id": "Open/1", "completion": "    freq = [0] * n\n    freq[0] = 1\n    for i in range(1, n) :\n        freq[i] = freq[i-1] + 1\n    for i in range(n-1) :\n        for j in range(i+1, n) :\n            freq[j] = max(freq[j], freq[i] + 1)\n    return freq[n-1]\n\narr = [1,2,3,4,5,6,7,8,9]\nn = len(arr)"}
{"task_id": "Open/2", "completion": "    \n    # Your code here\n    if ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ("}
{"task_id": "Open/3", "completion": "    count = 0\n    for i in range(n) :\n        for j in range(i+1,n) :\n            if (A[i] + A[j]) % K == 0 :\n                count += 1\n    return count\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/4", "completion": "    if n == 1 :\n        return a[0] == a[1]\n    else :\n        return a[0] + a[1] == n\n\n"}
{"task_id": "Open/5", "completion": "    return (x & 1) == 0\n"}
{"task_id": "Open/6", "completion": "    \n    missing_elements_list = []\n    \n    for i in vec :\n        if i < 0 :\n            missing_elements_list.append(i)\n        else :\n            i = abs(i) - 1\n            missing_elements_list.append(i)\n    \n    return missing_elements_list\n"}
{"task_id": "Open/7", "completion": "    \n    # Your code here\n    dp = [ [0 for i in range(n+1)] for j in range(len(arr)) ]\n    dp[0][0] = 1\n    \n    for i in range(1,len(arr)) :\n        for j in range(i) :\n            if arr[i] == arr[j] :\n                dp[i][j+1] = dp[i-1][j] + 1\n            else :\n                dp[i][j+1] = max(dp[i-1][j+1],dp[i][j])\n    \n    return dp[len(arr)][n]\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}
{"task_id": "Open/8", "completion": "    prime_factors = []\n    for i in a :\n        if i > 1 :\n            for j in range( 2, int( math.sqrt( i ) + 1 ) ) :\n                if i % j == 0 :\n                    break\n            else :\n                prime_factors.append( i )\n    return len( prime_factors )\n"}
{"task_id": "Open/9", "completion": "    if k > n :\n        return -1\n    if k == 1 :\n        return arr[0]\n    if k == n :\n        return arr[k-1]\n    return min(findSum(arr,n-1,k-1),findSum(arr,n-1,k)) + arr[k-1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/10", "completion": "    total_time = 0\n    A_queue = deque(A)\n    B_queue = deque(B)\n    while A_queue :\n        if A_queue[0] == B_queue[0] :\n            total_time += 1\n            A_queue.popleft()\n            B_queue.popleft()\n        else :\n            B_queue.append(A_queue.popleft())\n            A_queue.append(B_queue.popleft())\n    return total_time\n"}
{"task_id": "Open/11", "completion": "    count = 0\n    for i in array :\n        if i % 2 == 0 :\n            count += 1\n    return count\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/12", "completion": "    count = 0\n    for i in range( len( s ) ) :\n        if len( set( s[i:i+k] ) ) > k :\n            count += 1\n    return count\n\n"}
{"task_id": "Open/13", "completion": "    if n == 1 :\n        return True\n    if n % 2 == 0 :\n        return False\n    return Survives ( n / 2 )\n"}
{"task_id": "Open/14", "completion": "    if n % 4 == 0 :\n        return n\n    elif n % 4 == 1 :\n        return 1\n    elif n % 4 == 2 :\n        return n + 1\n    elif n % 4 == 3 :\n        return 0\n    else :\n        return \"\"\n"}
{"task_id": "Open/15", "completion": "    a = random.randint(2,n-1)\n    for i in range(t) :\n        a = (a**(n-1)/2) % n\n        if a!= 1 or a!= n-1 :\n            return -1\n    return 1\n\n"}
{"task_id": "Open/16", "completion": "    if len(s1)!= len(s2) :\n        return False\n    for i in range(len(s1)) :\n        if s1[i]!= s2[i] :\n            return False\n    return True\n"}
{"task_id": "Open/17", "completion": "    return (x * (a + b) * (c - d)) / ((a * d) - (b * c))\n"}
{"task_id": "Open/18", "completion": "    \n    count = 0\n    min_count = length\n    for i in range( length ) :\n        if s[i] == '1' :\n            count += 1\n        else :\n            count = 0\n        if count < min_count :\n            min_count = count\n    return min_count, min_count - length\n"}
{"task_id": "Open/19", "completion": "    return math.factorial(n)\n"}
{"task_id": "Open/20", "completion": "    if y == 0 :\n        return x\n    else :\n        return x * product( x, y - 1 )\n"}
{"task_id": "Open/21", "completion": "    count0 = 0\n    count1 = 0\n    count2 = 0\n    count3 = 0\n    for i in a :\n        if i % 4 == 0 :\n            count0 += 1\n        elif i % 4 == 1 :\n            count1 += 1\n        elif i % 4 == 2 :\n            count2 += 1\n        elif i % 4 == 3 :\n            count3 += 1\n    if count0 == 4 and count1 == 4 and count2 == 4 and count3 == 4 :\n        return 1\n    else :\n        return 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/22", "completion": "    if len( arr ) == 0 :\n        return 0\n    if n == 1 :\n        return 1\n    if n == 2 :\n        return 2\n    if n == 3 :\n        return 3\n    if n == 4 :\n        return 4\n    if n == 5 :\n        return 5\n    if n == 6 :\n        return 6\n    if n == 7 :\n        return 7\n    if n == 8 :\n        return 8\n    if n == 9 :\n        return 9\n    if n == 10 :\n        return 10\n    if n == 11 :\n        return 11\n    if n == 12 :\n        return 12\n    if n == 13 :\n        return 13\n    if n == 14 :\n        return 14\n    if n == 15 :\n        return 15\n    if n == 16 :\n        return 16\n    if n == 17 :\n        return 17\n    if n == 18 :\n        return 18\n    if n == 19 :\n        return 19\n    if n == 20 :\n        return 20\n    if n == 21 :\n        return 21\n    if n == 22 :\n        return 22"}
{"task_id": "Open/23", "completion": "    if i == n :\n        return count\n    if sum == 0 :\n        count += 1\n    return subsetSum( arr, n, i + 1, sum, count ) + subsetSum( arr, n, i + 1, sum - arr[i], count )\n"}
{"task_id": "Open/24", "completion": "    if n == 0 :\n        return 0\n    if n == 1 :\n        return 1\n    if n % 2 == 0 :\n        return n // 2\n    return (n + 1) // 2\n"}
{"task_id": "Open/25", "completion": "    total = 0\n    for i in range ( 1, n + 1 ) :\n        total += i ** 2\n    return total\n"}
{"task_id": "Open/26", "completion": "    if n == 1 :\n        return 1\n    if n == 2 :\n        return 2\n    if n == 3 :\n        return 4\n    if n == 4 :\n        return 8\n    if n == 5 :\n        return 16\n    if n == 6 :\n        return 32\n    if n == 7 :\n        return 64\n    if n == 8 :\n        return 128\n    if n == 9 :\n        return 256\n    if n == 10 :\n        return 512\n    if n == 11 :\n        return 1024\n    if n == 12 :\n        return 2048\n    if n == 13 :\n        return 4096\n    if n == 14 :\n        return 8192\n    if n == 15 :\n        return 16384\n    if n == 16 :\n        return 32768\n    if n == 17 :\n        return 65536\n    if n == 18 :\n        return 131072\n    if n == 19 :\n        return 262144\n    if n == 20 :\n        return 524288\n    if n == 21 :\n        return 1048576\n    if n == 22 :\n        return 2097152\n"}
{"task_id": "Open/27", "completion": "    if x > y :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/28", "completion": "    return 9 * n * n - 9 * n + 1\n"}
{"task_id": "Open/29", "completion": "    return ( (a - b) / a ) * 100\n"}
{"task_id": "Open/30", "completion": "    sum = 0\n    for i in range ( n ) :\n        sum += i**2\n    return sum / n\n"}
{"task_id": "Open/31", "completion": "    if k > n :\n        return None\n    if k == 0 :\n        return arr[0]\n    if k == 1 :\n        return min(arr)\n    if k == 2 :\n        return max(arr)\n    if k == 3 :\n        return min(arr) + max(arr)\n    if k == 4 :\n        return min(arr) - max(arr)\n    if k == 5 :\n        return min(arr) + max(arr) - min(arr)\n    if k == 6 :\n        return min(arr) - max(arr) + max(arr)\n    if k == 7 :\n        return min(arr) + max(arr) - min(arr) + max(arr)\n    if k == 8 :\n        return min(arr) + max(arr) - min(arr) + max(arr)\n    if k == 9 :\n        return min(arr) + max(arr) - min(arr) + max(arr)\n    if k == 10 :\n        return min(arr) + max(arr) - min(arr) + max(arr)\n"}
{"task_id": "Open/32", "completion": "    return 3**(n-1)\n"}
{"task_id": "Open/33", "completion": "    if n == 1 :\n        return 1\n    else :\n        return n * findTerm( n - 1 )\n\n"}
{"task_id": "Open/34", "completion": "    \n    # Your code here\n    count = 0\n    prod = 1\n    for i in range( len( a ) ) :\n        prod *= a[ i ]\n        if prod < k :\n            count += 1\n    return count\n\n"}
{"task_id": "Open/35", "completion": "    count = 0\n    for i in range(1,n+1) :\n        if (i % d == 0) :\n            count += 1\n    return count\n"}
{"task_id": "Open/36", "completion": "    if n == 0 :\n        return 1\n    if n == 1 :\n        return arr[0]\n    if arr[0] < 0 :\n        return arr[0]\n    for i in range(1,n+1) :\n        if arr[i] < 0 :\n            arr[i] = arr[i] + n\n    for i in range(1,n+1) :\n        if arr[i] > n :\n            return i\n    return n+1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/37", "completion": "    \n    if n == 1 :\n        return 1\n    elif n == 2 :\n        return 2\n    else :\n        return ways( n - 1 ) + ways( n - 2 )\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}
{"task_id": "Open/38", "completion": "    area = 0\n    while b > l :\n        area += b * b\n        b -= 1\n    return area\n"}
{"task_id": "Open/39", "completion": "    return sum(range(1,N+1))\n"}
{"task_id": "Open/40", "completion": "    if len( arr ) == 0 :\n        return -1\n    if len( arr ) == 1 :\n        return 0\n    if len( arr ) == 2 :\n        return max( arr[0], arr[1] )\n    if len( arr ) == 3 :\n        return max( arr[0], arr[1], arr[2] )\n    if len( arr ) == 4 :\n        return max( arr[0], arr[1], arr[2], arr[3] )\n    if len( arr ) == 5 :\n        return max( arr[0], arr[1], arr[2], arr[3], arr[4] )\n    if len( arr ) == 6 :\n        return max( arr[0], arr[1], arr[2], arr[3], arr[4], arr[5] )\n    if len( arr ) == 7 :\n        return max( arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6] )\n   "}
{"task_id": "Open/41", "completion": "    if len(arr) == 0 :\n        return 0\n    max_len = 0\n    start = 0\n    for i in range(n) :\n        if arr[i] == 0 :\n            max_len = max(max_len, i - start + 1)\n            start = i + 1\n    return max_len\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/42", "completion": "    if k == 1 :\n        return a[0]\n    if k == 2 :\n        return max(a[0], a[-1])\n    return max(a[0], a[-1], a[k-1])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/43", "completion": "    count = 0\n    count_sum = 0\n    for i in range(n) :\n        count_sum += array[i]\n        if count_sum >= k :\n            count += 1\n            count_sum = 0\n    return count\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/44", "completion": "    if len( arr ) == 0 :\n        return 0\n    if len( arr ) == 1 :\n        return arr[0]\n    if len( arr ) == 2 :\n        return arr[0] + arr[1]\n    if len( arr ) == 3 :\n        return arr[0] + arr[1] + arr[2]\n    if len( arr ) == 4 :\n        return arr[0] + arr[1] + arr[2] + arr[3]\n    if len( arr ) == 5 :\n        return arr[0] + arr[1] + arr[2] + arr[3] + arr[4]\n    if len( arr ) == 6 :\n        return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5]\n    if len( arr ) == 7 :\n        return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6]\n    if len( arr ) == 8 :\n        return arr[0] +"}
{"task_id": "Open/45", "completion": "    \n    # Your code here\n    min = arr[0]\n    cost = 0\n    for i in range(1,n) :\n        if arr[i] < min :\n            min = arr[i]\n        cost += min\n    return cost\n\n"}
{"task_id": "Open/46", "completion": "    \n    max_diff = 0\n    for i in range( len( array ) ) :\n        for j in range( i + 1, len( array ) ) :\n            diff = array[ i ] - array[ j ]\n            if diff > max_diff :\n                max_diff = diff\n    return max_diff\n\n"}
{"task_id": "Open/47", "completion": "    return ( a * x1 + b * y1 + c ) == 0\n"}
{"task_id": "Open/48", "completion": "    count = 0\n    for i in range ( 0, a ) :\n        count += i + ( a ^ i )\n    return count\n"}
{"task_id": "Open/49", "completion": "    if L == 0 :\n        return R\n    if R == 0 :\n        return L\n    return max( L, maxAND ( L-1, R ) )\n\n"}
{"task_id": "Open/50", "completion": "    if n == 0 :\n        return -1\n    if n == 1 :\n        return a[0]\n    if n == 2 :\n        return min(a[0], a[1])\n    if n == 3 :\n        return min(a[0], a[1], a[2])\n    if n == 4 :\n        return min(a[0], a[1], a[2], a[3])\n    if n == 5 :\n        return min(a[0], a[1], a[2], a[3], a[4])\n    if n == 6 :\n        return min(a[0], a[1], a[2], a[3], a[4], a[5])\n    if n == 7 :\n        return min(a[0], a[1], a[2], a[3], a[4], a[5], a[6])\n    if n == 8 :\n        return min(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7])\n    if n == 9"}
{"task_id": "Open/51", "completion": "    return ( ( 1 + ( 3**n ) ) / 6 )\n"}
{"task_id": "Open/52", "completion": "    \n    # Your code here\n    result = 0\n    for i in range( n ) :\n        for j in range( n ) :\n            result = result ^ arr[i][j]\n    return result\n\n"}
{"task_id": "Open/53", "completion": "    count = 0\n    for i in range ( 0, N ) :\n        if ( ( i & 1 ) == 0 ) :\n            count += 1\n    return count\n\n"}
{"task_id": "Open/54", "completion": "    sum = 0\n    for i in range(n) :\n        sum += a[i]\n    if sum == k :\n        return True\n    else :\n        return False\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/55", "completion": "    return ( n & ( n - 1 ) ) == 0\n"}
{"task_id": "Open/56", "completion": "    if len( s ) == 0 :\n        return 0\n    if len( s ) == 1 :\n        return 1\n    if len( s ) == 2 :\n        return 2\n    \n    dp = [ [ 0 for _ in range( len( s ) + 1 ) ] for _ in range( len( s ) + 1 ) ]\n    dp[ 0 ] = [ 1 for _ in range( len( s ) + 1 ) ]\n    dp[ 1 ] = [ 1 for _ in range( len( s ) + 1 ) ]\n    \n    for i in range( 2, len( s ) + 1 ) :\n        for j in range( i - 1, -1, -1 ) :\n            if s[ j ] == s[ i - 1 ] :\n                dp[ i ][ j ] = dp[ i - 1 ][ j + 1 ]\n            else :\n                dp[ i ][ j ] = max( dp[ i - 1 ][ j ], dp[ i ][ j + 1 ] ) + 1\n    \n    return dp[ len( s ) ][ 0 ]\n\n"}
{"task_id": "Open/57", "completion": "    if (N % K) == 0 :\n        return N\n    else :\n        return N - (N % K)\n"}
{"task_id": "Open/58", "completion": "    result = 0\n    var1 = arr[0]\n    var2 = arr[1]\n    for i in range(2, N+1) :\n        result = result + var1 * var2\n        var1 = var2\n        var2 = result\n    return result\n\n"}
{"task_id": "Open/59", "completion": "    if reversals == 0 :\n        return arr[index]\n    else :\n        return answer ( arr, ranges[0], reversals - 1, index ) + answer ( arr, ranges[1], reversals, index )\n\n\n"}
{"task_id": "Open/60", "completion": "    for i in range ( 1, n + 1 ) :\n        for j in range ( 1, n + 1 ) :\n            if i + j == n :\n                return True\n    return False\n"}
{"task_id": "Open/61", "completion": "    if a == b :\n        return 1\n    if a == b[0] :\n        return getCount(a[1:], b[1:]) + getCount(a[1:], b[0])\n    else :\n        return -1\n"}
{"task_id": "Open/62", "completion": "    if len( str ) < 2 :\n        return str\n    else :\n        return str[1:] + str[0] + str[2:]\n"}
{"task_id": "Open/63", "completion": "    step = 1\n    min_value = math.log( arr[0] )\n    for i in range( 1, n ) :\n        min_value = min( min_value, math.log( arr[i] ) )\n        step = step * i\n    return min_value * step\n\n\n"}
{"task_id": "Open/64", "completion": "    \n    if len(s) == 0 :\n        return \"-1\"\n    \n    max_len = 0\n    max_str = \"\"\n    \n    for i in range( len(s) ) :\n        if s[i] == \"1\" :\n            max_len = max( max_len, i - max_len )\n            max_str = s[i:]\n        else :\n            max_str = s[i:]\n            \n    return max_str + max_len\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}
{"task_id": "Open/65", "completion": "    if n == 0 :\n        return 0\n    if k == 0 :\n        return 1\n    if k > n :\n        return 0\n    i = 0\n    j = 0\n    while i < n :\n        if a[i] == a[j] :\n            j += 1\n        else :\n            i += 1\n    return j\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/66", "completion": "    if n == 0 :\n        return 0\n    if n == 1 :\n        return arr[0]\n    if k == 0 :\n        return arr[0]\n    if k == 1 :\n        return arr[1]\n    if k == 2 :\n        return (arr[0] + arr[1]) / 2\n    if k == 3 :\n        return (arr[0] + arr[1] + arr[2]) / 3\n    if k == 4 :\n        return (arr[0] + arr[1] + arr[2] + arr[3]) / 4\n    if k == 5 :\n        return (arr[0] + arr[1] + arr[2] + arr[3] + arr[4]) / 5\n    if k == 6 :\n        return (arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5]) / 6\n    if k == 7 :\n        return (arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr["}
{"task_id": "Open/67", "completion": "    count = 0\n    for i in range(n) :\n        if a[i] == 1 :\n            count += abs(a[i] - 1)\n        else :\n            count += abs(a[i] - -1)\n    if count % 2 == 0 :\n        count += n\n    else :\n        if n % 2 == 1 :\n            count += n\n    return count\n"}
{"task_id": "Open/68", "completion": "\n    if n == 1 :\n        return 0\n    else :\n        v = []\n        n -= 1\n        while n >= 5 :\n            v.append(n % 5)\n            n = n // 5\n        result = 0\n        for i in reversed(v) :\n            result = result * 10 + i\n        return result * 2\n"}
{"task_id": "Open/69", "completion": "    if n == 0 :\n        return False\n    if n & 1 == 0 :\n        return False\n    if n & 2 == 0 :\n        return False\n    if n & 4 == 0 :\n        return False\n    if n & 8 == 0 :\n        return False\n    if n & 16 == 0 :\n        return False\n    if n & 32 == 0 :\n        return False\n    if n & 64 == 0 :\n        return False\n    return True\n"}
{"task_id": "Open/70", "completion": "    if x > n :\n        return x\n    else :\n        return (n + x) // 2\n"}
{"task_id": "Open/71", "completion": "    sum = 0\n    for i in range( n ) :\n        sum += 2\n    return sum\n"}
{"task_id": "Open/72", "completion": "    \n    sum = 0\n    for i in range ( 1, n + 1 ) :\n        sum = sum + i\n    return sum\n"}
{"task_id": "Open/73", "completion": "    maxm = arr[0]\n    for i in range(1,n) :\n        if arr[i] > maxm :\n            maxm = arr[i]\n    return maxm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/74", "completion": "    count = 0\n    for i in range( n ) :\n        for j in range( i + 1, n ) :\n            if a[i] > a[j] :\n                count += 1\n    return count\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/75", "completion": "    return ( n & 0b11111111 ) | ( n & 0b1111 ) | ( n & 0b1111 )\n"}
{"task_id": "Open/76", "completion": "    \n    # Your code here\n    changes = 0\n    for i in range( n ) :\n        if A[i] == 1 :\n            changes += 1\n        else :\n            A[i] = 0\n    return changes\n\n"}
{"task_id": "Open/77", "completion": "    return radian * ( 180 / math.pi )\n"}
{"task_id": "Open/78", "completion": "    return math.floor( n / 2 )\n"}
{"task_id": "Open/79", "completion": "    \n    sum = 0\n    for i in range ( n ) :\n        sum = sum + a\n        a = a + d\n    return sum\n"}
{"task_id": "Open/80", "completion": "    if n % 2 == 0 :\n        return 1\n    else :\n        return 2**(n.bit_length() - 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/81", "completion": "    if row == 0 and column == 0 :\n        return 1\n    elif row == 0 :\n        return Square ( row - 1, column, moves )\n    elif column == 0 :\n        return Square ( row, column - 1, moves )\n    elif row == 8 and column == 8 :\n        return Square ( row + 1, column, moves )\n    elif row == 8 :\n        return Square ( row, column + 1, moves )\n    elif column == 8 :\n        return Square ( row, column - 1, moves )\n    else :\n        return 0\n"}
{"task_id": "Open/82", "completion": "    if n == 0 :\n        return 0\n    if n == 1 :\n        return 1\n    return n + findNumber( n - 1 )\n"}
{"task_id": "Open/83", "completion": "    \n    # Your code here\n    last = [0] * 26\n    for i in range( len( s ) ) :\n        last[ ord( s[ i ] ) - ord( s[ 0 ] ) ] += 1\n    sorted_s = sorted( s )\n    for i in range( len( sorted_s ) ) :\n        if last[ ord( sorted_s[ i ] ) - ord( sorted_s[ 0 ] ) ] == 0 :\n            last[ ord( sorted_s[ i ] ) - ord( sorted_s[ 0 ] ) ] += 1\n            s = s[:i] + s[i+1:]\n            break\n    return s\n\n"}
{"task_id": "Open/84", "completion": "    arr = [0] * n\n    for i in range(l, r + 1) :\n        if i % 2 == 0 :\n            arr[i] += 1\n    return sum(arr)\n"}
{"task_id": "Open/85", "completion": "    if x < y :\n        return x\n    else :\n        return y\n"}
{"task_id": "Open/86", "completion": "    if N == 0 :\n        return A\n    elif N == 1 :\n        return B\n    else :\n        return findNthNumber ( A, B - 1, N - 1 ) + findNthNumber ( A, B, N - 2 )\n"}
{"task_id": "Open/87", "completion": "    count = 0\n    for i in range( len( str ) ) :\n        if str[i:i+len( substr )] == substr :\n            count += 1\n    return count\n\n"}
{"task_id": "Open/88", "completion": "    \n    emi = (p * r * (1 + r)**t) / ((1 + r)**t - 1)\n    return emi\n"}
{"task_id": "Open/89", "completion": "    count = 0\n    for i in range(A) :\n        for j in range(B) :\n            for k in range(C) :\n                if i * k > j * j :\n                    count += 1\n    return count\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/90", "completion": "    count = 0\n    for i in range(l,r+1) :\n        if i % 10 == 2 or i % 10 == 3 or i % 10 == 9 :\n            count += 1\n    return count\n"}
{"task_id": "Open/91", "completion": "    if n == 0 :\n        return 0\n    if n == 1 :\n        return 1\n    if n == 2 :\n        return 2\n    if n == 3 :\n        return 3\n    if n == 4 :\n        return 4\n    if n == 5 :\n        return 5\n    if n == 6 :\n        return 6\n    if n == 7 :\n        return 7\n    if n == 8 :\n        return 8\n    if n == 9 :\n        return 9\n    if n == 10 :\n        return 10\n    if n == 11 :\n        return 11\n    if n == 12 :\n        return 12\n    if n == 13 :\n        return 13\n    if n == 14 :\n        return 14\n    if n == 15 :\n        return 15\n    if n == 16 :\n        return 16\n    if n == 17 :\n        return 17\n    if n == 18 :\n        return 18\n    if n == 19 :\n        return 19\n    if n == 20 :\n        return 20\n    if n == 21 :\n        return 21\n    if n == 22 :\n        return 22\n    if"}
{"task_id": "Open/92", "completion": "    \n    maxLen = 0\n    maxLenEven = 0\n    for i in range( len( str ) ) :\n        if ( str[i] == 'a' ) :\n            if ( i % 2 == 0 ) :\n                maxLen = i\n                maxLenEven = i\n    return maxLen, maxLenEven\n\n"}
{"task_id": "Open/93", "completion": "    count = 0\n    for i in range ( 2, n + 1 ) :\n        if n % i == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/94", "completion": "    if k <= 0 :\n        return ''\n    s = list(range(n))\n    for i in range(n) :\n        s[i] = chr(ord('a') + (i + k))\n    return ''.join(s)\n"}
{"task_id": "Open/95", "completion": "    distance = 0\n    while n > 0 :\n        distance += fuel\n        n -= 1\n    return distance\n"}
{"task_id": "Open/96", "completion": "    \n    # Your code here\n    if len( arr ) == 0 :\n        return 0\n    if len( arr ) == 1 :\n        return 1\n    \n    total = 0\n    for i in range( len( arr ) ) :\n        total += arr[ i ]\n    \n    if total % 2 == 0 :\n        return 1\n    else :\n        return 0\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}
{"task_id": "Open/97", "completion": "    if word in sentence :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/98", "completion": "    step = 1\n    while n > 0 :\n        n = n // step\n        step += 1\n    return step\n"}
{"task_id": "Open/99", "completion": "    if ( a == b and a == c ) or ( b == c and b == a ) or ( c == a and c == b ) :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/100", "completion": "    if x < y :\n        return False\n    while x > y :\n        x = x >> 1\n        y = y >> 1\n    return x == y\n"}
{"task_id": "Open/101", "completion": "    count = 0\n    for i in range( len( s ) ) :\n        if s[i]!= s[i-1] :\n            count += 1\n    return count\n"}
{"task_id": "Open/102", "completion": "    count = 0\n    for i in string :\n        if i == '0' :\n            count += 1\n        else :\n            count += 2\n    return count\n"}
{"task_id": "Open/103", "completion": "    if n == 0 :\n        return 0\n    if n == 1 :\n        return 1\n    if n == 2 :\n        return min(arr[0], arr[1])\n    min_removal = float('inf')\n    for i in range(2, n) :\n        min_removal = min(min_removal, abs(arr[i] - arr[i-1]))\n    return min_removal\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/104", "completion": "    if left == right :\n        return 1\n    if left < right :\n        return countMaxSetBits ( left, left - 1 ) + countMaxSetBits ( right, right - 1 )\n    else :\n        return 0\n"}
{"task_id": "Open/105", "completion": "    return n >> 1\n"}
{"task_id": "Open/106", "completion": "    if n == 1 :\n        return False\n    if n == 2 :\n        return True\n    if n == 3 :\n        return True\n    if n % 2 == 0 :\n        return False\n    if n % 3 == 0 :\n        return False\n    if n % 5 == 0 :\n        return False\n    return True\n"}
{"task_id": "Open/107", "completion": "    oddDays = 0\n    leapYears = 0\n    centuries = 0\n    leap = 0\n    nonLeap = 0\n    leapYear = 0\n    nonLeapYear = 0\n    leapYear = N & 0b1111\n    nonLeapYear = N & 0b111111\n    leapYear = N & 0b11111111\n    leapYear = N & 0b1111111111\n    leapYear = N & 0b111111111111\n    leapYear = N & 0b11111111111111\n    leapYear = N & 0b11111111111111\n    leapYear = N & 0b11111111111111\n    leapYear = N & 0b11111111111111\n    leapYear = N & 0b11111111111111\n    leapYear = N & 0b11111111111111\n    leapYear = N & 0b11111111111111\n    leapYear = N & 0b11111111111111\n    leapYear = N & 0b11111111111111\n    leapYear = N & 0b11111111111111\n    leapYear = N & 0b11111111111111\n    leapYear = N & 0b11111111111111"}
{"task_id": "Open/108", "completion": "    if a < 0 :\n        return -1\n    else :\n        return a + 1\n"}
{"task_id": "Open/109", "completion": "    count = 0\n    for i in str(n) :\n        if i == d :\n            count += 1\n    return count\n\n"}
{"task_id": "Open/110", "completion": "    if len ( n ) == 0 :\n        return False\n    if len ( n ) == 1 :\n        return True\n    if n[0] == n[-1] :\n        return False\n    return validate ( n[1:] )\n"}
{"task_id": "Open/111", "completion": "    if n == 0 :\n        return False\n    for i in range(len(a)) :\n        if a[i] % 5 == 0 or a[i] % 3 == 0 :\n            return False\n    return True\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/112", "completion": "    \n    # Your code here\n    arr = [0] * (n+1)\n    arr[0] = 4\n    arr[1] = 7\n    for i in range(2, n+1) :\n        if i % 2 == 0 :\n            arr[i] = arr[i//2] * 10\n        else :\n            arr[i] = arr[(i//2)-1] * 10\n    return arr[n]\n"}
{"task_id": "Open/113", "completion": "    arr = [0] * (n+1)\n    arr[0] = 3\n    arr[1] = 5\n    for i in range(2, n+1) :\n        if i % 2 == 1 :\n            arr[i] = arr[i//2] * 10\n        else :\n            arr[i] = arr[(i//2)-1] * 10\n    return arr[n]\n"}
{"task_id": "Open/114", "completion": "    if n == 0 :\n        return 0\n    if n == 1 :\n        return 1\n    if n == 2 :\n        return 2\n    if n % 2 == 0 :\n        return ( printNthElement ( n // 2 ) * 10 ) + ( printNthElement ( n // 2 - 1 ) * 2 )\n    else :\n        return ( printNthElement ( n // 2 ) * 10 ) + ( printNthElement ( n // 2 - 1 ) * 1 )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/115", "completion": "    if n == 0 :\n        return False\n    if n == 1 :\n        return a[0] % 11 == 0\n    if n == 2 :\n        return a[0] % 11 == 1 and a[1] % 11 == 0\n    if n == 3 :\n        return a[0] % 11 == 1 and a[1] % 11 == 1 and a[2] % 11 == 0\n    if n == 4 :\n        return a[0] % 11 == 1 and a[1] % 11 == 1 and a[2] % 11 == 1 and a[3] % 11 == 0\n    if n == 5 :\n        return a[0] % 11 == 1 and a[1] % 11 == 1 and a[2] % 11 == 1 and a[3] % 11 == 1 and a[4] % 11 == 0\n    if n == 6 :\n        return a[0] % 11 == 1 and a[1] % 11 == 1 and a[2] % 11 == 1 and a[3] % 11 == 1 and a[4] % 11 == 1 and a[5] % 11 == 0\n   "}
{"task_id": "Open/116", "completion": "    if l < 0 or b < 0 or h < 0 :\n        return -1\n    return l * b * h\n"}
{"task_id": "Open/117", "completion": "    \n    return \" \".join( [ x.capitalize() for x in string.split() ] )\n"}
{"task_id": "Open/118", "completion": "    return int( math.ceil( math.sqrt(8 * p + 1) - 1 ) / 2 )\n"}
{"task_id": "Open/119", "completion": "    if len(arr) == 0 :\n        return False\n    if len(arr) == 1 :\n        return True\n    if arr[0] == arr[1] :\n        return areDistinct(arr[2:])\n    else :\n        return False\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/120", "completion": "    count = 0\n    for i in range( len( string ) ) :\n        if string[i] == string[i+1] :\n            count += 1\n    return count\n"}
{"task_id": "Open/121", "completion": "    if lower == higher :\n        return lower\n    else :\n        return 2\n"}
{"task_id": "Open/122", "completion": "    max = 0\n    for i in ss :\n        if i.isdigit() :\n            max = max * 10 + int(i)\n        else :\n            max = max + int(i)\n    return max\n"}
{"task_id": "Open/123", "completion": "    max_length = 0\n    max_length_index = 0\n    max_length_index_start = 0\n    max_length_index_end = 0\n    max_length_index_start_end = 0\n    max_length_index_start_end_index = 0\n    max_length_index_start_end_index_start = 0\n    max_length_index_start_end_index_end = 0\n    max_length_index_start_end_index_end = 0\n    max_length_index_start_end_index_end = 0\n    max_length_index_start_end_index_end = 0\n    max_length_index_start_end_index_end = 0\n    max_length_index_start_end_index_end = 0\n    max_length_index_start_end_index_end = 0\n    max_length_index_start_end_index_end = 0\n    max_length_index_start_end_index_end = 0\n    max_length_index_start_end_index_end = 0\n    max"}
{"task_id": "Open/124", "completion": "    \n    if N > 0 and M > 0 :\n        return (N * M) - (K or (N and M))\n    elif N > 0 :\n        return (N * K)\n    elif M > 0 :\n        return (M * K)\n    else :\n        return 0\n    "}
{"task_id": "Open/125", "completion": "    if len(string)!= length :\n        return False\n    if string[0] == string[1] :\n        return isValid(string[2:],length-2)\n    return True\n"}
{"task_id": "Open/126", "completion": "    if n == 0 :\n        return 0\n    if n == 1 :\n        return 1\n    return 2 ** ( n - 1 )\n"}
{"task_id": "Open/127", "completion": "    if len(A)!= len(B) :\n        return False\n    for i in range(len(A)) :\n        if A[i]!= B[i] :\n            return False\n    return True\n"}
{"task_id": "Open/128", "completion": "    if x == y :\n        return False\n    if x > y :\n        return True\n    if x < y :\n        return False\n    return True\n"}
{"task_id": "Open/129", "completion": "    Sn_1 = 1\n    Sn_2 = 12\n    Sn_3 = 1213\n    for i in range ( n ) :\n        Sn_1, Sn_2, Sn_3 = Sn_2, Sn_3, Sn_1 + Sn_2\n    return Sn_3\n"}
{"task_id": "Open/130", "completion": "    \n    # Your code here\n    steps = 0\n    for i in range( n ) :\n        steps += abs( arr[i] - arr[i-1] )\n    return steps\n"}
{"task_id": "Open/131", "completion": "    return (n % 4) == 0 or (n % 4) == 3\n"}
{"task_id": "Open/132", "completion": "    m = 0\n    sum = 0\n    ans = 0\n    for i in range(1,N+1) :\n        if (a % i == 0) :\n            m = m + 1\n            sum = (m * (m + 1)) / 2\n            ans = ans + i\n    return ans\n"}
{"task_id": "Open/133", "completion": "    if N <= 2 :\n        return N\n    elif N <= 4 :\n        return N + 3\n    elif (N - 4) % 4 == 0 :\n        return N + 1\n    else :\n        return N + 2\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}
{"task_id": "Open/134", "completion": "    if ( arr[0] == arr[-1] and n % 2 == 0 ) :\n        return True\n    else :\n        return False\n\n"}
{"task_id": "Open/135", "completion": "    \n    if N == 1 :\n        return (R - L)\n    elif N > 1 :\n        return (countSum ( N - 1, L, R ) + 1)\n    else :\n        return 0\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}
{"task_id": "Open/136", "completion": "    if n == 0 :\n        return 0\n    if n == 1 :\n        return arr[0]\n    if n == 2 :\n        return min(arr[0],arr[1])\n    if n == 3 :\n        return min(arr[0],arr[1],arr[2])\n    if n == 4 :\n        return min(arr[0],arr[1],arr[2],arr[3])\n    if n == 5 :\n        return min(arr[0],arr[1],arr[2],arr[3],arr[4])\n    if n == 6 :\n        return min(arr[0],arr[1],arr[2],arr[3],arr[4],arr[5])\n    if n == 7 :\n        return min(arr[0],arr[1],arr[2],arr[3],arr[4],arr[5],arr[6])\n    if n == 8 :\n        return min(arr[0],arr[1],arr[2],arr[3],arr[4],arr[5],arr[6],arr[7])\n    if n == 9 :"}
{"task_id": "Open/137", "completion": "    if len( s ) == 0 :\n        return 0\n    if len( s ) == 1 :\n        return 1\n    if len( s ) == 2 :\n        return 2\n    if len( s ) == 3 :\n        return 3\n    if len( s ) == 4 :\n        return 4\n    if len( s ) == 5 :\n        return 5\n    if len( s ) == 6 :\n        return 6\n    if len( s ) == 7 :\n        return 7\n    if len( s ) == 8 :\n        return 8\n    if len( s ) == 9 :\n        return 9\n    if len( s ) == 10 :\n        return 10\n    if len( s ) == 11 :\n        return 11\n    if len( s ) == 12 :\n        return 12\n    if len( s ) == 13 :\n        return 13\n    if len( s ) == 14 :\n        return 14\n    if len( s ) == 15 :\n        return 15\n    if len( s ) == 16 :\n        return 16\n    if len( s ) == 17 :\n        return 17\n    if len"}
{"task_id": "Open/138", "completion": "    count = 0\n    for i in range(n) :\n        if arr[i] > arr[i-1] :\n            count += arr[i] - arr[i-1]\n            arr[i] = arr[i-1]\n        elif arr[i] <= arr[i-1] :\n            arr[i] = arr[i-1]\n    return count\n"}
{"task_id": "Open/139", "completion": "    return sum( map( ord, s ) ) / len( s )\n"}
{"task_id": "Open/140", "completion": "    if S < A :\n        return -1\n    if S == A :\n        return 0\n    if S == B :\n        return 1\n    if S < B :\n        return bankNotes ( A, B, S, N )\n    return bankNotes ( A, B, S - A, N )\n"}
{"task_id": "Open/141", "completion": "    return x * y // math.gcd(x, y)\n"}
{"task_id": "Open/142", "completion": "    count = 0\n    while n > 0 :\n        count += n & 1\n        n >>= 1\n    return count\n"}
{"task_id": "Open/143", "completion": "    step = 1\n    max_xor = 0\n    max_index = -1\n    for i in range( n ) :\n        xor = 0\n        for j in range( n ) :\n            xor = xor ^ arr[j]\n        if xor > max_xor :\n            max_xor = xor\n            max_index = i\n    return max_index\n\n\narr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\nn = len( arr )"}
{"task_id": "Open/144", "completion": "    if n == 0 :\n        return 0\n    if n == 1 :\n        return 1\n    dp = [ [0 for i in range(n+1)] for j in range(n+1) ]\n    dp[0][0] = 1\n    for i in range(1,n+1) :\n        for j in range(1,n+1) :\n            if arr[i-1] <= arr[j-1] :\n                dp[i][j] = max(dp[i-1][j],dp[i][j-1]+1)\n            else :\n                dp[i][j] = dp[i-1][j]\n    return dp[n][n]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/145", "completion": "    if n == 0 :\n        return -1\n    if n == 1 :\n        return arr[0]\n    if k == 0 :\n        return arr[0]\n    if k == 1 :\n        return arr[0]\n    if k == -1 :\n        return -1\n    if k == -2 :\n        return -1\n    if k == -3 :\n        return -1\n    if k == -4 :\n        return -1\n    if k == -5 :\n        return -1\n    if k == -6 :\n        return -1\n    if k == -7 :\n        return -1\n    if k == -8 :\n        return -1\n    if k == -9 :\n        return -1\n    if k == -10 :\n        return -1\n    if k == -11 :\n        return -1\n    if k == -12 :\n        return -1\n    if k == -13 :\n        return -1\n    if k == -14 :\n        return -1\n    if k == -15 :\n        return -1\n    if k == -16"}
{"task_id": "Open/146", "completion": "    if K == 0 :\n        return 0\n    if K == 1 :\n        return 1\n    if K == 2 :\n        return 2\n    if K == 3 :\n        return 3\n    if K == 4 :\n        return 4\n    if K == 5 :\n        return 5\n    if K == 6 :\n        return 6\n    if K == 7 :\n        return 7\n    if K == 8 :\n        return 8\n    if K == 9 :\n        return 9\n    if K == 10 :\n        return 10\n    if K == 11 :\n        return 11\n    if K == 12 :\n        return 12\n    if K == 13 :\n        return 13\n    if K == 14 :\n        return 14\n    if K == 15 :\n        return 15\n    if K == 16 :\n        return 16\n    if K == 17 :\n        return 17\n    if K == 18 :\n        return 18\n    if K == 19 :\n        return 19\n    if K == 20 :\n        return 20\n    if K == 21 :\n        return 21\n    if K == 22 :\n        return 22\n    if"}
{"task_id": "Open/147", "completion": "    if len( arr ) == 0 :\n        return 0\n    if len( arr ) == 1 :\n        return 1\n    if n == 1 :\n        return 1\n    if n == 2 :\n        return 2\n    if n == 3 :\n        return 3\n    if n == 4 :\n        return 4\n    if n == 5 :\n        return 5\n    if n == 6 :\n        return 6\n    if n == 7 :\n        return 7\n    if n == 8 :\n        return 8\n    if n == 9 :\n        return 9\n    if n == 10 :\n        return 10\n    if n == 11 :\n        return 11\n    if n == 12 :\n        return 12\n    if n == 13 :\n        return 13\n    if n == 14 :\n        return 14\n    if n == 15 :\n        return 15\n    if n == 16 :\n        return 16\n    if n == 17 :\n        return 17\n    if n == 18 :\n        return 18\n    if n == 19 :\n        return 19\n    if n == 20 :\n        return 20\n    if n == 21 :\n"}
{"task_id": "Open/148", "completion": "    return (n * (n + 1)) / 2\n"}
{"task_id": "Open/149", "completion": "    if s == 0 :\n        return 0\n    else :\n        return (s**0.5)\n"}
{"task_id": "Open/150", "completion": "    return (p**2 + q**2) / (p + q)\n"}
{"task_id": "Open/151", "completion": "    xor = 0\n    for i in range(len1) :\n        xor = xor ^ ord(str1[i])\n    return xor\n"}
{"task_id": "Open/152", "completion": "    if n == 0 :\n        return False\n    if n % 2 == 0 :\n        return check_binary ( n // 2 )\n    else :\n        return True\n\n"}
{"task_id": "Open/153", "completion": "    vowels = 'aeiou'\n    for i in range( len( s ) ) :\n        if s[i] not in vowels :\n            return False\n    return True\n"}
{"task_id": "Open/154", "completion": "    count = 0\n    while low <= high :\n        if low % 10 == k :\n            count += 1\n        low += 1\n    return count\n"}
{"task_id": "Open/155", "completion": "    if n < 0 :\n        return -1\n    if n == 0 :\n        return 0\n    if n == 1 :\n        return 1\n    if n % 2 == 0 :\n        return minAbsDiff(n//2)\n    return minAbsDiff(n//2) + math.floor(math.log(n, 2))\n"}
{"task_id": "Open/156", "completion": "    if r < 0 :\n        return -1\n    else :\n        return ( r * r ) / 2\n"}
{"task_id": "Open/157", "completion": "    return ''.join(sorted(s))\n"}
{"task_id": "Open/158", "completion": "    if ar == None or size == None :\n        return None\n    if ar[0] == ar[-1] :\n        return ar[0]\n    if size == 1 :\n        return ar[0]\n    if size == 2 :\n        return ar[0] + ar[1]\n    if size == 3 :\n        return ar[0] + ar[1] + ar[2]\n    if size == 4 :\n        return ar[0] + ar[1] + ar[2] + ar[3]\n    if size == 5 :\n        return ar[0] + ar[1] + ar[2] + ar[3] + ar[4]\n    if size == 6 :\n        return ar[0] + ar[1] + ar[2] + ar[3] + ar[4] + ar[5]\n    if size == 7 :\n        return ar[0] + ar[1] + ar[2] + ar[3] + ar[4] + ar[5] + ar[6]\n    if size == 8 :\n        return ar[0] + ar[1"}
{"task_id": "Open/159", "completion": "    count = 0\n    for i in range( len( str ) ) :\n        if str[i:i+3] == \"010\" :\n            count += 1\n    return count\n"}
{"task_id": "Open/160", "completion": "    for i in range(n) :\n        if arr[i] % 2 == 0 :\n            return arr[i]\n    return -1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/161", "completion": "    \n    xorArr = 0\n    ans = 0\n    \n    for i in range( n ) :\n        xorArr = xorArr ^ arr[i]\n        ans = ans if xorArr > ans else ans\n        \n    return ans\n\n"}
{"task_id": "Open/162", "completion": "    if sx == dx and sy == dy :\n        return True\n    elif sx == dx :\n        return sy == dy\n    elif sy == dy :\n        return sx == dx\n    else :\n        return False\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/163", "completion": "    if n == 0 :\n        return 0\n    if n == 1 :\n        return 1\n    if n % 2 == 0 :\n        return cntWays ( n // 2 ) + cntWays ( n // 2 - 1 )\n    else :\n        return cntWays ( n // 2 ) + cntWays ( n // 2 + 1 )\n"}
{"task_id": "Open/164", "completion": "    d = {}\n    for i in range( n ) :\n        d[ arr[i] ] = d.get( arr[i], 0 ) + 1\n    return sum ( [ v * d[ arr[i] ] for i in range( n ) ] )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/165", "completion": "    if height == 0 :\n        return 0\n    if height == 1 :\n        return 1\n    return 2 * AVLnodes( height - 1 ) + AVLnodes( height - 2 )\n"}
{"task_id": "Open/166", "completion": "    if source == dest :\n        return 0\n    if source < 0 :\n        return sys.maxsize\n    if dest < 0 :\n        return sys.maxsize\n    if step == 0 :\n        return 1\n    if step == 1 :\n        return steps( source, -step, dest )\n    if step == -1 :\n        return steps( source, step, dest )\n    return steps( source, -step, dest ) + steps( source, step, dest )\n\n"}
{"task_id": "Open/167", "completion": "    \n    # Your code here\n    if n == 1 :\n        return \"1\"\n    else :\n        return countnndSay ( n - 1 ) + countnndSay ( n - 1 )\n    "}
{"task_id": "Open/168", "completion": "    if len(arr) == 0 :\n        return 0\n    if len(arr) == 1 :\n        return 1\n    if arr[0] * arr[1] > N :\n        return 1\n    else :\n        return maxLength(arr[1:], N) + 1\n"}
{"task_id": "Open/169", "completion": "    return (m * n) / math.sqrt((m * m) + (n * n))\n"}
{"task_id": "Open/170", "completion": "    count = 0\n    sum = 0\n    for i in range(n) :\n        sum += arr[i]\n        if sum < k :\n            count += 1\n    return count\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/171", "completion": "    arr.sort()\n    count = 0\n    for i in range( n ) :\n        for j in range( i + 1, n ) :\n            for k in range( j + 1, n ) :\n                if arr[k] - arr[i] <= L :\n                    count += 1\n    return count\n\n"}
{"task_id": "Open/172", "completion": "    count = 0\n    for i in range( l, r + 1 ) :\n        if isPrime ( i ) :\n            count += 1\n    return count\n"}
{"task_id": "Open/173", "completion": "    if m == 0 :\n        return n\n    else :\n        return toggleLastMBits(n>>1,m-1) ^ n\n"}
{"task_id": "Open/174", "completion": "\n    if K == 9 :\n        K = 0\n    count = 0\n    for i in range( L, R + 1 ) :\n        if ( i % 9 == K ) :\n            count += 1\n    return count\n"}
{"task_id": "Open/175", "completion": "    if k > 10 :\n        return \"Error: k must be less than 10\"\n    if k == 0 :\n        return str(n)\n    if k == 1 :\n        return str(int(math.log10(n)))\n    if k == 2 :\n        return str(int(math.log10(n))) + str(n)\n    if k == 3 :\n        return str(int(math.log10(n))) + str(n) + str(int(math.log10(n)))\n    if k == 4 :\n        return str(int(math.log10(n))) + str(n) + str(int(math.log10(n))) + str(n)\n    if k == 5 :\n        return str(int(math.log10(n))) + str(n) + str(int(math.log10(n))) + str(n) + str(int(math.log10(n)))\n    if k == 6 :\n        return str(int(math.log10(n))) + str(n) + str(int(math.log10(n))) +"}
{"task_id": "Open/176", "completion": "    \n    for i in range ( n ) :\n        if A[i] > A[i-1] and A[i] < A[i+1] :\n            return A[i]\n    return -1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "Open/177", "completion": "    return ( a + b + c ) - max( a, b, c )\n"}
