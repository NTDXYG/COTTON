{"task_id": "Open/0", "completion": "    count = 0\n    for i in range(N):\n        for j in range(i+1,N):\n            if arr[i]!= arr[j] and arr[i] + K == arr[j]:\n                count += 1\n    return count\n"}
{"task_id": "Open/1", "completion": "    count = 0\n    for i in range(n-1):\n        if arr[i] == arr[i+1]:\n            count += 1\n    return count\n\narr = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10]"}
{"task_id": "Open/2", "completion": "    sum = 0\n    for i in range(r, l - 1, -1):\n        if n & (1 << i):\n            sum += 1\n    return sum\n"}
{"task_id": "Open/3", "completion": "    count = 0\n    for i in range ( n ) :\n        for j in range ( i + 1, n ) :\n            if ( A [ i ] + A [ j ] ) % K == 0 :\n                count += 1\n    return count\n"}
{"task_id": "Open/4", "completion": "    sum = 0\n    for i in a :\n        sum += i\n    if sum == 0 :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/5", "completion": "    count = 0\n    for i in x:\n        if i == '1':\n            count += 1\n    if count % 2 == 0:\n        return 0\n    else:\n        return 1\n"}
{"task_id": "Open/6", "completion": "    result = []\n    for i in vec:\n        if i > 0:\n            result.append(i)\n    result.sort()\n    return result\n"}
{"task_id": "Open/7", "completion": "    \n    max_length = 0\n    \n    for i in range(n):\n        for j in range(i+1, n):\n            if arr[i] > arr[j]:\n                max_length = max(max_length, j-i+1)\n    \n    return max_length\n"}
{"task_id": "Open/8", "completion": "    prime_factors = []\n    for i in range(1,a+1):\n        if a%i == 0:\n            prime_factors.append(i)\n    return len(set(prime_factors))\n"}
{"task_id": "Open/9", "completion": "    sum = 0\n    for i in range(0,n-1):\n        if abs(arr[i] - arr[i+1]) < sum:\n            sum = abs(arr[i] - arr[i+1])\n    return sum\n"}
{"task_id": "Open/10", "completion": "    result = []\n    for i in range(len(A)):\n        if A[i]!= B[i]:\n            result.append(A[i])\n            result.append(B[i])\n    return result\n"}
{"task_id": "Open/11", "completion": "    count = 0\n    for i in range ( size ) :\n        if array [ i ] % 2 == 0 and array [ i ]!= 0 and array [ i ]!= 2 :\n            count += 1\n    return count\n\narray = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 ]\nsize = len ( array )"}
{"task_id": "Open/12", "completion": "    count = 0\n    for i in s :\n        if i.isdigit() :\n            count += 1\n    return count\n"}
{"task_id": "Open/13", "completion": "    if n == 0 :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/14", "completion": "    if n % 4 == 0 :\n        return n\n    elif n % 4 == 1 :\n        return 1\n    elif n % 4 == 2 :\n        return n + 1\n    elif n % 4 == 3 :\n        return 0\n    else :\n        return \"\"\n"}
{"task_id": "Open/15", "completion": "    a = random.randint(2,n-1)\n    for i in range(t):\n        if (pow(a, (n-1)//2, n) == 1 or pow(a, (n-1)//2, n) == n-1):\n            a = random.randint(2,n-1)\n        else:\n            return -1\n    return 1\n"}
{"task_id": "Open/16", "completion": "    # Step 1. Initialize an empty dictionary to store the count of each character in the string.\n    count = {}\n    # Step 2. Iterate through the characters in the input string.\n    for i in s1 :\n        if i not in count :\n            count[i] = 1\n        else :\n            count[i] += 1\n    for i in s2 :\n        if i not in count :\n            count[i] = 1\n        else :\n            count[i] += 1\n    # Step 3. Iterate through the dictionary and check if the value is in the dictionary.\n    for i in count :\n        if count[i] == n :\n            return True\n    return False"}
{"task_id": "Open/17", "completion": "    return (x * (a + b) * (c - d)) / ((a * d) - (b * c))\n"}
{"task_id": "Open/18", "completion": "    count = 0\n    for i in range( len( s ) ) :\n        if i % 2 == 0 :\n            if s[ i ] == '1' :\n                count += 1\n        else :\n            if s[ i ] == '0' :\n                count += 1\n    return min( count, len( s ) - count )\n"}
{"task_id": "Open/19", "completion": "    count = 0\n    for i in range(1,n+1):\n        if n%2 == 0:\n            count += 1\n    return count\n"}
{"task_id": "Open/20", "completion": "    result = 1\n    for i in range(1,y+1):\n        result = result * x\n    return result\n"}
{"task_id": "Open/21", "completion": "    count0 = 0\n    count1 = 0\n    count2 = 0\n    count3 = 0\n    for i in range(1,n+1):\n        if i%3 == 0:\n            count0 += 1\n        if i%4 == 0:\n            count1 += 1\n        if i%5 == 0:\n            count2 += 1\n        if i%6 == 0:\n            count3 += 1\n    if count0%2 == 0 and count1%2 == 0 and count2%2 == 0 and count3%2 == 0:\n        return 1\n    else:\n        return 2\n"}
{"task_id": "Open/22", "completion": "    \n    max_length = 0\n    \n    for i in range( n ) :\n        if arr[i] > max_length :\n            max_length = arr[i]\n    \n    return max_length\n"}
{"task_id": "Open/23", "completion": "    if i == n :\n        if sum == 0 :\n            count += 1\n        return count\n    return subsetSum( arr, n, i + 1, sum - arr[i], count ) + subsetSum( arr, n, i + 1, sum, count )\n\narr = [ 1, 2, 3, 4, 5 ]\nn = len( arr )\nsum = 10\ncount = 0"}
{"task_id": "Open/24", "completion": "    return n\n"}
{"task_id": "Open/25", "completion": "    \n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum + 1\n"}
{"task_id": "Open/26", "completion": "    max_sum = 0\n    for i in range(1, n+1):\n        max_sum += i\n    return max_sum\n"}
{"task_id": "Open/27", "completion": "    return x <= y\n"}
{"task_id": "Open/28", "completion": "    return 9 * n * n - 9 * n + 1\n"}
{"task_id": "Open/29", "completion": "    return (b - a) / b\n"}
{"task_id": "Open/30", "completion": "    return sum(x**2 for x in range(1,n+1)) / n\n"}
{"task_id": "Open/31", "completion": "    arr.sort()\n    return arr[k-1]\n"}
{"task_id": "Open/32", "completion": "    return 3 ** ( n - 1 )\n"}
{"task_id": "Open/33", "completion": "    result = []\n    for i in range(1,n+1):\n        result.append(i*2-1)\n    return result\n"}
{"task_id": "Open/34", "completion": "    count = 0\n    for i in range(len(a)):\n        if a[i] >= k:\n            count += 1\n    return count\n"}
{"task_id": "Open/35", "completion": "    count = 0\n    for i in range(1,n+1):\n        if i%d == 0:\n            count += 1\n    return count\n"}
{"task_id": "Open/36", "completion": "    for i in range(n) :\n        while arr[i] > 0 and arr[i] <= n and arr[arr[i]-1]!= arr[i] :\n            arr[arr[i]-1], arr[i] = arr[i], arr[arr[i]-1]\n    for i in range(n) :\n        if arr[i]!= i+1 :\n            return i+1\n    return n+1\n"}
{"task_id": "Open/37", "completion": "    count = 0\n    for i in range(1,n):\n        if i%2 == 0:\n            count += 1\n    return count\n"}
{"task_id": "Open/38", "completion": "    sum = 0\n    for i in range(0,n):\n        sum += i**2\n    return sum\n"}
{"task_id": "Open/39", "completion": "    return N * (N + 1) / 2\n"}
{"task_id": "Open/40", "completion": "    count = 0\n    for i in range(n):\n        if arr[i] == 0:\n            count += 1\n        else:\n            count = 0\n    return count\n\narr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"}
{"task_id": "Open/41", "completion": "    \n    max_length = 0\n    \n    for i in range(n) :\n        if arr[i] > max_length :\n            max_length = arr[i]\n    \n    return max_length\n"}
{"task_id": "Open/42", "completion": "    max_length = a[0]\n    for i in range(1, n):\n        if a[i] < max_length:\n            max_length = a[i]\n        elif a[i] > max_length:\n            max_length = a[i]\n    return max_length\n"}
{"task_id": "Open/43", "completion": "    count = 0\n    for i in range(n) :\n        for j in range(i+1,n) :\n            if array[i]*array[j] <= k :\n                count += 1\n    return count\n"}
{"task_id": "Open/44", "completion": "    \n    result = []\n    \n    for i in range(n) :\n        result.append(abs(arr[i] - arr[i-1]) + 1)\n    \n    return result\n"}
{"task_id": "Open/45", "completion": "    min_val = min(arr)\n    return min_val * (n - 1)\n"}
{"task_id": "Open/46", "completion": "    max_distance = 0\n    for i in range(len(array)-1):\n        if abs(array[i]-array[i+1]) < max_distance:\n            max_distance = abs(array[i]-array[i+1])\n    return max_distance\n"}
{"task_id": "Open/47", "completion": "    if ( abs( x1 - x2 )!= abs( y1 - y2 ) ) :\n        raise Exception( \"The lengths of x and y are not equal.\" )\n    \n    diff = y2 - y1\n    for line in range( 0, 2 ) :\n        if ( ( a * ( x1 + x2 ) ) + ( b * ( y1 + y2 ) ) == ( c * diff ) ) :\n            return True\n    \n    return False\n"}
{"task_id": "Open/48", "completion": "    count = 0\n    for i in range(1,a+1):\n        if i > 0:\n            count += 1\n    return count\n"}
{"task_id": "Open/49", "completion": "    result = 0\n    for i in range( R, L - 1, -1 ) :\n        if i == R :\n            result += 1\n        else :\n            result = 0\n    return result\n"}
{"task_id": "Open/50", "completion": "    largest = 0\n    for i in range(1,n+1):\n        if a[i] > largest:\n            largest = a[i]\n    return largest\n"}
{"task_id": "Open/51", "completion": "    sum = 0\n    for i in range(1,n+1):\n        sum += (1/3)**i\n    return sum\n"}
{"task_id": "Open/52", "completion": "    result = []\n    for i in range(len(arr)):\n        for j in range(len(arr[0])):\n            if (i+j)%2 == 1:\n                result.append(arr[i][j])\n    return result\n"}
{"task_id": "Open/53", "completion": "    count = 0\n    for i in range(1,N+1):\n        if i%2 == 0:\n            count += 1\n    return count\n"}
{"task_id": "Open/54", "completion": "    sum = 0\n    for i in range(n):\n        sum += a[i]\n    if sum == k and n+1 == k:\n        return sum\n    else:\n        return -1\n"}
{"task_id": "Open/55", "completion": "    count = 0\n    for i in range(1, n+1):\n        if i & 1:\n            count += 1\n    if count == 1 or count == 0:\n        return True\n    else:\n        return False\n"}
{"task_id": "Open/56", "completion": "    count = 0\n    for i in s :\n        if i == '1' :\n            count += 1\n    return count\n"}
{"task_id": "Open/57", "completion": "    if N % K == 0 :\n        return N\n    else :\n        return N - ( N % K )\n"}
{"task_id": "Open/58", "completion": "    result = 0\n    var1 = arr[0]\n    var2 = arr[1]\n    result = result + var1 + var2 + (var1 * var2)/100\n    for i in range(2,N):\n        result = result + arr[i] + (result * arr[i])/100\n    return result\n"}
{"task_id": "Open/59", "completion": "    result = []\n    for i in range(index, len(arr)):\n        if arr[i] == arr[i-1]:\n            result.append(arr[i])\n    return result\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nranges = [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9]]\nreversals = 2\nindex = 5"}
{"task_id": "Open/60", "completion": "    return (n**0.5).is_integer()\n"}
{"task_id": "Open/61", "completion": "    count = 0\n    for i in a :\n        if i == b[count] :\n            count += 1\n        else :\n            count = 0\n    if count == len(b) :\n        return count\n    else :\n        return -1\n"}
{"task_id": "Open/62", "completion": "    result = \"\"\n    for i in range(len-1,-1,-1):\n        if str[i].isalpha():\n            if str[i] > str[i+1]:\n                result += str[i] - 1\n            else:\n                result += str[i]\n        else:\n            result += str[i]\n    return result\n"}
{"task_id": "Open/63", "completion": "    sum = 0\n    for i in range(n-1) :\n        if abs(arr[i] - arr[i+1]) < sum :\n            sum = arr[i]\n    return sum\n"}
{"task_id": "Open/64", "completion": "    result = 0\n    for char in s:\n        if char == '1':\n            result += 1\n        else:\n            return result\n    return -1\n"}
{"task_id": "Open/65", "completion": "    result = []\n    for i in range(n):\n        if a[i]!= k:\n            result.append(a[i])\n    return len(result)\n"}
{"task_id": "Open/66", "completion": "    \n    # Sort the array\n    arr.sort()\n    \n    # If the length of the array is odd, return the middle element\n    if len(arr) % 2 == 1 :\n        return arr[len(arr)//2]\n    \n    # If the length of the sorted array is even, return the average of the two middle elements\n    else :\n        return (arr[len(arr)//2] + arr[len(arr)//2 - 1])/2\n"}
{"task_id": "Open/67", "completion": "    count = 0\n    for i in range(n):\n        if a[i] > 0:\n            count += 1\n        elif a[i] < 0:\n            count += abs(a[i] - 1)\n    if count % 2 == 0:\n        return count\n    elif count % 2 == 1:\n        if count == 0:\n            return 2\n        else:\n            return count + 2\n"}
{"task_id": "Open/68", "completion": "    if n == 1 :\n        return 0\n    else :\n        v = []\n        n -= 1\n        while n > 0 :\n            v.append( n % 5 )\n            n = n // 5\n        result = 0\n        for i in range( len( v ) - 1, -1, -1 ) :\n            result = result * 10 + v[ i ]\n        return 2 * result\n"}
{"task_id": "Open/69", "completion": "    count = 0\n    for i in range(1, n+1):\n        if n & 1:\n            count += 1\n        n >>= 1\n    return count\n\n"}
{"task_id": "Open/70", "completion": "    largest = None\n    for i in range(1,n+1):\n        if n%i == 0:\n            largest = i\n    return largest\n"}
{"task_id": "Open/71", "completion": "    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n"}
{"task_id": "Open/72", "completion": "    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n"}
{"task_id": "Open/73", "completion": "    max_count = 0\n    count = 0\n    for i in range(n) :\n        if arr[i] == max_count :\n            count += 1\n        elif arr[i] > max_count :\n            max_count = arr[i]\n            count = 1\n    return max_count, count\n"}
{"task_id": "Open/74", "completion": "    count = 0\n    for i in range(1,n+1):\n        if isPalindrome(i):\n            count += 1\n    return count\n"}
{"task_id": "Open/75", "completion": "    return bin(n)[2:]\n"}
{"task_id": "Open/76", "completion": "    \n    count = 0\n    \n    for i in range(n):\n        if A[i]!= 0:\n            count += 1\n            \n    return count\n"}
{"task_id": "Open/77", "completion": "    return radian * 180 / math.pi\n"}
{"task_id": "Open/78", "completion": "    return math.floor(n/2)\n"}
{"task_id": "Open/79", "completion": "    sum = 0\n    for i in range(1,n+1):\n        sum += a + (i-1)*d\n    return sum\n"}
{"task_id": "Open/80", "completion": "    result = 1\n    for i in range(1,n+1):\n        if i % 2 == 0:\n            result = i\n    return result\n"}
{"task_id": "Open/81", "completion": "    \n    max_distance = 0\n    \n    for row in range(row,8):\n        distance = abs(row - column)\n        if distance < max_distance:\n            max_distance = distance\n    \n    return max_distance\n"}
{"task_id": "Open/82", "completion": "    result = 1\n    for i in range(1, n+1):\n        result += i\n    return result\n"}
{"task_id": "Open/83", "completion": "    # Step 1. Create a dictionary to store the count of each character in the string.\n    char_count = {}\n    \n    # Step 2. Iterate through the characters in the input string.\n    for char in s :\n        # If the character is not in the dictionary, add it with a count of 1.\n        if char not in char_count :\n            char_count[char] = 1\n        # If the character is already in the dictionary, increment its value by 1.\n        else :\n            char_count[char] += 1\n    \n    # Step 3. Find the maximum value in the dictionary.\n    max_count = max(char_count.values())\n    \n    # Step 4. Create a new list to store the new list.\n    new_list = []\n    \n    # Step 5. Iterate through the dictionary.\n    for char in char_count :\n        # If the character is not in the dictionary, append it to the new list.\n        if char_count[char] == max_count :\n            new_list.append(char)\n    \n    # Step 6. Return the new list.\n    return ''.join(new_list)\n"}
{"task_id": "Open/84", "completion": "    sum = 0\n    for i in range(0, n):\n        if i % 2 == 0:\n            sum += i\n    return sum\n"}
{"task_id": "Open/85", "completion": "    max_prime = 0\n    for i in range(1,x):\n        if x%i == 0 and y%i == 0:\n            if i > max_prime:\n                max_prime = i\n    return max_prime\n"}
{"task_id": "Open/86", "completion": "    result = []\n    for i in range(A,B+1):\n        result.append(i)\n    return result[N-1]\n"}
{"task_id": "Open/87", "completion": "    count = 0\n    for n in str :\n        if n == substr :\n            count += 1\n    return count\n"}
{"task_id": "Open/88", "completion": "    pass\n"}
{"task_id": "Open/89", "completion": "    max_count = 0\n    for i in range(len(A)):\n        for j in range(i+1, len(A)):\n            for k in range(j+1, len(A)):\n                if A[i] * k > B[j] * B[j]:\n                    max_count += 1\n    return max_count\n"}
{"task_id": "Open/90", "completion": "    count = 0\n    for i in range( l, r + 1 ) :\n        if i % 10 in [ 2, 3, 9 ] :\n            count += 1\n    return count\n"}
{"task_id": "Open/91", "completion": "    max_length = 0\n    for i in range( len( arr ) ) :\n        for j in range( i + 1, len( arr ) ) :\n            if arr[ i ] + arr[ j ] == arr[ j ] + arr[ i ] :\n                max_length = max( max_length, j - i + 1 )\n    return max_length\n"}
{"task_id": "Open/92", "completion": "    \n    max_length = 0\n    \n    for char in str :\n        if char.isalpha() :\n            if isPalindrome(char) :\n                max_length += 1\n            else :\n                break\n        elif char.isspace() :\n            break\n    \n    return max_length\n"}
{"task_id": "Open/93", "completion": "    count = 0\n    for i in range(1, n+1):\n        if i % 3 == 0:\n            count += 1\n    return count\n"}
{"task_id": "Open/94", "completion": "    result = \"\"\n    for i in range(n):\n        if not(ord(k) >= 97 and ord(k) <= 122):\n            result += k\n        else:\n            if ord(k) >= 97 and ord(k) <= 122:\n                result += chr(ord(k) + 1)\n                k = chr(ord(k) - 26)\n            else:\n                result += chr(ord(k) + 1)\n                k = chr(ord(k) - 1)\n    return result\n"}
{"task_id": "Open/95", "completion": "    max_distance = 0\n    for i in range(n-1):\n        distance = abs(s[i][0] - s[i+1][0]) + abs(s[i][1] - s[i+1][1])\n        if distance > max_distance:\n            max_distance = distance\n    return max_distance\n"}
{"task_id": "Open/96", "completion": "    max_sum = 0\n    for i in range(n):\n        max_sum = max(max_sum, arr[i])\n    sum_of_nums = sum(arr)\n    if max_sum * 2 == sum_of_nums:\n        return 1\n    else:\n        return 0\n"}
{"task_id": "Open/97", "completion": "    for character in sentence :\n        if character == word :\n            return True\n    return False\n"}
{"task_id": "Open/98", "completion": "    count = 0\n    while n > 0 :\n        n = n // 10\n        count += 1\n    return count\n"}
{"task_id": "Open/99", "completion": "    if a == b == c:\n        return True\n    elif a + k == b + k == c + k:\n        return True\n    elif a - k == b - k == c - k:\n        return True\n    else:\n        return False\n"}
{"task_id": "Open/100", "completion": "    if len(bin(x)) <= 1 :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/101", "completion": "    count = 0\n    for char in s :\n        if char in \"aeiou\" :\n            count += 1\n    return count\n"}
{"task_id": "Open/102", "completion": "    count = 0\n    for i in range(len(string)):\n        if string[i].isdigit():\n            count += 1\n        elif string[i].isalpha():\n            count += 1\n        elif string[i] == '0':\n            i += 1\n        else:\n            i += 2\n    return count\n"}
{"task_id": "Open/103", "completion": "    \n    max_distance = 0\n    for i in range(n-1) :\n        if arr[i+1] - arr[i] < max_distance :\n            max_distance = arr[i+1] - arr[i]\n    \n    return max_distance\n"}
{"task_id": "Open/104", "completion": "    \n    count = 0\n    max_count = 0\n    \n    for i in range(right, left-1, -1):\n        if i & 1:\n            count += 1\n            max_count = max(max_count, count)\n        else:\n            count = 0\n    \n    return max_count\n"}
{"task_id": "Open/105", "completion": "    result = 1\n    for i in range(1, n+1):\n        result *= 2\n    return result\n"}
{"task_id": "Open/106", "completion": "    return sum( [ i for i in range(1, n) if n % i == 0 ] ) == n\n"}
{"task_id": "Open/107", "completion": "    count = 0\n    for i in N :\n        if i % 2 == 0 :\n            count += i\n        elif i % 2!= 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/108", "completion": "    if a < 0 :\n        return -1\n    elif a == 1 :\n        return 1\n    else :\n        return 5 * a - 4\n"}
{"task_id": "Open/109", "completion": "    freq = {}\n    for char in str(n):\n        if char.isdigit():\n            freq[char] = 1\n        else:\n            freq[char] = freq.get(char, 0) + 1\n    return freq.get(str(d), 0)\n"}
{"task_id": "Open/110", "completion": "    pass\n"}
{"task_id": "Open/111", "completion": "    sum = 0\n    for i in a :\n        sum += i\n    if sum % 2 == 0 :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/112", "completion": "    result = []\n    for i in range(1,n):\n        if i%2 == 0:\n            result.append(i//2*10+7)\n        else:\n            result.append((i//2)*10+4)\n    return result[n-1]\n"}
{"task_id": "Open/113", "completion": "    result = []\n    for i in range(n+1):\n        if i%2 == 0:\n            result.append(i*10+3)\n        else:\n            result.append(i*10+5)\n    return result[n]\n"}
{"task_id": "Open/114", "completion": "    result = []\n    for i in range(1,n+1):\n        if i%2 == 0:\n            result.append(1)\n        else:\n            result.append(2)\n    return result\n"}
{"task_id": "Open/115", "completion": "    if n == 0 :\n        return True\n    if n == 1 :\n        return a[0] % 11 == 0\n    if a[0] % 11 == 0 :\n        return isPossibleToZero( a[1:], n-1 )\n    else :\n        return False\n"}
{"task_id": "Open/116", "completion": "    return (l**2 + b**2 + h**2) ** 0.5 if (l**2 + b**2 + h**2) > 0 else -1\n"}
{"task_id": "Open/117", "completion": "    result = \"\"\n    for char in string:\n        if char.isupper():\n            result += char\n    return result\n"}
{"task_id": "Open/118", "completion": "    return math.ceil( math.sqrt( 8 * p + 1 ) / 2 ) - 1\n"}
{"task_id": "Open/119", "completion": "    for i in range ( len ( arr ) ) :\n        for j in range ( i + 1, len ( arr ) ) :\n            if arr [ i ] == arr [ j ] :\n                return False\n    return True\n"}
{"task_id": "Open/120", "completion": "    # Your code here\n    return {}\n"}
{"task_id": "Open/121", "completion": "    largest = None\n    for i in range(higher, lower-1, -1):\n        if i > largest:\n            largest = i\n    return largest\n"}
{"task_id": "Open/122", "completion": "    result = \"\"\n    for i in ss :\n        if i.isdigit() :\n            result += i\n        else :\n            if int(result) > int(maximum) :\n                maximum = result\n            result = \"\"\n    if int(result) > int(maximum) :\n        maximum = result\n    return maximum\n"}
{"task_id": "Open/123", "completion": "    result = \"\"\n    for i in range(length):\n        if s[i].isdigit():\n            result += s[i]\n    return result\n"}
{"task_id": "Open/124", "completion": "    if N > M :\n        N, M = M, N\n    while K > 0 :\n        if N > M :\n            N -= M\n        else :\n            M -= N\n        K -= 1\n    return N * M\n"}
{"task_id": "Open/125", "completion": "    for i in range ( len ( string ) - 1 ) :\n        if string [ i ] == string [ i + 1 ] :\n            return False\n    return True\n"}
{"task_id": "Open/126", "completion": "    result = 1\n    for i in range(1, n+1):\n        result *= 2\n    return result\n"}
{"task_id": "Open/127", "completion": "    if len(str(A)) == len(str(B)) :\n        return A\n    else :\n        return None\n"}
{"task_id": "Open/128", "completion": "    return abs(x - y) > 1\n"}
{"task_id": "Open/129", "completion": "    pass\n"}
{"task_id": "Open/130", "completion": "    max_diff = 0\n    for i in range(1,n):\n        if abs(arr[i]-arr[i-1]) > max_diff:\n            max_diff = abs(arr[i]-arr[i-1])\n    return max_diff\n"}
{"task_id": "Open/131", "completion": "    return 0 if n % 4 == 0 or n % 4 == 3 else 1\n"}
{"task_id": "Open/132", "completion": "    m = (N // a) * (N // a + 1) // 2\n    sum = (m * (m + 1)) // 2\n    ans = a * sum\n    return ans\n"}
{"task_id": "Open/133", "completion": "    sum = 0\n    for i in range(1,N+1):\n        if i % 3 == 0:\n            sum += i\n    return sum\n"}
{"task_id": "Open/134", "completion": "    if n % 2 == 1 :\n        return arr[0]\n    else :\n        return arr[0]\n"}
{"task_id": "Open/135", "completion": "    sum = 0\n    for i in range(1,N+1):\n        if i <= R:\n            sum += 1\n    return sum\n"}
{"task_id": "Open/136", "completion": "    \n    result = 1\n    \n    while result in arr :\n        result += 1\n    \n    return result\n"}
{"task_id": "Open/137", "completion": "    return ''.join(sorted(s)) if ''.join(sorted(s)) else s"}
{"task_id": "Open/138", "completion": "    count = 0\n    for i in range(n-1):\n        if arr[i] > arr[i+1]:\n            count += arr[i] - arr[i+1]\n            arr[i+1] = arr[i]\n    return count\n"}
{"task_id": "Open/139", "completion": "    sum = 0\n    for i in s:\n        sum += ord(i)\n    return sum/len(s)\n"}
{"task_id": "Open/140", "completion": "    count = 0\n    for i in range(0,N):\n        if A*i >= S:\n            count += 1\n        elif B*i >= S:\n            count += 1\n        else:\n            return -1\n    return count\n"}
{"task_id": "Open/141", "completion": "    return ( x * y ) / math.gcd ( x, y )\n"}
{"task_id": "Open/142", "completion": "    count = 0\n    while n % 2 == 0 :\n        count += 1\n        n /= 2\n    return count\n"}
{"task_id": "Open/143", "completion": "    sum = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            sum = max(sum,arr[i]^arr[j])\n    return sum\n"}
{"task_id": "Open/144", "completion": "    max_length = 0\n    for i in range(n):\n        if arr[i] > max_length:\n            max_length = arr[i]\n    return max_length\n"}
{"task_id": "Open/145", "completion": "    \n    sum = 0\n    for i in range( n ) :\n        if arr[i]!= k :\n            sum += arr[i]\n    if sum == k :\n        return sum\n    else :\n        return -1\n\narr = [1, 2, 3, 4, 5]\nn = len( arr )\nk = 1"}
{"task_id": "Open/146", "completion": "    max_length = 0\n    count = 0\n    for num in nums:\n        if num == k:\n            count += 1\n        if count > max_length:\n            max_length = count\n    return max_length\n"}
{"task_id": "Open/147", "completion": "    # Write your code here.\n    return 0\n"}
{"task_id": "Open/148", "completion": "    sum = 0\n    for i in range(1,n+1):\n        sum = sum + i\n    return sum\n"}
{"task_id": "Open/149", "completion": "    return s**0.5\n"}
{"task_id": "Open/150", "completion": "    return (p**2 + q**2) / (p + q) / 100\n"}
{"task_id": "Open/151", "completion": "    result = \"\"\n    for i in range(len1):\n        result += str(ord(str1[i]))\n    return result\n"}
{"task_id": "Open/152", "completion": "    count = 0\n    for i in str(n):\n        if i == '1':\n            count += 1\n        else:\n            count = 0\n        if count == 2:\n            return False\n    return True\n"}
{"task_id": "Open/153", "completion": "    vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s)):\n        if s[i] in vowels:\n            if i > 0 and s[i] < s[i-1]:\n                return False\n    return True\n"}
{"task_id": "Open/154", "completion": "    count = 0\n    for i in range(low, high+1):\n        if i % 10 >= k:\n            count += 1\n    return count\n"}
{"task_id": "Open/155", "completion": "    min_diff = 0\n    for i in range(1,n+1):\n        if abs(i-pow(2,math.floor(math.log2(i)))) < abs(min_diff):\n            min_diff = abs(i-pow(2,math.floor(math.log2(i))))\n    return min_diff\n"}
{"task_id": "Open/156", "completion": "    result = 0\n    for i in range(0,r):\n        if i % 2 == 0:\n            result += i\n    return result\n"}
{"task_id": "Open/157", "completion": "    return ''.join(sorted(s))\n"}
{"task_id": "Open/158", "completion": "    sum = 0\n    count = 0\n    for i in range(size):\n        sum += ar[i]\n    for i in range(size):\n        if ar[i] == sum:\n            count += 1\n    return count\n"}
{"task_id": "Open/159", "completion": "    count = 0\n    for char in str :\n        if char == \" \" :\n            count += 1\n    return count\n"}
{"task_id": "Open/160", "completion": "    result = {}\n    for i in range(n):\n        if arr[i] not in result:\n            result[arr[i]] = 1\n        else:\n            result[arr[i]] += 1\n    for i in range(n):\n        if result[arr[i]]%2!= 0:\n            return arr[i]\n    return -1\n"}
{"task_id": "Open/161", "completion": "    xorArr = []\n    ans = 0\n    for i in range(n-1) :\n        xorArr.append(arr[i] ^ arr[i+1])\n    for i in range(n) :\n        if xorArr[i] > ans :\n            ans = xorArr[i]\n    return ans\n"}
{"task_id": "Open/162", "completion": "    return ( ( sx == dx ) or ( sy == dy ) )\n"}
{"task_id": "Open/163", "completion": "    count = 0\n    for i in range(1,n+1):\n        if i%3 == 0:\n            count += 1\n    return count\n"}
{"task_id": "Open/164", "completion": "    result = {}\n    for i in range(n):\n        if arr[i] not in result:\n            result[arr[i]] = 1\n        else:\n            result[arr[i]] += 1\n    return result.values()\n"}
{"task_id": "Open/165", "completion": "    count = 0\n    for node in graph:\n        if node == height:\n            count += 1\n    return count\n"}
{"task_id": "Open/166", "completion": "    max_diff = 0\n    for num in source :\n        if abs(num - step) > max_diff :\n            max_diff = abs(num - step)\n    return max_diff\n"}
{"task_id": "Open/167", "completion": "    count = 0\n    for i in range(n):\n        if i == 0:\n            count = 1\n        else:\n            count = 0\n            for j in range(len(str(i))):\n                if str(i)[j] == str(i)[j+1]:\n                    count += 1\n                else:\n                    count += 1\n                    print(count)\n    return count\n"}
{"task_id": "Open/168", "completion": "    max_length = 0\n    for i in range( N ) :\n        if arr[ i ] < 0 :\n            max_length = max( max_length, i + 1 )\n        else :\n            max_length = max( max_length, i + 1 - max_length )\n    return max_length\n"}
{"task_id": "Open/169", "completion": "    mean = sum(m)/len(m)\n    sum_of_squared_differences = sum([(x-mean)**2 for x in m])\n    return math.sqrt(sum_of_squared_differences)\n"}
{"task_id": "Open/170", "completion": "    count = 0\n    for i in range ( n ) :\n        sum = 0\n        for j in range ( i, n ) :\n            sum += arr[j]\n            if sum < k :\n                count += 1\n    return count\n"}
{"task_id": "Open/171", "completion": "    arr.sort()\n    count = 0\n    for i in range(len(arr)-2):\n        for j in range(i+1,len(arr)-1):\n            for k in range(j+1,len(arr)):\n                if arr[k] - arr[i] <= L:\n                    count += 1\n    return count\n"}
{"task_id": "Open/172", "completion": "    count = 0\n    for i in range(l,r+1):\n        if i%3==0:\n            count+=1\n    return count\n"}
{"task_id": "Open/173", "completion": "    result = 1\n    for i in range(1,n+1):\n        result *= i\n    return result\n"}
{"task_id": "Open/174", "completion": "    count = 0\n    for i in range(L,R+1):\n        if i%9 == 0 or i%9 == K:\n            count += 1\n    return count\n"}
{"task_id": "Open/175", "completion": "    result = 0\n    for i in range(1,n+1):\n        result = result * i\n        result = result + math.log10(i)\n    return result\n"}
{"task_id": "Open/176", "completion": "    for i in range(len(A)):\n        if A[i] >= A[i-1] and A[i] <= A[i+1]:\n            return A[i]\n    return -1\n"}
{"task_id": "Open/177", "completion": "    sum = 0\n    for i in range(1, a+1):\n        if i < b:\n            sum = i\n        elif i < c:\n            sum = i + b\n        else:\n            sum = i + b + c\n    return sum\n"}
