{"task_id": "Open/0", "completion": "\n    count = 0\n    for i in arr :\n        count += i\n        if i >= K :\n            count -= i\n    return count\n"}
{"task_id": "Open/1", "completion": "\n    count = 0\n    for i in range(0,n-1) :\n        if arr[i] == arr[i+1] :\n            count += 1\n    return count\n\narr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105"}
{"task_id": "Open/2", "completion": "\n    sum = 0\n    for i in range(l,r+1):\n        if i == n:\n            sum += 1\n    return sum\n"}
{"task_id": "Open/3", "completion": "\n    count = 0\n    for i in range(n) :\n        for j in range(i+1,n) :\n            if A[i] + A[j] % K == 0 :\n                count += 1\n    return count\n"}
{"task_id": "Open/4", "completion": "\n    \n    sum = 0\n    for i in a :\n        sum += i\n    if sum == 0 :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/5", "completion": "\n    count = 0\n    for i in x :\n        if i % 2 == 1 :\n            count += 1\n    if count % 2 == 0 :\n        return 1\n    else :\n        return 0\n"}
{"task_id": "Open/6", "completion": "\n    result = []\n    for i in range(len(vec)):\n        if vec[i] > 0:\n            result.append(i)\n    result.sort()\n    return result\n"}
{"task_id": "Open/7", "completion": "\n    max_length = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            if arr[i] > arr[j]:\n                max_length = max(max_length,1+findSubsequence(arr[i+1:],n-1-i))\n    return max_length\n"}
{"task_id": "Open/8", "completion": "\n    prime_factors = []\n    for i in range(1,a+1) :\n        if a % i == 0 :\n            prime_factors.append(i)\n    return prime_factors\n"}
{"task_id": "Open/9", "completion": "\n    sum = 0\n    for i in range(n) :\n        sum += abs(arr[i] - arr[i+1])\n    return sum\n"}
{"task_id": "Open/10", "completion": "\n    result = []\n    for i in range(len(A)) :\n        if A[i]!= B[i] :\n            result.append(A[i])\n            result.append(B[i])\n        else :\n            result.append(A[i])\n            result.append(B[i])\n            result.append(1)\n    return result\n"}
{"task_id": "Open/11", "completion": "\n    count = 0\n    for i in range(0, size) :\n        if array[i] % 2 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/12", "completion": "\n    count = 0\n    for i in s :\n        if i.isdigit() :\n            count += 1\n    return count\n"}
{"task_id": "Open/13", "completion": "\n    if n == 0 :\n        return True\n    elif n == 1 :\n        return False\n    else :\n        while n!= 1 :\n            if n % 2 == 0 :\n                return False\n            else :\n                n = n // 2\n        return True\n"}
{"task_id": "Open/14", "completion": "\n    \n    if n % 4 == 0 :\n        return n\n    elif n % 4 == 1 :\n        return 1\n    elif n % 4 == 2 :\n        return n + 1\n    elif n % 4 == 3 :\n        return 0\n    else :\n        return \"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}
{"task_id": "Open/15", "completion": "\n    result = 1\n    for i in range ( 1, n ) :\n        a = random.randint ( 2, n - 1 )\n        if ( a ** ( n - 1 ) ) % n == 1 :\n            result += 1\n    if result == n :\n        return 1\n    else :\n        return -1\n"}
{"task_id": "Open/16", "completion": "\n    d = {}\n    for i in range(n) :\n        if s1[i] == '0' and s2[i] == '1' :\n            d[s1[i]] = d.get(s1[i],0) + 1\n        elif s1[i] == '1' and s2[i] == '0' :\n            d[s1[i]] = d.get(s1[i],0) + 1\n        elif s1[i] == '0' and s2[i] == 'Z' :\n            d[s1[i]] = d.get(s1[i],0) + 1\n        elif s1[i] == 'Z' and s2[i] == '0' :\n            d[s1[i]] = d.get(s1[i],0) + 1\n        elif s1[i] == '0' and s2[i] == '1' :\n            d[s1[i]] = d.get(s1[i],0) + 1\n        elif s1[i"}
{"task_id": "Open/17", "completion": "\n    return (x * (a + b) * (c - d)) / ((a * d) - (b * c))\n"}
{"task_id": "Open/18", "completion": "\n    count = 0\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == '1':\n                count += 1\n        else:\n            if s[i] == '0':\n                count += 1\n    return min(count, len(s) - count)\n"}
{"task_id": "Open/19", "completion": "\n    count = 0\n    for i in range(1,n+1) :\n        if i % 2 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/20", "completion": "\n    if y == 0 :\n        return 1\n    else :\n        return x * product(x,y-1)\n"}
{"task_id": "Open/21", "completion": "\n    count0 = 0\n    count1 = 0\n    count2 = 0\n    count3 = 0\n    for i in a :\n        if i % 4 == 0 :\n            count0 += 1\n        if i % 4 == 1 :\n            count1 += 1\n        if i % 4 == 2 :\n            count2 += 1\n        if i % 4 == 3 :\n            count3 += 1\n    if count0 == n and count1 == n and count2 == n and count3 == n :\n        return 1\n    else :\n        return 2\n"}
{"task_id": "Open/22", "completion": "\n    max_length = 0\n    for i in range(n) :\n        if arr[i] > max_length :\n            max_length = arr[i]\n    return max_length\n"}
{"task_id": "Open/23", "completion": "\n    if i == n :\n        if sum == 0 :\n            return count + 1\n        else :\n            return 0\n    else :\n        count = subsetSum( arr, n, i + 1, sum, count )\n        if sum - arr[i] >= 0 :\n            count += subsetSum( arr, n, i + 1, sum - arr[i], count )\n        return count\n"}
{"task_id": "Open/24", "completion": "\n    return int( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\n    ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ("}
{"task_id": "Open/25", "completion": "\n    sum = 0\n    for i in range(1,n+1) :\n        sum += i**2\n    return sum\n"}
{"task_id": "Open/26", "completion": "\n    max_sum = 0\n    for i in range(1,n+1) :\n        if n % i == 0 :\n            max_sum += i\n    return max_sum\n"}
{"task_id": "Open/27", "completion": "\n    if y <= 1 :\n        return False\n    else :\n        return x % 2 == 0\n"}
{"task_id": "Open/28", "completion": "\n    return 9 * n * n - 9 * n + 1\n"}
{"task_id": "Open/29", "completion": "\n    return ( b - a ) * 100 / a\n"}
{"task_id": "Open/30", "completion": "\n    sum = 0\n    for i in range(1,n+1) :\n        sum += i**2\n    return sum/n\n"}
{"task_id": "Open/31", "completion": "\n    arr.sort()\n    return arr[k-1]\n"}
{"task_id": "Open/32", "completion": "\n    return 3**(n-1)\n"}
{"task_id": "Open/33", "completion": "\n    result = []\n    for i in range(1, n+1) :\n        result.append(i*2 + 1 - i)\n    return result\n"}
{"task_id": "Open/34", "completion": "\n    count = 0\n    for i in range(len(a)):\n        if a[i] >= k:\n            count += 1\n        else:\n            count += a[i] * (count + 1)\n    return count\n"}
{"task_id": "Open/35", "completion": "\n    count = 0\n    for i in range(1,n+1) :\n        if i == n :\n            count += 1\n        elif i % 10 == d :\n            count += 1\n    return count\n"}
{"task_id": "Open/36", "completion": "\n    arr.sort()\n    missing = 1\n    for i in range(1,n+1):\n        if i not in arr:\n            return i\n    return missing\n"}
{"task_id": "Open/37", "completion": "\n    count = 0\n    for i in range(1, n) :\n        if i % 2 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/38", "completion": "\n    sum = 0\n    for i in range(l,b+1) :\n        sum += i*i\n    return sum\n"}
{"task_id": "Open/39", "completion": "\n    return sum(range(1,N+1))\n"}
{"task_id": "Open/40", "completion": "\n    count = 0\n    for i in range(0,n):\n        if arr[i] == 1:\n            count = count + 1\n        else:\n            if count > 0:\n                count = count + 1\n            else:\n                count = 0\n    return count\n"}
{"task_id": "Open/41", "completion": "\n    max_length = 0\n    for i in range(n) :\n        if arr[i] == 0 :\n            max_length = max(max_length, 1)\n        else :\n            max_length = max(max_length, 1 + longestSubArray(arr[i+1:], n))\n    return max_length\n"}
{"task_id": "Open/42", "completion": "\n    max_length = 0\n    for i in range(1,n):\n        if a[i] < a[i-1]:\n            max_length = max(max_length,a[i-1])\n        else:\n            max_length = max(max_length,a[i])\n    return max_length\n"}
{"task_id": "Open/43", "completion": "\n    count = 0\n    for i in range(n):\n        for j in range(i,n):\n            if array[i]*array[j] <= k:\n                count += 1\n    return count\n"}
{"task_id": "Open/44", "completion": "\n    result = []\n    for i in range(n) :\n        result.append(abs(arr[i] - i))\n    return result\n"}
{"task_id": "Open/45", "completion": "\n    min_distance = 0\n    for i in range(n):\n        if arr[i] < min_distance:\n            min_distance = arr[i]\n    return min_distance * (n - 1)\n"}
{"task_id": "Open/46", "completion": "\n    max_distance = 0\n    for i in range(len(array) - 1):\n        diff = abs(array[i] - array[i + 1])\n        if diff > max_distance:\n            max_distance = diff\n    return max_distance\n"}
{"task_id": "Open/47", "completion": "\n    if ( a == b ) :\n        raise Exception (\"The lengths of x and y are equal.\")\n    \n    difference = ( y1 - y2 ) * ( a - c ) - ( x1 - x2 ) * ( b - c )\n    if ( difference == 0 ) :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/48", "completion": "\n    count = 0\n    for i in range(1, a + 1) :\n        if i > 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/49", "completion": "\n    result = 0\n    for i in range(R,L-1,-1) :\n        if i == R :\n            result += 1\n        else :\n            result += i & 1\n    return result\n"}
{"task_id": "Open/50", "completion": "\n    largest = 0\n    for i in range(1,n+1):\n        if a[i] > largest and a[i] % a[i] == 0:\n            largest = a[i]\n    return largest\n"}
{"task_id": "Open/51", "completion": "\n    if n == 0 :\n        return 1\n    else :\n        return 1/3**n + sum(n-1)\n"}
{"task_id": "Open/52", "completion": "\n    result = []\n    for i in range(n):\n        for j in range(n):\n            result.append(arr[i][j]*arr[i][j+1]*arr[i+1][j+1]*arr[i+1][j])\n    return result\n"}
{"task_id": "Open/53", "completion": "\n    count = 0\n    for i in range(1, N + 1) :\n        if i & 1 == i ^ 1:\n            count += 1\n    return count\n"}
{"task_id": "Open/54", "completion": "\n    sum = 0\n    for i in range(n) :\n        sum += a[i]\n    if sum + n - 1 == k :\n        return True\n    else :\n        return -1\n"}
{"task_id": "Open/55", "completion": "\n    sum = 0\n    for i in range(1, n+1):\n        if i & 1 == 1:\n            sum += 1\n    return sum == 1\n"}
{"task_id": "Open/56", "completion": "\n    count = 0\n    for i in s :\n        if i == '1' :\n            count += 1\n    return count\n"}
{"task_id": "Open/57", "completion": "\n    if N % K == 0 :\n        return N\n    else :\n        return N - (N % K)\n"}
{"task_id": "Open/58", "completion": "\n    result = 0\n    for i in range(2,N+1):\n        result += arr[i-1]\n        result = result * arr[i-1]\n    return result\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}
{"task_id": "Open/59", "completion": "\n    result = []\n    for i in range(len(arr)):\n        if i == index:\n            result.append(arr[i])\n        else:\n            if arr[i] == arr[i-1]:\n                result.append(arr[i])\n    for i in range(len(result)):\n        if i == len(result)-1:\n            break\n        if result[i] == result[i+1]:\n            result[i] = result[i+1]\n            result[i+1] = result[i]\n    return result\n"}
{"task_id": "Open/60", "completion": "\n    if n < 0 :\n        return False\n    if n == 0 :\n        return True\n    \n    squareRoot = int(n**0.5)\n    if squareRoot == 0 :\n        return True\n    \n    if squareRoot**2 == n :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/61", "completion": "\n    count = 0\n    for i in range(len(a)):\n        if a[i] == b[0]:\n            count += 1\n            b = b[1:]\n        else:\n            break\n    return count\n"}
{"task_id": "Open/62", "completion": "\n    result = \"\"\n    for i in range(len-1, -1, -1) :\n        if str[i].isalpha() :\n            result += str[i]\n        else :\n            result += str[i] - 1\n    return result\n"}
{"task_id": "Open/63", "completion": "\n    sum = 0\n    for i in range(n):\n        sum += math.log(arr[i])\n    return sum\n"}
{"task_id": "Open/64", "completion": "\n    result = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            result += 1\n        else:\n            result = max(result, len(s[i:]) - 1)\n    return result\n"}
{"task_id": "Open/65", "completion": "\n    result = []\n    for i in range(n) :\n        if a[i]!= k :\n            result.append(a[i])\n    return len(result)\n"}
{"task_id": "Open/66", "completion": "\n    arr.sort()\n    if n%2 == 0 :\n        return (arr[n//2-1] + arr[n//2])/2\n    else :\n        return arr[n//2]\n"}
{"task_id": "Open/67", "completion": "\n    count = 0\n    for i in range(n) :\n        if a[i] > 0 :\n            count += 1\n        elif a[i] < 0 :\n            count += abs(a[i] - 1)\n        elif a[i] == 0 :\n            count += 1\n    if count % 2 == 0 :\n        count += 2\n    return count\n"}
{"task_id": "Open/68", "completion": "\n    result = 0\n    if n == 1 :\n        return 0\n    else :\n        v = []\n        while n > 1 :\n            v.append(n % 5)\n            n = n // 5\n        v.append(n)\n        for i in range(len(v)-1, -1, -1) :\n            result = result * 10 + v[i]\n        return result\n"}
{"task_id": "Open/69", "completion": "\n    if n == 0 :\n        return False\n    while n > 0 :\n        if n & 1 == 0 :\n            return False\n        n = n >> 1\n    return True\n"}
{"task_id": "Open/70", "completion": "\n    largest = None\n    for i in range(1,n+1) :\n        if n % i == 0 :\n            if largest == None :\n                largest = i\n            elif i > largest :\n                largest = i\n    return largest\n"}
{"task_id": "Open/71", "completion": "\n    sum = 0\n    for i in range(n+1) :\n        sum += i\n    return sum\n"}
{"task_id": "Open/72", "completion": "\n    sum = 0\n    for i in range(1, n+1) :\n        sum += i\n    return sum\n"}
{"task_id": "Open/73", "completion": "\n    max_count = 0\n    for i in range(n) :\n        if arr[i] == max_count :\n            max_count += 1\n    return max_count\n"}
{"task_id": "Open/74", "completion": "\n    count = 0\n    for i in range(1,n+1) :\n        if (a[i] == a[i-1]) :\n            count += 1\n    return count\n"}
{"task_id": "Open/75", "completion": "\n    return int(bin(n)[2:])\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}
{"task_id": "Open/76", "completion": "\n    count = 0\n    for i in range(n):\n        if A[i]!= 0:\n            count += 1\n    return count\n"}
{"task_id": "Open/77", "completion": "\n    return 180 * radian\n"}
{"task_id": "Open/78", "completion": "\n    return math.floor(n/2)\n"}
{"task_id": "Open/79", "completion": "\n    sum = 0\n    for i in range(1,n+1) :\n        sum += a + (d*i)\n    return sum\n"}
{"task_id": "Open/80", "completion": "\n    result = 1\n    for i in range(1, n+1) :\n        if i % 2 == 0 :\n            result = i\n        else :\n            result = i\n    return result\n"}
{"task_id": "Open/81", "completion": "\n    max_distance = 0\n    for row in range(row,8) :\n        distance = abs(row - column)\n        if distance < max_distance :\n            max_distance = distance\n    return max_distance\n"}
{"task_id": "Open/82", "completion": "\n    result = 1\n    for i in range(1, n) :\n        result += i\n    return result\n"}
{"task_id": "Open/83", "completion": "\n    s = list(s)\n    s.sort()\n    s = ''.join(s)\n    return s\n"}
{"task_id": "Open/84", "completion": "\n    sum = 0\n    for i in range(n) :\n        if i < l :\n            sum += i\n        elif i > r :\n            sum += i\n        else :\n            if i % 2 == 0 :\n                sum += i\n    return sum\n"}
{"task_id": "Open/85", "completion": "\n    max_prime = 0\n    for i in range(1, x+1) :\n        if x % i == 0 and y % i == 0 :\n            max_prime = i\n    if max_prime == 0 :\n        return 1\n    else :\n        return max_prime\n"}
{"task_id": "Open/86", "completion": "\n    result = []\n    for i in range(A,B+1):\n        for j in range(i+1,B+1):\n            result.append(i+j)\n    return result[N-1]\n"}
{"task_id": "Open/87", "completion": "\n    count = 0\n    for i in range(len(str)):\n        if str[i] == substr[0]:\n            if str[i:i+len(substr)] == substr:\n                count += 1\n    return count\n"}
{"task_id": "Open/88", "completion": "\n    max_prime = 0\n    for i in range(len(p)):\n        max_distance = abs(p[i] - p[i-1])\n        if max_distance > max_prime:\n            max_prime = max_distance\n    return max_prime\n"}
{"task_id": "Open/89", "completion": "\n    max_count = 0\n    for i in range(len(A)):\n        for j in range(i+1, len(A)):\n            k = A[j]\n            count = 0\n            for k in range(len(B)):\n                if (k * k > j * j):\n                    count += 1\n            if count > max_count:\n                max_count = count\n    return max_count\n\nA = [1,2,3,4,5]\nB = [2,4,6,8,10]\nC = [3,6,9,12,15]"}
{"task_id": "Open/90", "completion": "\n    count = 0\n    for i in range(l,r+1) :\n        if ( i % 10 == 2 or i % 10 == 3 or i % 10 == 9 ) :\n            count += 1\n    return count\n"}
{"task_id": "Open/91", "completion": "\n    max_length = 0\n    for i in range(len(nums)):\n        for j in range(i+1, len(nums)):\n            if nums[i] - nums[j] == 0:\n                max_length = max(max_length, j-i+1)\n    return max_length\n"}
{"task_id": "Open/92", "completion": "\n    max_length = 0\n    for i in range(len( str )):\n        if str[i].isalpha() and str[i].isalpha() == str[i-1].isalpha():\n            max_length += 1\n        elif str[i].isalpha() and str[i-1].isalpha() == str[i].isalpha():\n            max_length += 1\n        elif str[i].isspace() and str[i-1].isspace():\n            max_length += 1\n        else:\n            break\n    return max_length\n"}
{"task_id": "Open/93", "completion": "\n    count = 0\n    for i in range(1, n+1) :\n        if i % 3 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/94", "completion": "\n    result = \"\"\n    for i in range(n,0,-1) :\n        if k > 0 :\n            if k > 26 :\n                result += chr(97 + (ord(result[i-1]) - 97 - k))\n                k -= 26\n            else :\n                result += chr(ord(result[i-1]) + k)\n                k -= 1\n        else :\n            break\n    return result\n"}
{"task_id": "Open/95", "completion": "\n    max_distance = 0\n    while n > 0 :\n        distance = fuel / n\n        max_distance = max(max_distance, distance)\n        n -= 1\n    return max_distance\n"}
{"task_id": "Open/96", "completion": "\n    max_sum = 0\n    for i in range(n) :\n        current_sum = 0\n        for j in range(i, n) :\n            current_sum += arr[j]\n            if current_sum > max_sum :\n                max_sum = current_sum\n    return max_sum\n"}
{"task_id": "Open/97", "completion": "\n    for i in sentence :\n        if i == word :\n            return True\n    return False\n\nsentence = \"The quick brown fox jumps over the lazy dog\"\nword = \"fox\""}
{"task_id": "Open/98", "completion": "\n    return math.floor(math.log10(n)) + 1\n"}
{"task_id": "Open/99", "completion": "\n    if a == b and b == c :\n        return True\n    elif a == b or b == c or c == a :\n        return True\n    elif a == c or c == b or b == a :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/100", "completion": "\n    if len(x) <= 1 :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/101", "completion": "\n    count = 0\n    for i in s :\n        if i.lower() in \"aeiou\" :\n            count += 1\n    return count\n"}
{"task_id": "Open/102", "completion": "\n    count = 0\n    for char in string :\n        if char.isdigit() :\n            count += 1\n        elif char.isalpha() :\n            count += 1\n    return count\n"}
{"task_id": "Open/103", "completion": "\n    max_distance = 0\n    for i in range(n):\n        if i == 0:\n            max_distance = abs(arr[i] - arr[i+1])\n        elif i == n-1:\n            max_distance = abs(arr[i] - arr[i-1])\n        else:\n            max_distance = max(abs(arr[i] - arr[i-1]), abs(arr[i] - arr[i+1]))\n    return max_distance\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nn = len(arr)"}
{"task_id": "Open/104", "completion": "\n    count = 0\n    for i in range(right,left-1,-1) :\n        if i & (i-1) == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/105", "completion": "\n    result = 1\n    for i in range(1, n+1) :\n        result = result << 1\n    return result\n"}
{"task_id": "Open/106", "completion": "\n    sum = 0\n    for i in range(1, n+1) :\n        if n % i == 0 :\n            sum += i\n    return sum == n\n"}
{"task_id": "Open/107", "completion": "\n    count = 0\n    for i in range(N) :\n        if i % 2 == 0 :\n            count += i\n        else :\n            count += 1\n    return count\n"}
{"task_id": "Open/108", "completion": "\n    \n    if a < 0 :\n        return -1\n    \n    if a == 1 :\n        return 1\n    \n    if a > 1 :\n        return a * (a + 1) / 2\n"}
{"task_id": "Open/109", "completion": "\n    count = 0\n    while n > 0 :\n        if n % 10 == d :\n            count += 1\n        n = n // 10\n    return count\n"}
{"task_id": "Open/110", "completion": "\n    if n == \"\" :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/111", "completion": "\n    for i in a :\n        if i % 5!= 0 and i % 3!= 0 :\n            return False\n    return True\n"}
{"task_id": "Open/112", "completion": "\n    result = []\n    for i in range(1, n+1) :\n        if i % 2 == 0 :\n            result.append(4)\n        else :\n            result.append(7)\n    return result[n-1]\n"}
{"task_id": "Open/113", "completion": "\n    result = []\n    for i in range(n+1):\n        if i % 2 == 0 :\n            result.append(result[i//2]*10+3)\n        else :\n            result.append(result[i//2]*10+5)\n    return result[n]\n"}
{"task_id": "Open/114", "completion": "\n    result = []\n    for i in range( n+1 ) :\n        if i % 2 == 0 :\n            result.append( 1 )\n        else :\n            result.append( 1 )\n            result.append( 2 )\n    return result[n]\n"}
{"task_id": "Open/115", "completion": "\n    if a.isInteger() :\n        if a.isValidInteger() :\n            return isPossibleToZero( a.getInteger(), n )\n        else :\n            return False\n    else :\n        return False\n"}
{"task_id": "Open/116", "completion": "\n    if l > 0 and b > 0 and h > 0 :\n        return ( l * b ) / 2\n    else :\n        return -1\n"}
{"task_id": "Open/117", "completion": "\n    result = \"\"\n    for i in string :\n        if i.isupper() :\n            result += i.upper()\n        else :\n            result += i\n    return result\n"}
{"task_id": "Open/118", "completion": "\n    return math.ceil(math.sqrt(8 * p + 1) - 1) // 2\n"}
{"task_id": "Open/119", "completion": "\n    result = []\n    for i in range(len(arr)):\n        if arr[i] in result:\n            return False\n        else:\n            result.append(arr[i])\n    return True\n"}
{"task_id": "Open/120", "completion": "\n    \n    d = {}\n    for i in string :\n        if i in d :\n            d[i] += 1\n        else :\n            d[i] = 1\n    return d\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}
{"task_id": "Open/121", "completion": "\n    if lower == higher :\n        return lower\n    elif lower > higher :\n        return 2\n    else :\n        return 2\n"}
{"task_id": "Open/122", "completion": "\n    result = \"\"\n    for i in range(len(ss)):\n        if ss[i].isdigit():\n            result += ss[i]\n        else:\n            result = max(result,ss[i])\n    return result\n"}
{"task_id": "Open/123", "completion": "\n    result = \"\"\n    for i in range(len(s)):\n        if s[i].isdigit():\n            result += s[i]\n        else:\n            result = \"\"\n            break\n    return result\n"}
{"task_id": "Open/124", "completion": "\n    sum = 0\n    for i in range(N, M+1):\n        if i >= N:\n            sum += 1\n        elif i >= M:\n            return sum * M\n        else:\n            sum = sum + 1\n    return sum * M\n"}
{"task_id": "Open/125", "completion": "\n    \n    for i in range(length) :\n        if string[i] == string[i+1] :\n            return None\n    return True\n"}
{"task_id": "Open/126", "completion": "\n    result = 1\n    for i in range(1, n+1) :\n        result = result * 2\n    return result\n"}
{"task_id": "Open/127", "completion": "\n    \n    if len(str(A)) == len(str(B)) :\n        return A == B\n    else :\n        return None\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}
{"task_id": "Open/128", "completion": "\n    return (x-y)!= 1\n"}
{"task_id": "Open/129", "completion": "\n    max_index = 0\n    max_length = 0\n    for i in range(3, n+1) :\n        if i > max_length :\n            max_index = i\n            max_length = i\n        else :\n            max_index = max_index\n            max_length = max_length\n    return \"\".join([str(i) for i in range(1, max_index+1)])\n"}
{"task_id": "Open/130", "completion": "\n    max_diff = 0\n    for i in range(1,n):\n        max_diff = max(max_diff, abs(arr[i]-arr[i-1]))\n    return max_diff\n"}
{"task_id": "Open/131", "completion": "\n    if n < 0 :\n        return 0\n    if n % 2 == 0 :\n        return 0\n    if n % 2 == 1 :\n        return 1\n    "}
{"task_id": "Open/132", "completion": "\n    result = 0\n    for i in range(1, N + 1):\n        result += i\n    return result * a\n"}
{"task_id": "Open/133", "completion": "\n    if N <= 2 :\n        return N\n    elif N <= 4 :\n        return N + 3\n    elif (N - 4) % 4 == 0 :\n        return N + 1\n    elif (N - 4) % 4 < 2 :\n        return N + 2\n    else :\n        return N - 1\n"}
{"task_id": "Open/134", "completion": "\n    if n % 2 == 1 :\n        return arr[0] % 2 == 1 and arr[n - 1] % 2 == 1\n    else :\n        return arr[0] % 2 == 1 and arr[n - 1] % 2 == 1 and arr[n - 2] % 2 == 1\n"}
{"task_id": "Open/135", "completion": "\n    sum = 0\n    for i in range(1, N+1) :\n        if i <= N :\n            sum += 1\n        else :\n            sum += 2\n    return sum\n"}
{"task_id": "Open/136", "completion": "\n    result = 1\n    for i in range(n) :\n        if arr[i]!= result :\n            result += 1\n    return result\n\narr = [1,2,3,4,5,6,7,8,9,10]\nn = len(arr)"}
{"task_id": "Open/137", "completion": "\n    s = str(s)\n    s = sorted(s)\n    if s == '' :\n        return s\n    else :\n        return s\n"}
{"task_id": "Open/138", "completion": "\n    count = 0\n    for i in range(1,n):\n        if arr[i] > arr[i-1]:\n            count += arr[i] - arr[i-1]\n            arr[i-1] = arr[i]\n    return count\n\narr = [1,2,3,4,5,6,7,8,9,10]\nn = len(arr)"}
{"task_id": "Open/139", "completion": "\n    sum = 0\n    for char in s :\n        sum += ord(char)\n    return sum/len(s)\n"}
{"task_id": "Open/140", "completion": "\n    count = 0\n    for i in range(0,N):\n        if A<=S and S-A<=B:\n            count += 1\n        elif A<=S and S-A>B:\n            count += 1\n            S -= A\n        elif A>S and S-A<=B:\n            S -= A\n            count += 1\n        elif A>S and S-A>B:\n            S -= A\n            count += 1\n            S += B\n        else:\n            return -1\n    return count\n"}
{"task_id": "Open/141", "completion": "\n    return math.gcd(x,y) * (x // math.gcd(x,y)) * (y // math.gcd(x,y))\n"}
{"task_id": "Open/142", "completion": "\n    count = 0\n    for i in range(len(n)):\n        if n[i] == '0':\n            count += 1\n        else:\n            break\n    return count\n"}
{"task_id": "Open/143", "completion": "\n    sum = 0\n    for i in range(n) :\n        sum = arr[i] ^ sum\n        sum = arr[n-1-i] ^ sum\n    return sum\n"}
{"task_id": "Open/144", "completion": "\n    max_length = 0\n    for i in range(n) :\n        if arr[i] > max_length :\n            max_length = arr[i]\n    return max_length\n"}
{"task_id": "Open/145", "completion": "\n    sum = 0\n    for i in range(n):\n        if arr[i]!= k:\n            sum += arr[i]\n    if sum == k:\n        return sum\n    else:\n        return -1\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}
{"task_id": "Open/146", "completion": "\n    max_length = 0\n    count = 0\n    for i in nums :\n        if i == k :\n            count += 1\n        elif i > max_length :\n            max_length = i\n    if count == 0 :\n        return -1\n    return max_length\n"}
{"task_id": "Open/147", "completion": "\n    sum = 0\n    for i in range(n) :\n        sum += arr[i]\n    return sum\n"}
{"task_id": "Open/148", "completion": "\n    sum = 0\n    for i in range(1, n+1) :\n        sum += i\n    return sum\n"}
{"task_id": "Open/149", "completion": "\n    return s ** 0.5\n"}
{"task_id": "Open/150", "completion": "\n    return abs(p**2 + q**2) / (p + q)\n"}
{"task_id": "Open/151", "completion": "\n    result = \"\"\n    for i in range(len1) :\n        result += chr(ord(str1[i]) ^ ord(str1[i+1]))\n    return result\n"}
{"task_id": "Open/152", "completion": "\n    count = 0\n    for i in range(len(n)):\n        if n[i] == '1':\n            count += 1\n        else:\n            count = 0\n        if count > 1:\n            return False\n    return True\n"}
{"task_id": "Open/153", "completion": "\n    \n    vowels = 'aeiou'\n    \n    for i in range(len(s)):\n        if s[i] not in vowels:\n            return False\n        \n    return True\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}
{"task_id": "Open/154", "completion": "\n    count = 0\n    for i in range(low,high+1):\n        if i >= k:\n            count += 1\n    return count\n"}
{"task_id": "Open/155", "completion": "\n    min_diff = math.inf\n    for i in range(1, n+1) :\n        if i < min_diff :\n            min_diff = i\n    return min_diff\n"}
{"task_id": "Open/156", "completion": "\n    result = 0\n    for i in range ( 0, r ) :\n        if i % 2 == 0 :\n            result += i\n    return result\n"}
{"task_id": "Open/157", "completion": "\n    newString = ''\n    for i in s:\n        newString += i\n    newString = sorted(newString)\n    return ''.join(newString)\n"}
{"task_id": "Open/158", "completion": "\n    sum = 0\n    count = 0\n    for i in range(size) :\n        sum += ar[i]\n    for i in range(size) :\n        if ar[i] == sum :\n            count += 1\n    return sum - (count * ar[0])\n"}
{"task_id": "Open/159", "completion": "\n    count = 0\n    for i in range(len(str)):\n        if str[i] == \"0\" and str[i+1] == \"0\" and str[i+2] == \"0\":\n            count += 1\n    return count\n"}
{"task_id": "Open/160", "completion": "\n    result = {}\n    for i in range(n) :\n        if arr[i] in result :\n            result[arr[i]] += 1\n        else :\n            result[arr[i]] = 1\n    for i in result :\n        if result[i] % 2 == 0 :\n            return i\n    return -1\n"}
{"task_id": "Open/161", "completion": "\n    result = []\n    for i in range(n) :\n        result.append(arr[i] ^ arr[i+1])\n    ans = 0\n    for i in range(n) :\n        ans = max(ans, result[i])\n    return ans\n"}
{"task_id": "Open/162", "completion": "\n    if sx == dx and sy == dy :\n        return True\n    if sx == dx or sy == dy :\n        return True\n    if sx == dx or sy == dy :\n        return True\n    if sx == dx and sy == dy :\n        return True\n    return False\n"}
{"task_id": "Open/163", "completion": "\n    count = 0\n    for i in range(1, n+1) :\n        if i % 3 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/164", "completion": "\n    result = {}\n    for i in arr :\n        if i not in result :\n            result[i] = 1\n        else :\n            result[i] += 1\n    return result\n"}
{"task_id": "Open/165", "completion": "\n    count = 0\n    for i in range( height ) :\n        count += 1\n    return count\n"}
{"task_id": "Open/166", "completion": "\n    max_diff = 0\n    for i in range( len( source ) ) :\n        diff = abs( source[i] - dest[i] )\n        if diff > max_diff :\n            max_diff = diff\n    return max_diff\n"}
{"task_id": "Open/167", "completion": "\n    count = 0\n    for i in range(n):\n        if i == 0:\n            count = 1\n        elif i == 1:\n            count = 1\n        else:\n            count = count + 1\n    return count\n"}
{"task_id": "Open/168", "completion": "\n    max_length = 0\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            max_length = max(max_length, 1)\n        else:\n            max_length = max(max_length, 2)\n            for j in range(i+1, len(arr)):\n                if arr[j] > 0:\n                    max_length = max(max_length, j-i+1)\n                else:\n                    max_length = max(max_length, j-i+2)\n    return max_length\n"}
{"task_id": "Open/169", "completion": "\n    mean = sum( m ) / len( m )\n    sum_squared_differences = 0\n    for value in m :\n        sum_squared_differences += ( value - mean ) ** 2\n    return math.sqrt( sum_squared_differences / len( m ) )\n"}
{"task_id": "Open/170", "completion": "\n    count = 0\n    sum = 0\n    for i in range(n) :\n        sum += arr[i]\n    for i in range(n) :\n        for j in range(i,n) :\n            if sum - arr[i] - arr[j] < k :\n                count += 1\n    return count\n"}
{"task_id": "Open/171", "completion": "\n    count = 0\n    nums = sorted(arr)\n    for i in range(len(nums)):\n        if nums[i] < nums[i-1]:\n            count += 1\n    return count\n"}
{"task_id": "Open/172", "completion": "\n    count = 0\n    for i in range(l,r+1) :\n        if i % 3 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/173", "completion": "\n    result = 1\n    for i in range(1,n+1) :\n        result = result * n\n    return result\n"}
{"task_id": "Open/174", "completion": "\n    count = 0\n    for i in range(L, R + 1):\n        if i % 9 == 0:\n            count += 1\n        elif i % 9 == K:\n            count += 1\n    return count\n"}
{"task_id": "Open/175", "completion": "\n    result = 0\n    for i in range(1, n+1) :\n        result += math.log(i, 10) * i\n    return result[:k]\n"}
{"task_id": "Open/176", "completion": "\n    for i in range(n) :\n        if A[i] > A[i-1] and A[i] > A[i+1] :\n            return A[i]\n    return -1\n"}
{"task_id": "Open/177", "completion": "\n    sum = 0\n    for i in range(1,len(a)+1):\n        if a[i-1] < b[i-1] and a[i-1] < c[i-1]:\n            sum += a[i-1]\n        elif b[i-1] < a[i-1] and b[i-1] < c[i-1]:\n            sum += b[i-1]\n        elif c[i-1] < a[i-1] and c[i-1] < b[i-1]:\n            sum += c[i-1]\n    return sum\n"}
