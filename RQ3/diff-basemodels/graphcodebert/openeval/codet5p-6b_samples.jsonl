{"task_id": "Open/0", "completion": "\n    count = 0\n    for i in range(N):\n        for j in range(N):\n            if arr[i]!= arr[j] and arr[i] + K > arr[j]:\n                count += 1\n    return count\n"}
{"task_id": "Open/1", "completion": "\n    count = 0\n    for i in range(n-1):\n        if arr[i] == arr[i+1]:\n            count += 1\n    return count\n"}
{"task_id": "Open/2", "completion": "\n    \n    sum = 0\n    count = 0\n    \n    for i in range(r, l-1, -1):\n        if ( n & (1 << i) )!= 0 :\n            count += 1\n    \n    return count\n"}
{"task_id": "Open/3", "completion": "\n    count = 0\n    for i in range(n) :\n        for j in range(i+1,n) :\n            if (A[i] + A[j]) % K == 0 :\n                count += 1\n    return count\n"}
{"task_id": "Open/4", "completion": "\n    \n    sum = 0\n    for i in a:\n        sum += i\n    if sum == 0:\n        return True\n    else:\n        return False\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}
{"task_id": "Open/5", "completion": "\n    count = 0\n    for i in range(len(x)):\n        if x[i] == '1':\n            count += 1\n    if count % 2 == 0:\n        return 0\n    else:\n        return 1\n"}
{"task_id": "Open/6", "completion": "\n    result = []\n    for i in range(len(vec)):\n        if vec[i] > 0:\n            result.append(vec[i])\n    result.sort()\n    for i in range(len(result)):\n        if i!= result[i] - 1:\n            return result[i]\n    return result[-1] + 1\n"}
{"task_id": "Open/7", "completion": "\n    max_length = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            if len(arr[i]) > len(arr[j]):\n                max_length = max(max_length,len(arr[i]))\n            elif len(arr[i]) == len(arr[j]):\n                for k in range(len(arr[i])):\n                    if arr[i][k]!= arr[j][k]:\n                        break\n                else:\n                    max_length = max(max_length,len(arr[i]))\n    return max_length\n\narr = [1,2,3,4,5,6,7,8,9,10]\nn = len(arr)"}
{"task_id": "Open/8", "completion": "\n    \n    prime_factors = []\n    \n    for i in range(1, a + 1) :\n        if a % i == 0 :\n            prime_factors.append(i)\n    \n    return len(prime_factors)\n"}
{"task_id": "Open/9", "completion": "\n    sum = 0\n    for i in range(n-1):\n        sum += abs(arr[i] - arr[i+1])\n    return sum\n\narr = [1,2,3,4,5,6,7,8,9,10]\nn = len(arr)\nk = 4"}
{"task_id": "Open/10", "completion": "\n    result = []\n    while len(A) > 0:\n        if A[0] == B[0]:\n            result.append(1)\n            A.pop(0)\n            B.pop(0)\n        else:\n            result.append(2)\n            A.append(A[0])\n            A.pop(0)\n            B.append(B[0])\n            B.pop(0)\n    return result\n"}
{"task_id": "Open/11", "completion": "\n    count = 0\n    for i in range(size) :\n        if array[i] == 0 or array[i] == 2 :\n            continue\n        elif array[i] % 2 == 0 :\n            count += 1\n    return count\n\narray = [0,1,2,3,4,5,6,7,8,9]\nsize = len(array)"}
{"task_id": "Open/12", "completion": "\n    count = 0\n    for i in range(len(s)) :\n        if s[i].isdigit() :\n            count += 1\n    return count\n"}
{"task_id": "Open/13", "completion": "\n    if n == 0 :\n        return True\n    elif n == 1 :\n        return False\n    else :\n        return Survives(n-2)\n"}
{"task_id": "Open/14", "completion": "\n    \n    switch = {\n        0 : n,\n        1 : 1,\n        2 : n + 1,\n        3 : 0\n    }\n    \n    return switch.get(n % 4, \"\")\n"}
{"task_id": "Open/15", "completion": "\n    result = 1\n    for i in range(1, n) :\n        if i == n :\n            result += 1\n        elif i > n :\n            result += 1\n    return result\n"}
{"task_id": "Open/16", "completion": "\n    \n    d = {}\n    for i in range(n) :\n        if s1[i] not in d :\n            d[s1[i]] = 1\n        else :\n            d[s1[i]] += 1\n        if s2[i] not in d :\n            d[s2[i]] = 1\n        else :\n            d[s2[i]] += 1\n    for i in d :\n        if d[i] % 2 == 1 :\n            return True\n    return False\n"}
{"task_id": "Open/17", "completion": "\n    return (x * (a + b) * (c - d)) / ((a * d) - (b * c))\n"}
{"task_id": "Open/18", "completion": "\n    count = 0\n    for i in range(length):\n        if s[i] == '1':\n            count += 1\n        if s[i] == '1':\n            count += 1\n    return min(count, length - count)\n"}
{"task_id": "Open/19", "completion": "\n    count = 0\n    for i in range ( 1, n + 1 ) :\n        if i % 2 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/20", "completion": "\n    if y == 0 :\n        return 1\n    else :\n        return x + product ( x, y - 1 )\n"}
{"task_id": "Open/21", "completion": "\n    count0 = 0\n    count1 = 0\n    count2 = 0\n    count3 = 0\n    for i in range ( 1, n + 1 ) :\n        if i % 3 == 0 :\n            count0 += 1\n        if i % 3 == 1 :\n            count1 += 1\n        if i % 3 == 2 :\n            count2 += 1\n        if i % 3 == 3 :\n            count3 += 1\n    if count0 % 2 == 0 and count1 % 2 == 0 and count2 % 2 == 0 and count3 % 2 == 0 :\n        return 1\n    else :\n        return 2\n"}
{"task_id": "Open/22", "completion": "\n    maxLen = 1\n    currLen = 1\n    for i in range(1, n) :\n        if arr[i] > arr[i-1] :\n            currLen += 1\n        else :\n            maxLen = max(maxLen, currLen)\n            currLen = 1\n    return max(maxLen, currLen)\n"}
{"task_id": "Open/23", "completion": "\n    if (i == n) :\n        return 1\n    elif (sum == 0) :\n        return 1\n    elif (arr[i] > sum) :\n        return subsetSum(arr, n, i + 1, sum, count)\n    else :\n        return subsetSum(arr, n, i + 1, sum - arr[i], count) + subsetSum(arr, n, i + 1, sum, count)\n\narr = [1,2,3,4,5,6,7,8,9,10]\nn = len(arr)\nsum = sum(arr)\ncount = 0"}
{"task_id": "Open/24", "completion": "\n    \n    return int(n * (3 * n - 1) / 2)\n"}
{"task_id": "Open/25", "completion": "\n    sum = 0\n    for i in range ( 1, n + 1 ) :\n        sum += i * i\n    return sum\n"}
{"task_id": "Open/26", "completion": "\n    if n == 1 :\n        return 1\n    else :\n        factors = []\n        for i in range(1, n+1) :\n            if n % i == 0 :\n                factors.append(i)\n        return sum(factors)\n"}
{"task_id": "Open/27", "completion": "\n    if x <= y :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/28", "completion": "\n    return 9 * n * n - 9 * n + 1\n"}
{"task_id": "Open/29", "completion": "\n    \n    difference = b - a\n    percentage = difference * b\n    return percentage\n"}
{"task_id": "Open/30", "completion": "\n    sum = 0\n    for i in range ( 1, n + 1 ) :\n        sum += i * i\n    return sum / n\n"}
{"task_id": "Open/31", "completion": "\n    arr.sort()\n    return arr[k-1]\n\narr = [1,2,3,4,5,6,7,8,9]\nn = len(arr)\nk = 3"}
{"task_id": "Open/32", "completion": "\n    return 3 ** (n-1)\n"}
{"task_id": "Open/33", "completion": "\n    result = []\n    for i in range(1, n+1) :\n        result.append(i)\n        result[i-1] = result[i-1] * 2 + i - 1\n    return result\n"}
{"task_id": "Open/34", "completion": "\n    count = 0\n    for i in range(len(a)):\n        if a[i] >= k:\n            count += 1\n    return count\n"}
{"task_id": "Open/35", "completion": "\n    count = 0\n    for i in range(1, n+1) :\n        if i == n :\n            count += 1\n        else :\n            if i % 10 == d :\n                count += 1\n    return count\n"}
{"task_id": "Open/36", "completion": "\n    \n    arr.sort()\n    missing = 1\n    for i in range(n):\n        if arr[i] == missing:\n            missing += 1\n    return missing\n"}
{"task_id": "Open/37", "completion": "\n    count = 0\n    for i in range ( 1, n ) :\n        if i % 2 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/38", "completion": "\n    sum = 0\n    for i in range(0, l) :\n        for j in range(0, b) :\n            sum += i * j\n    return sum\n"}
{"task_id": "Open/39", "completion": "\n    return sum(range(1,N+1))\n"}
{"task_id": "Open/40", "completion": "\n    count = 0\n    for i in range(n) :\n        if arr[i] == 1 :\n            count += 1\n        else :\n            count = 0\n    return count\n\narr = [0,1,1,0,1,1,0,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"}
{"task_id": "Open/41", "completion": "\n    max_length = 0\n    for i in range(n):\n        if arr[i] > max_length:\n            max_length = arr[i]\n    return max_length\n"}
{"task_id": "Open/42", "completion": "\n    max_length = 0\n    for i in range(1, n):\n        if i % k == 0:\n            max_length = max(max_length, a[i])\n    return max_length\n"}
{"task_id": "Open/43", "completion": "\n    count = 0\n    for i in range(n) :\n        for j in range(i+1, n) :\n            if array[i]*array[j] <= k :\n                count += 1\n    return count\n\narray = [1,2,3,4,5]\nn = len(array)\nk = 10"}
{"task_id": "Open/44", "completion": "\n    result = []\n    for i in range(n):\n        result.append(abs(arr[i] - i))\n    return sum(result)\n"}
{"task_id": "Open/45", "completion": "\n    min_distance = 0\n    for i in range(n):\n        if i == 0:\n            min_distance = arr[i]\n        else:\n            if arr[i] < min_distance:\n                min_distance = arr[i]\n    return min_distance * (n - 1)\n"}
{"task_id": "Open/46", "completion": "\n    max_distance = 0\n    for i in range(len(array)):\n        abs_diff = abs(array[i] - array[i-1])\n        if abs_diff > max_distance:\n            max_distance = abs_diff\n    return max_distance\n"}
{"task_id": "Open/47", "completion": "\n    if (x1 == x2) :\n        raise Exception(\"x1 and x2 are equal\")\n    if (y1 == y2) :\n        raise Exception(\"y1 and y2 are equal\")\n    if (x1!= x2) :\n        if (y1!= y2) :\n            if (a * x1 + b * y1 == c) :\n                return True\n            else :\n                return False\n        else :\n            raise Exception(\"y1 and y2 are equal\")\n    else :\n        if (y1!= y2) :\n            if (a * x1 + b * y1 == c) :\n                return True\n            else :\n                return False\n        else :\n            raise Exception(\"x1 and x2 are equal\")\n"}
{"task_id": "Open/48", "completion": "\n    \n    solutions = 0\n    for i in range(0, a + 1) :\n        for j in range(0, a + 1) :\n            if i + (a ^ i) == j :\n                solutions += 1\n    return solutions\n"}
{"task_id": "Open/49", "completion": "\n    result = 0\n    for i in range( R, L - 1, -1 ) :\n        if L & i == i :\n            result += 1\n    return result\n"}
{"task_id": "Open/50", "completion": "\n    \n    largest = 0\n    for i in range(1, n):\n        if a[i] > largest:\n            largest = a[i]\n    return largest\n\na = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\nn = len(a)"}
{"task_id": "Open/51", "completion": "\n    sum = 0\n    for i in range ( 1, n + 1 ) :\n        sum += 1 / ( 3 ** i )\n    return sum\n"}
{"task_id": "Open/52", "completion": "\n    result = []\n    for i in range(n):\n        for j in range(n):\n            result.append(arr[i][j] * arr[i][j])\n    return result\n"}
{"task_id": "Open/53", "completion": "\n    count = 0\n    for i in range(1, N+1) :\n        if i & 1 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/54", "completion": "\n    sum = 0\n    for i in range(n):\n        sum += a[i]\n    if sum == k:\n        return sum\n    else:\n        return -1\n"}
{"task_id": "Open/55", "completion": "\n    sum = 0\n    for i in range(1, n + 1):\n        if i & 1:\n            sum += 1\n    return sum == 1\n"}
{"task_id": "Open/56", "completion": "\n    count = 0\n    for char in s:\n        if char == '1':\n            count += 1\n    return count\n"}
{"task_id": "Open/57", "completion": "\n    if N % K == 0 :\n        return N\n    else :\n        return N - (N % K)\n"}
{"task_id": "Open/58", "completion": "\n    result = 0\n    for i in range(2, N+1):\n        result += arr[i-1]\n        result += arr[i-1] * arr[i-1]\n    return result\n"}
{"task_id": "Open/59", "completion": "\n    result = []\n    for i in range(len(arr)) :\n        for j in range(i,i+1) :\n            if arr[j] == arr[j-1] :\n                result.append(arr[j])\n    return result[index]\n"}
{"task_id": "Open/60", "completion": "\n    \n    squareRoot = int(n**0.5)\n    \n    if squareRoot**2 == n :\n        return True\n    \n    for i in range(squareRoot, -1, -1) :\n        for j in range(squareRoot, -1, -1) :\n            if i**2 + j**2 == n :\n                return True\n    \n    return False\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}
{"task_id": "Open/61", "completion": "\n    count = 0\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            count += 1\n    return count\n"}
{"task_id": "Open/62", "completion": "\n    result = \"\"\n    for i in range ( len ( str ) - 1, -1, -1 ) :\n        if str[i].isalpha() :\n            result = str[i] + result\n        else :\n            result = \"9\" + result\n    return result\n"}
{"task_id": "Open/63", "completion": "\n    sum = 0\n    for i in range(n):\n        sum += math.log10(arr[i])\n    return sum\n"}
{"task_id": "Open/64", "completion": "\n    result = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            result += 1\n        if s[i] == '1':\n            result += 1\n    return result\n"}
{"task_id": "Open/65", "completion": "\n    result = []\n    for i in range(n):\n        if a[i]!= k:\n            result.append(a[i])\n    return len(result)\n"}
{"task_id": "Open/66", "completion": "\n    \n    arr.sort()\n    if n % 2 == 0 :\n        return (arr[n//2] + arr[n//2 - 1]) / 2\n    else :\n        return arr[n//2]\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}
{"task_id": "Open/67", "completion": "\n    count = 0\n    for i in range(n):\n        if a[i] > 0:\n            count += 1\n        elif a[i] < 0:\n            count += abs(a[i])\n    return count\n"}
{"task_id": "Open/68", "completion": "\n    if n == 1 :\n        return 0\n    v = []\n    n = n - 1\n    while n > 0 :\n        v.append(n % 5)\n        n = n // 5\n    result = 0\n    for i in range(len(v) - 1, -1, -1) :\n        result = result * 10 + v[i]\n    return 2 * result\n"}
{"task_id": "Open/69", "completion": "\n    \n    count = 0\n    \n    for i in range(1, n+1) :\n        if ( i & 1 ) == 1 :\n            count += 1\n    \n    return count\n"}
{"task_id": "Open/70", "completion": "\n    \n    largest = None\n    for i in range(1, n+1) :\n        if i % x == 0 :\n            largest = i\n    return largest\n"}
{"task_id": "Open/71", "completion": "\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n"}
{"task_id": "Open/72", "completion": "\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n"}
{"task_id": "Open/73", "completion": "\n    max_count = 0\n    for i in range(n) :\n        if arr[i] == arr[i] :\n            max_count += 1\n    return max_count\n"}
{"task_id": "Open/74", "completion": "\n    count = 0\n    for i in range(1, n):\n        if (a[i] & (a[i] - 1)) == 0:\n            count += 1\n    return count\n"}
{"task_id": "Open/75", "completion": "\n    return int( ''.join( ['1' if i == '0' else '0' for i in bin(n)[2:] ] ), 2 )\n"}
{"task_id": "Open/76", "completion": "\n    count = 0\n    for i in range(n):\n        if A[i]!= 0:\n            count += 1\n    return count\n"}
{"task_id": "Open/77", "completion": "\n    \n    return radian * 180\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}
{"task_id": "Open/78", "completion": "\n    return math.floor(n/2)\n"}
{"task_id": "Open/79", "completion": "\n    sum = 0\n    for i in range(1, n+1) :\n        sum += a + (i-1)*d\n    return sum\n"}
{"task_id": "Open/80", "completion": "\n    result = 1\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            result = i\n    return result\n"}
{"task_id": "Open/81", "completion": "\n    \n    max_distance = 0\n    \n    for i in range(row, row + moves + 1) :\n        for j in range(column, column + moves + 1) :\n            if i < 8 and j < 8 :\n                max_distance += 1\n    \n    return max_distance\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}
{"task_id": "Open/82", "completion": "\n    result = 1\n    for i in range(1, n+1):\n        result += i\n    return result\n"}
{"task_id": "Open/83", "completion": "\n    s = list(s)\n    last = []\n    for i in range(len(s)):\n        last.append(s.index(s[i]))\n    s.sort()\n    for i in range(len(s)):\n        if s[i]!= s[last[i]]:\n            s[i], s[last[i]] = s[last[i]], s[i]\n            break\n    return \"\".join(s)\n"}
{"task_id": "Open/84", "completion": "\n    sum = 0\n    for i in range(l-1,r) :\n        if i % 2 == 0 :\n            sum += i\n    return sum\n"}
{"task_id": "Open/85", "completion": "\n    \n    if x > y :\n        smaller = y\n    else :\n        smaller = x\n    for i in range(2, smaller+1) :\n        if x % i == 0 and y % i == 0 :\n            return i\n    return 1\n"}
{"task_id": "Open/86", "completion": "\n    result = []\n    for i in range(N):\n        result.append(A + B)\n        A = result[i]\n        B = result[i] - A\n    return result[N-1]\n"}
{"task_id": "Open/87", "completion": "\n    count = 0\n    for i in range(len(str)):\n        if str[i] == substr:\n            count += 1\n    return count\n"}
{"task_id": "Open/88", "completion": "\n    \n    r = r / 100\n    t = t * 12\n    max_distance = 0\n    \n    for i in range(1, len(nums)):\n        distance = abs(nums[i] - nums[i - 1])\n        if distance > max_distance:\n            max_distance = distance\n    \n    return (p * r * (1 + r) ** t) / ((1 + r) ** t - 1)\n"}
{"task_id": "Open/89", "completion": "\n    max_count = 0\n    for i in range(len(A)):\n        for j in range(len(B)):\n            for k in range(len(C)):\n                if A[i] * B[j] > C[k] * C[j]:\n                    max_count += 1\n    return max_count\n"}
{"task_id": "Open/90", "completion": "\n    count = 0\n    for i in range ( l, r + 1 ) :\n        if i % 10 == 2 or i % 10 == 3 or i % 10 == 9 :\n            count += 1\n    return count\n"}
{"task_id": "Open/91", "completion": "\n    max_length = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if arr[j] - arr[i] == arr[j] - arr[i]:\n                max_length = max(max_length, j - i + 1)\n    return max_length\n"}
{"task_id": "Open/92", "completion": "\n    max_length = 0\n    for i in range(len(str)):\n        if str[i].isalpha():\n            if isPalindrome(str[i]):\n                max_length += 1\n            else:\n                break\n    return max_length\n"}
{"task_id": "Open/93", "completion": "\n    count = 0\n    for i in range(1, n+1) :\n        if i % 3 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/94", "completion": "\n    result = \"\"\n    for i in range(n):\n        if (ord(result[i]) >= 97 and ord(result[i]) <= 122) or (ord(result[i]) >= 65 and ord(result[i]) <= 90):\n            result = result[:i] + chr(ord(result[i]) + k) + result[i+1:]\n            k = k - 1\n            if k < 0:\n                break\n        else:\n            result = result[:i] + chr(ord(result[i]) + k) + result[i+1:]\n            k = k + 1\n            if k > 26:\n                break\n    return result\n"}
{"task_id": "Open/95", "completion": "\n    totalDistance = 0\n    while n > 0 :\n        totalDistance += fuel / n\n        n -= 1\n    return totalDistance\n"}
{"task_id": "Open/96", "completion": "\n    max_sum = 0\n    for i in range(n):\n        sum = 0\n        for j in range(i,n):\n            sum += arr[j]\n            if sum > max_sum:\n                max_sum = sum\n    return max_sum\n\narr = [1,2,3,4,5,6,7,8,9,10]\nn = len(arr)"}
{"task_id": "Open/97", "completion": "\n    sentence = sentence.split()\n    for i in sentence :\n        if i == word :\n            return True\n    return False\n"}
{"task_id": "Open/98", "completion": "\n    if n == 0 :\n        return 1\n    else :\n        return int(math.log10(n)) + 1\n"}
{"task_id": "Open/99", "completion": "\n    \n    if a == b == c :\n        return True\n    elif a == b or b == c or a == c :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/100", "completion": "\n    if len(x) <= 1 :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/101", "completion": "\n    count = 0\n    for char in s:\n        if char in \"aeiouAEIOU\":\n            count += 1\n    return count\n"}
{"task_id": "Open/102", "completion": "\n    count = 0\n    for i in range(len(string)):\n        if string[i].isdigit():\n            count += 1\n        elif string[i].isalpha():\n            count += 1\n    return count\n"}
{"task_id": "Open/103", "completion": "\n    max_distance = 0\n    for i in range(n-1):\n        diff = abs(arr[i] - arr[i+1])\n        if diff > max_distance:\n            max_distance = diff\n    return max_distance\n"}
{"task_id": "Open/104", "completion": "\n    count = 0\n    for i in range(right, left, -1):\n        if i & (i - 1) == 0:\n            count += 1\n    return count\n"}
{"task_id": "Open/105", "completion": "\n    result = 1\n    for i in range(n):\n        result *= 2\n    return result\n"}
{"task_id": "Open/106", "completion": "\n    sum = 0\n    for i in range ( 1, n ) :\n        if n % i == 0 :\n            sum += i\n    return sum == n\n"}
{"task_id": "Open/107", "completion": "\n    count = 0\n    for i in range(N+1):\n        if i%100==0 or i%400==0:\n            count += 366\n        elif i%4==0:\n            count += 365\n        else:\n            count += 365+1\n    return count%7\n"}
{"task_id": "Open/108", "completion": "\n    \n    if a < 0 :\n        return -1\n    \n    if a == 1 :\n        return 1\n    \n    if a == 2 :\n        return 3\n    \n    if a == 3 :\n        return 5\n    \n    if a == 4 :\n        return 7\n    \n    if a == 5 :\n        return 9\n    \n    if a == 6 :\n        return 11\n    \n    if a == 7 :\n        return 13\n    \n    if a == 8 :\n        return 15\n    \n    if a == 9 :\n        return 17\n    \n    if a == 10 :\n        return 19\n    \n    if a == 11 :\n        return 21\n    \n    if a == 12 :\n        return 23\n    \n    if a == 13 :\n        return 25\n    \n    if a == 14 :\n        return 27\n    \n    if a == 15 :\n        return 29\n    \n    if a == 16 :\n        return 31\n    \n    if a == 17 :\n        return 33\n    \n    if a == 18 :\n        return 35\n    \n    if a == 19 :"}
{"task_id": "Open/109", "completion": "\n    n = str(n)\n    d = str(d)\n    return n.count(d)\n"}
{"task_id": "Open/110", "completion": "\n    \n    string = str(n)\n    \n    if len(string) == 0 :\n        return True\n    \n    for i in range(len(string)) :\n        if string[i] in string[i+1:] :\n            return False\n    \n    return True\n"}
{"task_id": "Open/111", "completion": "\n    \n    sum = 0\n    for i in a:\n        sum += i\n    \n    if sum % 2 == 0:\n        return True\n    else:\n        return False\n    "}
{"task_id": "Open/112", "completion": "\n    result = []\n    for i in range(1, n):\n        if i % 2 == 0:\n            result.append(4)\n        else:\n            result.append(7)\n    return result[n-1]\n"}
{"task_id": "Open/113", "completion": "\n    result = []\n    for i in range(n+1):\n        if i%2 == 0:\n            result.append(3)\n        else:\n            result.append(5)\n    return result[n]\n"}
{"task_id": "Open/114", "completion": "\n    result = []\n    for i in range(n+1):\n        if i%2 == 0:\n            result.append(1)\n        else:\n            result.append(2)\n    return result[n]\n"}
{"task_id": "Open/115", "completion": "\n    for i in range(n) :\n        if (a[i] % 11!= 0) :\n            return False\n    return True\n"}
{"task_id": "Open/116", "completion": "\n    \n    return (l * b) + (b * h) + (h * l)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}
{"task_id": "Open/117", "completion": "\n    result = \"\"\n    for char in string :\n        if char.isalpha() :\n            result += char.upper()\n    return result\n"}
{"task_id": "Open/118", "completion": "\n    return math.ceil( math.sqrt(8 * p + 1) - 1 ) // 2\n"}
{"task_id": "Open/119", "completion": "\n    if len(arr) == 0 :\n        return True\n    else :\n        for i in range(len(arr)) :\n            for j in range(i+1, len(arr)) :\n                if arr[i] == arr[j] :\n                    return False\n    return True\n"}
{"task_id": "Open/120", "completion": "\n    \n    count = {}\n    for char in string :\n        if char in count :\n            count[char] += 1\n        else :\n            count[char] = 1\n    return count\n"}
{"task_id": "Open/121", "completion": "\n    if lower == higher :\n        return lower\n    else :\n        return 2\n"}
{"task_id": "Open/122", "completion": "\n    result = \"\"\n    for char in ss :\n        if char.isdigit() :\n            result += char\n        else :\n            if result == \"\" :\n                result = char\n            else :\n                if int(result) < int(char) :\n                    result = char\n    return result\n"}
{"task_id": "Open/123", "completion": "\n    result = \"\"\n    for i in range(len(s)):\n        if s[i].isdigit():\n            result += s[i]\n        elif len(result) > 0:\n            return result\n    return result\n"}
{"task_id": "Open/124", "completion": "\n    sum = 0\n    while N >= 0 and M >= 0:\n        if N > M:\n            sum += N\n            N -= 1\n        elif M > N:\n            sum += M\n            M -= 1\n        else:\n            sum += N * M\n            N = 0\n            M = 0\n    return sum\n"}
{"task_id": "Open/125", "completion": "\n    if len(string)!= length :\n        return False\n    for i in range(len(string) - 1) :\n        if string[i] == string[i+1] :\n            return False\n    return True\n"}
{"task_id": "Open/126", "completion": "\n    result = 1\n    for i in range(n) :\n        result *= 2\n    return result\n"}
{"task_id": "Open/127", "completion": "\n    \n    if len(str(A)) == len(str(B)) :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/128", "completion": "\n    if x - y > 1 or x - y < -1 :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/129", "completion": "\n    max_index = 0\n    for i in range(3, n+1):\n        if i > max_index:\n            max_index = i\n        else:\n            max_index = max_index + i\n    return max_index\n"}
{"task_id": "Open/130", "completion": "\n    max_diff = 0\n    for i in range(n):\n        if i == 0:\n            max_diff = abs(arr[i] - arr[i+1])\n        else:\n            max_diff = min(max_diff, abs(arr[i] - arr[i-1]))\n    return max_diff\n"}
{"task_id": "Open/131", "completion": "\n    if n % 4 == 0 or n % 4 == 3 :\n        return 0\n    elif n % 4 == 1 or n % 4 == 2 :\n        return 1\n    else :\n        return 2\n"}
{"task_id": "Open/132", "completion": "\n    result = 0\n    for i in range(1, N + 1) :\n        if i % a == 0 :\n            result += i\n    return result\n"}
{"task_id": "Open/133", "completion": "\n    if N <= 2 :\n        return N\n    elif N <= 4 :\n        return N + 3\n    elif (N - 4) % 4 == 0 :\n        return N + 1\n    elif (N - 4) % 4 <= 2 :\n        return N + 2\n    else :\n        return N - 1\n    "}
{"task_id": "Open/134", "completion": "\n    if n % 2 == 0 :\n        return False\n    else :\n        return arr[0] % 2 == 1 and arr[n - 1] % 2 == 1 and n % 2 == 1\n"}
{"task_id": "Open/135", "completion": "\n    \n    if N == 1 :\n        return R - L + 1\n    elif N == 2 :\n        return R - L + 2\n    else :\n        return R - L + 2 + countSum( N - 2, L, R )\n    "}
{"task_id": "Open/136", "completion": "\n    result = 1\n    for i in range(n):\n        if arr[i]!= result:\n            result += 1\n    return result\n\narr = [1,2,3,4,5,6,7,8,9,10]\nn = len(arr)"}
{"task_id": "Open/137", "completion": "\n    \n    s = str(s)\n    s = sorted(s)\n    if len(s) == 0:\n        return s\n    else:\n        return s\n"}
{"task_id": "Open/138", "completion": "\n    count = 0\n    for i in range(n):\n        if arr[i] > arr[i-1]:\n            count += arr[i] - arr[i-1]\n            arr[i] = arr[i-1]\n    return count\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nn = len(arr)"}
{"task_id": "Open/139", "completion": "\n    sum = 0\n    for char in s:\n        sum += ord(char)\n    return sum / len(s)\n"}
{"task_id": "Open/140", "completion": "\n    count = 0\n    for i in range(N) :\n        if A <= S :\n            count += 1\n            S -= A\n        elif B <= S :\n            count += 1\n            S -= B\n        else :\n            return -1\n    return count\n"}
{"task_id": "Open/141", "completion": "\n    return x * y // math.gcd(x,y)\n"}
{"task_id": "Open/142", "completion": "\n    count = 0\n    while n > 0 :\n        if n % 10 == 0 :\n            count += 1\n        n = n // 10\n    return count\n"}
{"task_id": "Open/143", "completion": "\n    sum = 0\n    for i in range(n):\n        for j in range(i):\n            sum += arr[j]\n        for j in range(i+1,n):\n            sum += arr[j]\n        if sum > sum:\n            return i\n        sum = 0\n    return -1\n\narr = [1,3,4,8]\nn = len(arr)"}
{"task_id": "Open/144", "completion": "\n    \n    max_length = 0\n    \n    for i in range(n):\n        if arr[i] > max_length:\n            max_length = arr[i]\n    \n    return max_length\n"}
{"task_id": "Open/145", "completion": "\n    \n    sum = 0\n    for i in range(n):\n        if arr[i]!= k:\n            sum += arr[i]\n    if sum == k:\n        return sum\n    else:\n        return -1\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n"}
{"task_id": "Open/146", "completion": "\n    \n    max_length = 0\n    count = 0\n    \n    for i in range(1, K+1) :\n        if i % K == 0 :\n            count += 1\n        else :\n            if count > max_length :\n                max_length = count\n            count = 0\n    \n    if max_length == 0 :\n        return -1\n    else :\n        return max_length\n    "}
{"task_id": "Open/147", "completion": "\n    sum = 0\n    for i in range(n):\n        sum += arr[i]\n    return sum\n"}
{"task_id": "Open/148", "completion": "\n    sum = 0\n    for i in range(1, n+1) :\n        sum += i\n    return sum\n"}
{"task_id": "Open/149", "completion": "\n    return s**0.5\n"}
{"task_id": "Open/150", "completion": "\n    \n    return (p**2 + q**2) / (p + q)\n"}
{"task_id": "Open/151", "completion": "\n    result = \"\"\n    for i in range(len1) :\n        result += chr(ord(str1[i]) ^ ord(\"a\"))\n    return result\n"}
{"task_id": "Open/152", "completion": "\n    \n    count = 0\n    for i in range(len(n)) :\n        if n[i] == '1' :\n            count += 1\n        else :\n            count = 0\n        if count > 1 :\n            return False\n    return True\n"}
{"task_id": "Open/153", "completion": "\n    \n    vowels = ['a', 'e', 'i', 'o', 'u']\n    \n    for i in range(len(s) - 1) :\n        if s[i] not in vowels :\n            return False\n        if s[i + 1] not in vowels :\n            return False\n    \n    return True\n"}
{"task_id": "Open/154", "completion": "\n    count = 0\n    for i in range(low, high+1):\n        if i >= k:\n            count += 1\n    return count\n"}
{"task_id": "Open/155", "completion": "\n    min_diff = 0\n    for i in range(1, n+1):\n        if i < min_diff:\n            min_diff = i\n        elif i > 2**math.floor(math.log(i, 2)):\n            min_diff = i - 2**math.floor(math.log(i, 2))\n    return min_diff\n"}
{"task_id": "Open/156", "completion": "\n    result = 0\n    for i in range(0, r) :\n        if i % 2 == 0 :\n            result += i\n    return result\n"}
{"task_id": "Open/157", "completion": "\n    \n    sortedList = sorted(s)\n    return ''.join(sortedList)\n"}
{"task_id": "Open/158", "completion": "\n    sum = 0\n    count = 0\n    for i in range(size) :\n        if ar[i] == sum :\n            count += 1\n        elif ar[i] == sum :\n            count += 1\n    return count\n"}
{"task_id": "Open/159", "completion": "\n    \n    count = 0\n    \n    for i in range(len(str)):\n        if str[i:i+3] == \"010\":\n            count += 1\n    \n    return count\n"}
{"task_id": "Open/160", "completion": "\n    result = {}\n    for i in arr:\n        if i not in result:\n            result[i] = 1\n        else:\n            result[i] += 1\n    for i in result:\n        if result[i] % 2 == 0:\n            return i\n    return None\n"}
{"task_id": "Open/161", "completion": "\n    result = []\n    xorArr = 0\n    ans = 0\n    for i in range(n):\n        xorArr = xorArr ^ arr[i]\n        result.append(xorArr)\n    for i in range(n):\n        ans = ans ^ result[i]\n    return ans\n"}
{"task_id": "Open/162", "completion": "\n    \n    max_distance = 0\n    \n    for i in range(1, len(nums)):\n        distance = abs(nums[i] - nums[i - 1])\n        if distance > max_distance:\n            max_distance = distance\n    \n    return max_distance <= max_distance\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "}
{"task_id": "Open/163", "completion": "\n    count = 0\n    for i in range(1, n+1) :\n        if i % 3 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/164", "completion": "\n    d = {}\n    for i in range(n) :\n        d[arr[i]] = d.get(arr[i],0) + 1\n    count = 1\n    for i in d :\n        count *= d[i]\n    return count\n\narr = [1,2,3,4,5,6,7,8,9,10]\nn = len(arr)"}
{"task_id": "Open/165", "completion": "\n    count = 0\n    for node in range(height+1):\n        count += AVLnodes(node)\n    return count\n"}
{"task_id": "Open/166", "completion": "\n    max_diff = 0\n    for num in source :\n        if num > dest :\n            max_diff = max(max_diff, num - dest)\n        elif num < dest :\n            max_diff = max(max_diff, dest - num)\n    return max_diff\n"}
{"task_id": "Open/167", "completion": "\n    \n    count = 0\n    \n    for i in range ( n ) :\n        count = countnndSayHelper ( count )\n    \n    return count\n"}
{"task_id": "Open/168", "completion": "\n    max_length = 0\n    for i in range(N):\n        for j in range(i+1,N):\n            if arr[i]*arr[j]>0:\n                max_length = max(max_length,j-i)\n    return max_length\n\narr = [1,2,3,4,5,6,7,8,9,10]"}
{"task_id": "Open/169", "completion": "\n    \n    mean = ( m + n ) / 2\n    sum_of_squared_differences = 0\n    \n    for i in range( len( m ) ) :\n        sum_of_squared_differences += ( m[i] - mean ) ** 2\n    \n    return math.sqrt( sum_of_squared_differences ) / 2\n"}
{"task_id": "Open/170", "completion": "\n    count = 0\n    for i in range(n):\n        sum = 0\n        for j in range(i,n):\n            sum += arr[j]\n            if sum < k:\n                count += 1\n    return count\n\narr = [1,2,3,4,5]\nn = len(arr)\nk = 7"}
{"task_id": "Open/171", "completion": "\n    \n    count = 0\n    for i in range(len(arr) - 2) :\n        if arr[i] < arr[i + 1] :\n            count += 1\n    return count\n"}
{"task_id": "Open/172", "completion": "\n    count = 0\n    for i in range(l, r+1) :\n        if i % 3 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/173", "completion": "\n    return n ^ ( ( 1 << m ) - 1 )\n"}
{"task_id": "Open/174", "completion": "\n    count = 0\n    for i in range ( L, R + 1 ) :\n        if i % 3 == 0 :\n            count += 1\n    return count\n"}
{"task_id": "Open/175", "completion": "\n    result = 0\n    for i in range(1, n+1) :\n        result += math.log10(i) * i\n    return result[:k]\n"}
{"task_id": "Open/176", "completion": "\n    for i in range(n) :\n        if A[i] >= A[i-1] and A[i] >= A[i+1] :\n            return A[i]\n    return -1\n\nA = [1,2,3,4,5,6,7,8,9,10]\nn = len(A)"}
{"task_id": "Open/177", "completion": "\n    sum = 0\n    for i in range(1, n+1):\n        if a < b and a < c:\n            sum += a\n            a += 1\n        elif b < c:\n            sum += b\n            b += 1\n        else:\n            sum += c\n            c += 1\n    return sum\n"}
