{"task_id": "HumanEval/0", "completion": "    for i in range(len(numbers)):\n        for j in range(i + 1, len(numbers)):\n            if abs(numbers[i] - numbers[j]) < threshold:\n                return True\n    return False\n\n"}
{"task_id": "HumanEval/1", "completion": "    result = []\n    for char in paren_string:\n        if char == '(':\n            result.append(char)\n        elif char == ')':\n            if len(result) > 0:\n                result.pop()\n            else:\n                result.append(char)\n    return result\n\n"}
{"task_id": "HumanEval/2", "completion": "    result = \"\"\n    while number > 0:\n        if number % 10 == 0:\n            result += str(number)\n            number = number // 10\n        else:\n            result += \".\"\n            number = number // 10\n    return float(result)\n\n"}
{"task_id": "HumanEval/3", "completion": "    for operation in operations:\n        if operation == 0:\n            return True\n    return False\n\n"}
{"task_id": "HumanEval/4", "completion": "    result = []\n    for number in numbers:\n        result.append(abs(number - sum(numbers) / len(numbers)))\n    return sum(result) / len(result)\n\n"}
{"task_id": "HumanEval/5", "completion": "    result = []\n    for number in numbers:\n        result.append(str(number) + delimeter)\n    return result\n\n"}
{"task_id": "HumanEval/6", "completion": "    stack = []\n    for char in paren_string:\n        if char == '(':\n            stack.append(0)\n        elif char == ')':\n            if len(stack) > 0:\n                stack.pop()\n            else:\n                return [0]\n    return stack\n\n"}
{"task_id": "HumanEval/7", "completion": "    return [s for s in strings if substring in s]\n\n"}
{"task_id": "HumanEval/8", "completion": "    sum = 0\n    product = 1\n    for number in numbers:\n        if number % 2 == 0:\n            sum += number\n        product *= number\n    return sum, product\n\n"}
{"task_id": "HumanEval/9", "completion": "    rolling_max_list = []\n    for number in numbers:\n        if number > rolling_max_list[-1]:\n            rolling_max_list.append(number)\n        else:\n            rolling_max_list.append(rolling_max_list[-1])\n    return rolling_max_list\n\n"}
{"task_id": "HumanEval/10", "completion": "    result = ''\n    for char in string:\n        if is_palindrome(char):\n            result += char\n        else:\n            if result:\n                result += char\n            else:\n                result = char\n    return result\n\n"}
{"task_id": "HumanEval/11", "completion": "    result = ''\n    for char in a:\n        if char.isdigit():\n            result += char\n    for char in b:\n        if char.isdigit():\n            result += char\n    return result\n\n"}
{"task_id": "HumanEval/12", "completion": "    if not strings:\n        return None\n\n    longest = strings[0]\n    for string in strings:\n        if len(string) > len(longest):\n            longest = string\n\n    return longest\n\n"}
{"task_id": "HumanEval/13", "completion": "    result = 1\n    while a > 0 and b > 0:\n        if a % b == 0:\n            result = result * b\n            a = a // b\n        else:\n            b = b // a\n    return result\n\n"}
{"task_id": "HumanEval/14", "completion": "    prefixes = []\n    for char in string:\n        if char.isupper():\n            prefixes.append(char)\n    return prefixes\n\n"}
{"task_id": "HumanEval/15", "completion": "    s = \"\"\n    for i in range(1, n + 1):\n        s += str(i) + \" \"\n    return s\n\n"}
{"task_id": "HumanEval/16", "completion": "    return len(set(string.lower()))\n\n"}
{"task_id": "HumanEval/17", "completion": "    count = 0\n    for character in music_string:\n        if character.isdigit():\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/18", "completion": "    count = 0\n    for i in range(len(string) - len(substring) + 1):\n        if string[i:i + len(substring)] == substring:\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/19", "completion": "    result = ''\n    for char in numbers:\n        if char.isdigit():\n            result += char\n        else:\n            result += char.lower()\n    return result\n\n"}
{"task_id": "HumanEval/20", "completion": "    largest = numbers[0]\n    for number in numbers[1:]:\n        if number < largest:\n            largest = number\n    return largest, largest\n\n"}
{"task_id": "HumanEval/21", "completion": "    return [(n - min(numbers)) / (max(numbers) - min(numbers)) for n in numbers]\n\n"}
{"task_id": "HumanEval/22", "completion": "    return [value for value in values if isinstance(value, int)]\n"}
{"task_id": "HumanEval/23", "completion": "    return len(string)\n\n"}
{"task_id": "HumanEval/24", "completion": "    result = 1\n    for i in range(1, n + 1):\n        if n % i == 0:\n            result = i\n    return result\n\n"}
{"task_id": "HumanEval/25", "completion": "    prime_factors = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n            prime_factors.append(i)\n    return prime_factors\n\n"}
{"task_id": "HumanEval/26", "completion": "    result = []\n    for number in numbers:\n        if number not in result:\n            result.append(number)\n    return result\n\n"}
{"task_id": "HumanEval/27", "completion": "    result = \"\"\n    for char in string:\n        if char.isupper():\n            result += char.lower()\n        else:\n            result += char.upper()\n    return result\n\n"}
{"task_id": "HumanEval/28", "completion": "    return ''.join(strings)\n"}
{"task_id": "HumanEval/29", "completion": "    return [string for string in strings if string.startswith(prefix)]\n\n"}
{"task_id": "HumanEval/30", "completion": "    return [x for x in l if x > 0]\n\n"}
{"task_id": "HumanEval/31", "completion": "    if n <= 1:\n        return False\n    for i in range(2, n):\n        if n % i == 0:\n            return False\n    return True\n\n"}
{"task_id": "HumanEval/32", "completion": "    result = []\n    for i, coeff in enumerate(xs):\n        if coeff == 0:\n            result.append(i)\n    return result\n\n"}
{"task_id": "HumanEval/33", "completion": "\n    result = []\n    for i in l:\n        if i % 3!= 0:\n            result.append(i)\n    result.sort()\n    return result\n\n"}
{"task_id": "HumanEval/34", "completion": "    result = []\n    for i in l:\n        if i not in result:\n            result.append(i)\n    return result\n\n"}
{"task_id": "HumanEval/35", "completion": "    return max(l)\n\n"}
{"task_id": "HumanEval/36", "completion": "    count = 0\n    for i in range(1, n):\n        if i % 3 == 0 or i % 5 == 0:\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/37", "completion": "    result = []\n    for i in range(len(l)):\n        if i % 2 == 0:\n            result.append(l[i])\n        else:\n            result.append(l[i])\n    return result\n\n"}
{"task_id": "HumanEval/38", "completion": "    result = \"\"\n    for char in s:\n        if char.isdigit():\n            result += char\n        else:\n            result += char\n    return result\n\n"}
{"task_id": "HumanEval/39", "completion": "    count = 0\n    for i in range(1, n):\n        if n % i == 0:\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/40", "completion": "    counter = 0\n    for i in l:\n        if i > 0:\n            counter += 1\n            if counter == 3:\n                return True\n            else:\n                l[counter], l[i] = l[i], l[counter]\n    return False\n\n"}
{"task_id": "HumanEval/41", "completion": "    count = 0\n    for i in range(n):\n        if i!= 0 and i!= n-1:\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/42", "completion": "    return [x + 1 for x in l]\n\n"}
{"task_id": "HumanEval/43", "completion": "    for i in l:\n        for j in l:\n            if i > j:\n                l[i], l[j] = l[j], l[i]\n                return True\n    return False\n\n"}
{"task_id": "HumanEval/44", "completion": "    result = \"\"\n    while x > 0:\n        remainder = x % base\n        result = str(remainder) + result\n        x = x // base\n    return result\n\n"}
{"task_id": "HumanEval/45", "completion": "    return a * h / 2\n\n"}
{"task_id": "HumanEval/46", "completion": "    if n == 0:\n        return 0\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 0\n    else:\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\n"}
{"task_id": "HumanEval/47", "completion": "    l.sort()\n    if len(l) % 2 == 0:\n        return l[int(len(l) / 2)]\n    else:\n        return (l[int(len(l) / 2) - 1] + l[int(len(l) / 2)]) / 2\n\n"}
{"task_id": "HumanEval/48", "completion": "    if len(text) <= 1:\n        return True\n\n    if text[0]!= text[-1]:\n        return False\n\n    return is_palindrome(text[1:-1])\n\n"}
{"task_id": "HumanEval/49", "completion": "    result = 1\n    for i in range(n):\n        result = result * 2\n    return result % p\n\n"}
{"task_id": "HumanEval/50", "completion": "    return \"\".join([chr(((ord(ch) - 5 - ord(\"a\")) % 26) + ord(\"a\")) for ch in s])\n"}
{"task_id": "HumanEval/51", "completion": "    result = ''\n    for i in text:\n        if i not in 'aeiouAEIOU':\n            result += i\n    return result\n\n"}
{"task_id": "HumanEval/52", "completion": "    return all(x < t for x in l)\n\n"}
{"task_id": "HumanEval/53", "completion": "    return x + y\n\n"}
{"task_id": "HumanEval/54", "completion": "    if len(s0)!= len(s1):\n        return False\n    for char in s0:\n        if char!= s1[s0.index(char)]:\n            return False\n    return True\n\n"}
{"task_id": "HumanEval/55", "completion": "    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\n"}
{"task_id": "HumanEval/56", "completion": "    stack = []\n    for char in brackets:\n        if char == \"<\" or char == \">\":\n            stack.append(char)\n        elif char == \"<\":\n            if stack:\n                stack.pop()\n            else:\n                return False\n        elif char == \">\":\n            if stack:\n                stack.pop()\n            else:\n                return False\n    if stack:\n        return False\n    return True\n\n"}
{"task_id": "HumanEval/57", "completion": "    for i in range(len(l)):\n        if l[i] > l[i+1]:\n            return False\n    return True\n\n"}
{"task_id": "HumanEval/58", "completion": "    return sorted(set(l1).intersection(set(l2)))\n\n"}
{"task_id": "HumanEval/59", "completion": "    largest = 1\n    for i in range(2, n):\n        if n % i == 0:\n            largest = i\n    return largest\n\n"}
{"task_id": "HumanEval/60", "completion": "    return sum(range(1, n + 1))\n\n"}
{"task_id": "HumanEval/61", "completion": "    stack = []\n    for char in brackets:\n        if char == \"(\":\n            stack.append(char)\n        elif char == \")\":\n            if not stack:\n                return False\n            else:\n                top = stack.pop()\n                if top!= \"(\":\n                    return False\n    if not stack:\n        return True\n    else:\n        return False\n\n"}
{"task_id": "HumanEval/62", "completion": "    result = []\n    for i in range(len(xs)):\n        result.append(xs[i] - xs[i + 1])\n    return result\n\n"}
{"task_id": "HumanEval/63", "completion": "    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return b\n\n"}
{"task_id": "HumanEval/64", "completion": "\n    count = 0\n    for char in s:\n        if char == 'a':\n            count += 1\n        elif char == 'e':\n            count += 1\n        elif char == 'i':\n            count += 1\n        elif char == 'o':\n            count += 1\n        elif char == 'u':\n            count += 1\n        elif char == 'y':\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/65", "completion": "    s = str(x)\n    s = s[::-1]\n    s = s[::-1]\n    return int(s)\n\n"}
{"task_id": "HumanEval/66", "completion": "    result = \"\"\n    for i in s:\n        if i.isupper():\n            result += i\n    return int(result)\n\n"}
{"task_id": "HumanEval/67", "completion": "    count = 0\n    for i in s:\n        if i == \"a\":\n            count += 1\n        elif i == \"e\":\n            count -= 1\n        elif i == \"i\":\n            count += 1\n        elif i == \"o\":\n            count -= 1\n        elif i == \"u\":\n            count += 1\n    return count\n"}
{"task_id": "HumanEval/68", "completion": "    if len(arr) == 0:\n        return []\n    result = []\n    for i in range(len(arr)):\n        if arr[i] % 2 == 0:\n            result.append(arr[i])\n    return result\n\n"}
{"task_id": "HumanEval/69", "completion": "    d = {}\n    for i in lst:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    return max(d, key=d.get)\n\n"}
{"task_id": "HumanEval/70", "completion": "    result = []\n    for num in lst:\n        if num % 2 == 0:\n            result.append(num)\n    result.sort()\n    return result\n\n"}
{"task_id": "HumanEval/71", "completion": "    if len(a) < 2:\n        return \"Input list must be greater than 2.\"\n    elif a[0] + a[1] + a[2] > c:\n        return \"Triangle must be a valid triangle.\"\n    else:\n        return round(a[0] * a[1] * a[2] / 6, 2)\n\n"}
{"task_id": "HumanEval/72", "completion": "    d = {}\n    for i in q:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    return sum(d.values()) <= w\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "HumanEval/73", "completion": "    count = 0\n    for n in arr:\n        if n!= n+1:\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/74", "completion": "    result = []\n    for i in lst1:\n        if i in lst2:\n            result.append(i)\n    return result\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "HumanEval/75", "completion": "    if len(a) < 2:\n        return False\n    for i in range(1, int(len(a)**0.5)+1):\n        if a % i == 0:\n            return False\n    return True\n\n"}
{"task_id": "HumanEval/76", "completion": "    if n <= 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        return False\n\n"}
{"task_id": "HumanEval/77", "completion": "    if type(a) is not int:\n        return False\n    else:\n        return a**3 == a\n\n"}
{"task_id": "HumanEval/78", "completion": "    count = 0\n    for i in num:\n        if i.isdigit():\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/79", "completion": "\n    result = \"\"\n    while decimal > 0:\n        result += str(decimal % 2)\n        decimal //= 2\n    return result[::-1]\n\n"}
{"task_id": "HumanEval/80", "completion": "    max_length = 0\n    for char in s:\n        if char.isdigit():\n            max_length += 1\n        else:\n            if max_length > 0:\n                return False\n            max_length = 0\n    return True\n\n"}
{"task_id": "HumanEval/81", "completion": "    sorted_grades = []\n    for grade in grades:\n        if grade.isalpha():\n            sorted_grades.append(grade)\n        else:\n            sorted_grades.append(grade.upper())\n    sorted_grades.sort()\n    return sorted_grades\n\n"}
{"task_id": "HumanEval/82", "completion": "    if len(string) < 2:\n        return False\n    for i in range(2, int(len(string)/2)+1):\n        if string[i] == string[i-1]:\n            return False\n    return True\n"}
{"task_id": "HumanEval/83", "completion": "    count = 0\n    for i in range(1, n):\n        if i % 2 == 0:\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/84", "completion": "    string = str(N)\n    sum_digits = 0\n    for i in range(len(string)):\n        sum_digits += int(string[i])\n    return sum_digits\n\n"}
{"task_id": "HumanEval/85", "completion": "    sum = 0\n    for i in lst:\n        if i % 2 == 0:\n            sum += i\n    return sum\n\n"}
{"task_id": "HumanEval/86", "completion": "    result = ''\n    for c in s:\n        if c =='':\n            result += c\n        else:\n            result += c.upper()\n    return result\n"}
{"task_id": "HumanEval/87", "completion": "    result = []\n    for row in lst:\n        for i in range(len(row)):\n            if row[i] == x:\n                result.append((i, row.index(x)))\n    result.sort(key=lambda x: x[1])\n    return result\n\n"}
{"task_id": "HumanEval/88", "completion": "\n    # Step 1. Create a dictionary to store the count of each element in the array.\n    count_dict = {}\n    for element in array:\n        if element not in count_dict:\n            count_dict[element] = 1\n        else:\n            count_dict[element] += 1\n\n    # Step 2. Iterate through the array and update the count of each element in the dictionary.\n    sorted_array = []\n    for element in array:\n        sorted_array.append(element)\n        if count_dict[element] % 2 == 0:\n            sorted_array.sort(reverse=True)\n\n    # Step 3. Sort the list in descending order.\n    sorted_array.sort(reverse=True)\n\n    # Step 4. Iterate through the sorted list.\n        # -If the index is even, add the key-value pair to the sorted array.\n    for index in range(len(sorted_array)):\n        if index % 2 == 0:\n            sorted_array.insert(index, count_dict[sorted_array[index]])\n\n    return sorted_array\n\n"}
{"task_id": "HumanEval/89", "completion": "    result = ''\n    for c in s:\n        if c.isalpha():\n            result += c\n        else:\n            result += c.upper()\n    return result\n\n"}
{"task_id": "HumanEval/90", "completion": "    largest = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < largest:\n            largest = lst[i]\n    return largest\n\n"}
{"task_id": "HumanEval/91", "completion": "    count = 0\n    for char in S:\n        if char == 'a':\n            count += 1\n        elif char == 'B':\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/92", "completion": "    if len(x) == 0:\n        return True\n    else:\n        return False\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}
{"task_id": "HumanEval/93", "completion": "    result = ''\n    for char in message:\n        if char.lower() in 'aeiou':\n            result += char.upper()\n        else:\n            result += char\n    return result\n\n"}
{"task_id": "HumanEval/94", "completion": "    largest = 0\n    for i in lst:\n        if i > largest:\n            largest = i\n        else:\n            largest += 1\n    return largest\n\n"}
{"task_id": "HumanEval/95", "completion": "    if not dict:\n        return False\n    for key in dict:\n        if not isinstance(key, str):\n            return False\n        if key.lower() in dict:\n            dict[key.lower()] += 1\n        else:\n            dict[key.upper()] = 1\n    return dict\n\n"}
{"task_id": "HumanEval/96", "completion": "    result = []\n    for i in range(n):\n        if is_prime(i):\n            result.append(i)\n    return result\n\n"}
{"task_id": "HumanEval/97", "completion": "    product = 1\n    for i in range(len(str(a))):\n        product = product * int(str(a)[i])\n    for i in range(len(str(b))):\n        product = product * int(str(b)[i])\n    return product\n\n"}
{"task_id": "HumanEval/98", "completion": "    count = 0\n    for i in s:\n        if i.isupper():\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/99", "completion": "    result = 0\n    for char in value:\n        if char.isdigit():\n            if char in result:\n                result += 1\n            else:\n                result = char\n        else:\n            result = char\n    return result\n\n"}
{"task_id": "HumanEval/100", "completion": "    result = []\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            result.append(i)\n    return result\n\n"}
{"task_id": "HumanEval/101", "completion": "    return s.split(\" \")\n\n"}
{"task_id": "HumanEval/102", "completion": "    result = []\n    for i in range(x, y+1):\n        if i % 2 == 0:\n            result.append(i)\n    return result\n\n"}
{"task_id": "HumanEval/103", "completion": "    sum = 0\n    for i in range(1, n+1):\n        if i > m:\n            return -1\n        sum += i\n    return str(sum)\n\n"}
{"task_id": "HumanEval/104", "completion": "    result = []\n    for i in x:\n        if i % 2 == 0:\n            result.append(i)\n    return sorted(result)\n\n"}
{"task_id": "HumanEval/105", "completion": "    result = []\n    for i in arr:\n        if i < 1 or i > 9:\n            result.append(i)\n        else:\n            result.append(f\"One {i}\")\n    result.sort(reverse=True)\n    return result\n\n"}
{"task_id": "HumanEval/106", "completion": "    result = []\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            result.append(i)\n    return result\n\n"}
{"task_id": "HumanEval/107", "completion": "    count = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            count += 1\n        else:\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/108", "completion": "    count = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n    return count\n\n"}
{"task_id": "HumanEval/109", "completion": "    if len(arr) == 0:\n        return True\n    if arr[1] > arr[0]:\n        return arr[1]\n    for i in range(2, len(arr)):\n        if arr[i] > arr[i-1]:\n            return arr[i]\n    return None\n\n"}
{"task_id": "HumanEval/110", "completion": "    result = 0\n    for i in lst1:\n        if i % 2 == 0:\n            result += 1\n    for i in lst2:\n        if i % 2 == 0:\n            result += 1\n    return \"YES\" if result == len(lst1) else \"NO\"\n\n"}
{"task_id": "HumanEval/111", "completion": "    if test == '':\n        return {}\n    else:\n        result = {}\n        for char in test:\n            if char in result:\n                result[char] += 1\n            else:\n                result[char] = 1\n        return result\n\n"}
{"task_id": "HumanEval/112", "completion": "    result = \"\"\n    for i in s:\n        if i == c:\n            result += i\n        else:\n            result += i\n    return (result,result == result[::-1])\n\n"}
{"task_id": "HumanEval/113", "completion": "    result = []\n    for i in lst:\n        if i[0] == '0':\n            result.append(i)\n        else:\n            result.append(str(len(i) - int(i[0])))\n    return result\n\n"}
{"task_id": "HumanEval/114", "completion": "    max_sum = 0\n    for num in nums:\n        max_sum = max(num, max_sum + num)\n    return max_sum\n\n"}
{"task_id": "HumanEval/115", "completion": "    if not grid or not grid[0]:\n        return 0\n    m = len(grid)\n    n = len(grid[0])\n    max_count = 0\n    for i in range(m):\n        for j in range(n):\n            if grid[i][j] == 1:\n                max_count = max(max_count, max_fill_helper(grid, i, j, capacity))\n    return max_count\n"}
{"task_id": "HumanEval/116", "completion": "    binary_arr = [int(i) for i in bin(arr)[2:]]\n    binary_arr.sort()\n    return binary_arr\n"}
{"task_id": "HumanEval/117", "completion": "    result = []\n    for word in s.split():\n        if len(word) <= n:\n            result.append(word)\n    return result\n\n"}
{"task_id": "HumanEval/118", "completion": "    count = 0\n    for i in range(len(word)):\n        if word[i] == 'a':\n            count += 1\n        elif word[i] == 'e':\n            count -= 1\n        elif word[i] == 'i':\n            count += 1\n        elif word[i] == 'o':\n            count -= 1\n        elif word[i] == 'u':\n            count += 1\n        elif word[i] == 'A':\n            count += 1\n        elif word[i] == 'E':\n            count -= 1\n        elif word[i] == 'I':\n            count += 1\n        elif word[i] == 'O':\n            count -= 1\n        elif word[i] == 'U':\n            count += 1\n    return '' if count == 0 else word[count-1]\n\n"}
{"task_id": "HumanEval/119", "completion": "    result = ''\n    for char in lst[0]:\n        if char == '(':\n            result += char\n        else:\n            result += char\n    for char in lst[1]:\n        if char == ')':\n            if result == '':\n                result += char\n            else:\n                result = result[:-1]\n        else:\n            result += char\n    return result == ''\n\n"}
{"task_id": "HumanEval/120", "completion": "    result = []\n    for i in range(len(arr)):\n        if arr[i] == k:\n            result.append(arr[i])\n    return sorted(result)\n\n"}
{"task_id": "HumanEval/121", "completion": "    sum = 0\n    for i in lst:\n        if i % 2 == 0:\n            sum += i\n    return sum\n\n"}
{"task_id": "HumanEval/122", "completion": "    result = []\n    for i in arr[:k]:\n        if i % 2 == 1:\n            result.append(i)\n    return result\n\n"}
{"task_id": "HumanEval/123", "completion": "    result = []\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            result.append(i)\n        else:\n            result.append(i//2)\n    return sorted(result)\n\n"}
{"task_id": "HumanEval/124", "completion": "    if not date:\n        return False\n\n    if not date.isdigit():\n        return False\n\n    try:\n        int(date)\n        return True\n    except ValueError:\n        return False\n\n"}
{"task_id": "HumanEval/125", "completion": "    count = 0\n    words = []\n    for char in txt:\n        if char =='':\n            count += 1\n        else:\n            if count > 0:\n                words.append(txt[count-1:count+1])\n            count = 0\n    if count > 0:\n        words.append(txt[count-1:count+1])\n    return words\n\n"}
{"task_id": "HumanEval/126", "completion": "    for i in range(len(lst)):\n        if lst[i] > lst[i+1]:\n            return lst[i]\n    return None\n\n"}
{"task_id": "HumanEval/127", "completion": "    if interval1[0] > interval2[1]:\n        return \"NO\"\n    else:\n        sum = 0\n        count = 0\n        for i in range(max(interval1[0], interval2[0]), min(interval1[1], interval2[1]) + 1):\n            if i == interval1[1]:\n                count += 1\n            elif i > interval1[1]:\n                sum += i\n        return str(sum) if count == 1 else \"NO\"\n\n"}
{"task_id": "HumanEval/128", "completion": "    result = []\n    for num in arr:\n        if num!= 0:\n            result.append(num * 1)\n        else:\n            result.append(num * -1)\n    return sum(result)\n\n"}
{"task_id": "HumanEval/129", "completion": "\n    if not grid:\n        return []\n    if not k:\n        return [grid[0][0]]\n    if not len(grid) or not len(grid[0]):\n        return []\n    max_distance = 0\n    for row in grid:\n        for col in row:\n            if col < max_distance:\n                max_distance = col\n    return [max_distance]\n\n"}
{"task_id": "HumanEval/130", "completion": "    result = []\n    a, b = 0, 1\n    for i in range(n):\n        if i < n:\n            result.append(a)\n            a, b = b, a + b\n        else:\n            break\n    return result\n\n"}
{"task_id": "HumanEval/131", "completion": "    str_n = str(n)\n    product = 1\n    for i in range(len(str_n)):\n        if str_n[i] == \"0\":\n            product *= 0\n        else:\n            product *= int(str_n[i])\n    return product\n\n"}
{"task_id": "HumanEval/132", "completion": "    stack = []\n    for char in string:\n        if char == '[':\n            stack.append(char)\n        elif char == ']':\n            if len(stack) == 0:\n                return False\n            top = stack.pop()\n            if top!= '[':\n                return False\n    return len(stack) == 0\n\n"}
{"task_id": "HumanEval/133", "completion": "    result = []\n    for i in lst:\n        if i not in result:\n            result.append(round(i**2, int(round(i**0.5))))\n    return result\n\n"}
{"task_id": "HumanEval/134", "completion": "    if txt[-1] == \" \":\n        return True\n    else:\n        return False\n\n"}
{"task_id": "HumanEval/135", "completion": "    if len(arr) == 1:\n        return 0\n    if len(arr) == 2:\n        return 1\n    if arr[0] > arr[1]:\n        return 0\n    return -1\n\n"}
{"task_id": "HumanEval/136", "completion": "    largest = None\n    for i in lst:\n        if i < 0:\n            largest = i\n        else:\n            break\n    return (largest, largest)\n\n"}
{"task_id": "HumanEval/137", "completion": "    if len(a) == 1 and len(b) == 1:\n        return a[0] if a[0] == b[0] else None\n    else:\n        return None\n\n"}
{"task_id": "HumanEval/138", "completion": "    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum += i\n    return sum == n\n\n"}
{"task_id": "HumanEval/139", "completion": "    result = 1\n    for i in range(1, n + 1):\n        result *= i\n    return result\n\n"}
{"task_id": "HumanEval/140", "completion": "    result = \"\"\n    for char in text:\n        if char == \" \":\n            result += \"_\"\n        else:\n            result += char\n    return result\n\n"}
{"task_id": "HumanEval/141", "completion": "    if len(file_name) < 3:\n        return \"File name must be at least 3 characters long.\"\n    elif file_name[0]!= \".\":\n        return \"File name must contain exactly one dot.\"\n    elif file_name[0] == \"a\":\n        return \"File name starts with a latin alphapet letter.\"\n    elif file_name[0] == \"b\":\n        return \"File name starts with a latin alphapet letter.\"\n    else:\n        return -1\n\n"}
{"task_id": "HumanEval/142", "completion": "    sum = 0\n    for i in lst:\n        if i % 3 == 0 or i % 4 == 0:\n            sum += i\n    return sum\n\n"}
{"task_id": "HumanEval/143", "completion": "    words = sentence.split()\n    unique_words = list(set(words))\n    new_words = []\n    for word in unique_words:\n        if word.isdigit():\n            new_words.append(word)\n    return''.join(new_words)\n\n"}
{"task_id": "HumanEval/144", "completion": "    result = 0\n    for i in x:\n        if i.isdigit():\n            result += int(i)\n        else:\n            if abs(result) > 1:\n                return False\n            result -= 1\n    return True\n\n"}
{"task_id": "HumanEval/145", "completion": "    nums.sort()\n    new_list = []\n    for i in range(len(nums)):\n        new_list.append(abs(nums[i]))\n    return new_list\n\n"}
{"task_id": "HumanEval/146", "completion": "    count = 0\n    for num in nums:\n        if num > 10:\n            count += 1\n    return count\n"}
{"task_id": "HumanEval/147", "completion": "    prime_numbers = []\n    for i in range(1, n):\n        if i % 3 == 0:\n            prime_numbers.append(i)\n    return len(prime_numbers)\n\n"}
{"task_id": "HumanEval/148", "completion": "    planet1 = planet1.lower()\n    planet2 = planet2.lower()\n    planet1_dict = {}\n    planet2_dict = {}\n    for i in range(1, len(planet1)):\n        if planet1[i] not in planet1_dict:\n            planet1_dict[planet1[i]] = 1\n        else:\n            planet1_dict[planet1[i]] += 1\n    for i in range(1, len(planet2)):\n        if planet2[i] not in planet2_dict:\n            planet2_dict[planet2[i]] = 1\n        else:\n            planet2_dict[planet2[i]] += 1\n    for i in range(1, len(planet1)):\n        if planet1[i] not in planet2_dict:\n            planet2_dict[planet1[i]] = 1\n        else:\n            planet2_dict[planet1[i]] += 1\n    for i in range("}
{"task_id": "HumanEval/149", "completion": "    result = []\n    for word in lst:\n        if len(word) < 3:\n            result.append(word)\n    result.sort(reverse=True)\n    return result\n\n"}
{"task_id": "HumanEval/150", "completion": "    if n == 1:\n        return x\n    elif n == 2:\n        return y\n    elif n % 2 == 0:\n        return False\n    else:\n        return x_or_y(n-1, x, y)\n\n"}
{"task_id": "HumanEval/151", "completion": "    sum = 0\n    for num in lst:\n        if num % 2 == 0:\n            sum += num ** 2\n    return sum\n\n"}
{"task_id": "HumanEval/152", "completion": "    if len(game)!= len(guess):\n        return [0]\n    result = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n            result.append(0)\n        else:\n            result.append(abs(game[i]-guess[i]))\n    return result\n\n"}
{"task_id": "HumanEval/153", "completion": "    result = ''\n    for char in class_name:\n        if char.isalpha():\n            result += char\n    result = result.lower()\n    result = result.split('.')\n    result.sort(reverse=True)\n    return '.'.join(result)\n\n"}
{"task_id": "HumanEval/154", "completion": "\n    if len(a)!= len(b):\n        return False\n    if a == b:\n        return True\n    for i in range(len(a)):\n        if a[i]!= b[i]:\n            return False\n    return True\n\n"}
{"task_id": "HumanEval/155", "completion": "    string = str(num)\n    if len(string) % 2 == 0:\n        return (string, len(string))\n    else:\n        return (string[::2], len(string[1::2]))\n\n"}
{"task_id": "HumanEval/156", "completion": "    result = ''\n    for i in range(len(number)):\n        if number[i] == '0':\n            result += '0'\n        elif number[i] == '1':\n            result += '1'\n        elif number[i] == '2':\n            result += '2'\n        elif number[i] == '3':\n            result += '3'\n        elif number[i] == '4':\n            result += '4'\n        elif number[i] == '5':\n            result += '5'\n        elif number[i] == '6':\n            result += '6'\n        elif number[i] == '7':\n            result += '7'\n        elif number[i] == '8':\n            result += '8'\n        elif number[i] == '9':\n            result += '9'\n        elif number[i] == 'a':\n            result += 'a'\n        elif number[i] == 'b':\n            result += 'b'\n        elif number[i] == 'c':\n            result += 'c'\n        elif number["}
{"task_id": "HumanEval/157", "completion": "    if a < 1 or b < 1 or c < 1:\n        return False\n    return a * a + b * b == c * c\n\n"}
{"task_id": "HumanEval/158", "completion": "    result = \"\"\n    for word in words:\n        if len(word) > len(result):\n            result = word\n    return result\n\n"}
{"task_id": "HumanEval/159", "completion": "    count = 0\n    nums = [number]\n    while nums:\n        n = nums.pop()\n        if n == need:\n            count += 1\n        else:\n            nums.append(n)\n    return [count, len(nums)]\n\n"}
{"task_id": "HumanEval/160", "completion": "\n    result = []\n    for i in operand:\n        if i.isdigit():\n            result.append(i)\n        else:\n            result.append(i * result[-1])\n    return result\n\n"}
{"task_id": "HumanEval/161", "completion": "    result = \"\"\n    for i in s:\n        if i.isalpha():\n            result += i.lower()\n        else:\n            result += i\n    return result\n\n"}
{"task_id": "HumanEval/162", "completion": "    import hashlib\n    if not text:\n        return None\n    return hashlib.md5(text.encode('utf-8')).hexdigest()\n"}
{"task_id": "HumanEval/163", "completion": "    digits = []\n    for i in range(a, b+1):\n        if i % 2 == 0:\n            digits.append(i)\n    return sorted(digits)\n\n"}
