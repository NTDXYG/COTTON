{"task_id": "Open/0", "completion": "    sum = 0\n    for i in range(N) :\n        sum += arr[i]\n    count = 0\n    for i in range(N) :\n        if (arr[i] + i) > sum :\n            count += 1\n    return count\n"}
{"task_id": "Open/1", "completion": "\n"}
{"task_id": "Open/2", "completion": "\n"}
{"task_id": "Open/3", "completion": "    # Write your code here\n    count = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            if A[i]+A[j]%K == 0:\n                count += 1\n    return count\n\nA = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nn = len(A)\nK = 3"}
{"task_id": "Open/4", "completion": "    for i in range(len(a)):\n        if sum(a[:i]) == n - sum(a[i+1:]):\n            return True\n    return False\n"}
{"task_id": "Open/5", "completion": "    \n"}
{"task_id": "Open/6", "completion": "\n"}
{"task_id": "Open/7", "completion": "    max_length = 0\n    for i in range(n) :\n        for j in range(i+1, n) :\n            if isSubsequence(arr[i], arr[j]) :\n                max_length = max(max_length, j-i+1)\n    return max_length\n"}
{"task_id": "Open/8", "completion": "    # Step 1\n    distinct_prime_factors = {}\n    \n    # Step 2\n    for i in a :\n        factors = []\n        for j in range(1,i+1) :\n            if i % j == 0 :\n                factors.append(j)\n        distinct_prime_factors[i] = len(factors)\n    \n    # Step 3\n    count = 0\n    for i in distinct_prime_factors :\n        count += distinct_prime_factors[i]\n    \n    # Step 4\n    return count\n"}
{"task_id": "Open/9", "completion": "    arr.sort()\n    return min(arr[n-1] - arr[0], arr[n-1] - arr[1:k+1])\n"}
{"task_id": "Open/10", "completion": "    \n    # Initialize total time as 0.\n    total_time = 0\n    \n    # Iterate through the lists, comparing each element from A with the corresponding element from B.\n    for i in range(len(A)):\n        # If the elements are equal, increment total time by 1.\n        if A[i] == B[i]:\n            total_time += 1\n        # If the elements are not equal, move the element from B to the front of the list and the element from A to the end of the list.\n        else:\n            B.append(B.pop(0))\n            A.append(A.pop())\n            total_time += 2\n    \n    # Return total time.\n    return total_time\n"}
{"task_id": "Open/11", "completion": "    count = 0\n    for i in array:\n        if i%2 == 0 and i!= 0 and i!= 2:\n            count += 1\n    return count\n"}
{"task_id": "Open/12", "completion": "\n"}
{"task_id": "Open/13", "completion": "\n"}
{"task_id": "Open/14", "completion": "    if n % 4 == 0:\n        return n\n    elif n % 4 == 1:\n        return 1\n    elif n % 4 == 2:\n        return n + 1\n    elif n % 4 == 3:\n        return 0\n    else:\n        return \"\"\n"}
{"task_id": "Open/15", "completion": "    a = random.randint( 2, n-1 )\n    for i in range( t ) :\n        if pow( a, (n-1)//2, n )!= 1 and pow( a, (n-1)//2, n )!= n-1 :\n            return -1\n    return 1\n"}
{"task_id": "Open/16", "completion": "    for i in range(len(s1)):\n        if s1[i] == '0' and s2[i] == '1':\n            return True\n        elif s1[i] == '1' and s2[i] == '0':\n            return True\n        elif s1[i] == '0' and s2[i] == 'Z':\n            return True\n        elif s1[i] == 'Z' and s2[i] == '0':\n            return True\n    return False\n"}
{"task_id": "Open/17", "completion": "    return (x * (a + b) * (c - d)) / ((a * d) - (b * c))\n"}
{"task_id": "Open/18", "completion": "    count = 0\n    for i in range(0, length, 2):\n        if s[i] == '1':\n            count += 1\n    for i in range(1, length, 2):\n        if s[i] == '0':\n            count += 1\n    return min(count, length - count)\n"}
{"task_id": "Open/19", "completion": "    \n    counter = 0\n    \n    for i in range(1, n+1):\n        if math.pow(i, 2) <= n:\n            counter += 1\n    \n    return counter\n"}
{"task_id": "Open/20", "completion": ""}
{"task_id": "Open/21", "completion": "    count0 = 0\n    count1 = 0\n    count2 = 0\n    count3 = 0\n    for i in range(n) :\n        if a[i] % 4 == 0 :\n            count0 += 1\n        elif a[i] % 4 == 1 :\n            count1 += 1\n        elif a[i] % 4 == 2 :\n            count2 += 1\n        else :\n            count3 += 1\n    if count0 == count1 == count2 == count3 :\n        return 1\n    else :\n        return 2\n"}
{"task_id": "Open/22", "completion": "    max_len = 1\n    for i in range(n) :\n        if arr[i] >= arr[i-1] :\n            max_len += 1\n        else :\n            max_len = 1\n    return max_len\n"}
{"task_id": "Open/23", "completion": "    if i == n :\n        return count\n    if sum == 0 :\n        count += 1\n    subsetSum(arr, n, i+1, sum-arr[i], count)\n    subsetSum(arr, n, i+1, sum, count)\n    return count\n\narr = [1, 2, 3, 4, 5]\nn = len(arr)"}
{"task_id": "Open/24", "completion": "    return (n * 7) - 4\n"}
{"task_id": "Open/25", "completion": "\n"}
{"task_id": "Open/26", "completion": "    max_sum = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            max_sum += i\n            n = n // i\n    return max_sum\n"}
{"task_id": "Open/27", "completion": "    return x <= y\n"}
{"task_id": "Open/28", "completion": "    "}
{"task_id": "Open/29", "completion": "\n"}
{"task_id": "Open/30", "completion": "\n"}
{"task_id": "Open/31", "completion": "    arr.sort()\n    return arr[k-1]\n\narr = [1,2,3,4,5]"}
{"task_id": "Open/32", "completion": "    return 3**n\n"}
{"task_id": "Open/33", "completion": "    "}
{"task_id": "Open/34", "completion": "    \n    count = 0\n    for i in range(len(a)):\n        subarray = a[i:]\n        product = 1\n        for j in subarray:\n            product *= j\n        if product < k:\n            count += 1\n    return count\n"}
{"task_id": "Open/35", "completion": "    count = 0\n    for i in range(1,n+1):\n        if i%d == 0:\n            count += 1\n    return count\n"}
{"task_id": "Open/36", "completion": "    # write your code here\n    for i in range(1,n+1):\n        if i not in arr:\n            return i\n    return n+1\n"}
{"task_id": "Open/37", "completion": "\n"}
{"task_id": "Open/38", "completion": "    # TODO: Write your code here\n    return 0\n"}
{"task_id": "Open/39", "completion": "    return sum( range( 1, N + 1 ) )\n"}
{"task_id": "Open/40", "completion": "\n"}
{"task_id": "Open/41", "completion": "    max_length = 0\n    for i in range(n):\n        if arr[i] == 0:\n            max_length = 1\n        else:\n            if max_length < i+1:\n                max_length = i+1\n    return max_length\n\narr = [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1"}
{"task_id": "Open/42", "completion": "    max_mins = 0\n    for i in range(n-k):\n        mins = min(a[i:i+k])\n        max_mins = max(max_mins, mins)\n    return max_mins\n"}
{"task_id": "Open/43", "completion": "    count = 0\n    for i in range(n) :\n        prod = 1\n        for j in range(i, n) :\n            prod *= array[j]\n            if prod <= k :\n                count += 1\n    return count\n"}
{"task_id": "Open/44", "completion": "    # Step 1. Sort the array in ascending order.\n    arr.sort()\n    \n    # Step 2. Iterate through the array.\n    # Calculate the absolute difference between the element and its corresponding index.\n    # Add the absolute difference to the total sum.\n    total_sum = 0\n    for i in range(len(arr)):\n        total_sum += abs(arr[i] - i)\n    \n    return total_sum\n\narr = [1, 2, 3, 4, 5]"}
{"task_id": "Open/45", "completion": "    min_val = arr[0]\n    for i in range(1, n) :\n        if arr[i] < min_val :\n            min_val = arr[i]\n    return min_val * (n - 1)\n"}
{"task_id": "Open/46", "completion": "    max_diff = 0\n    for i in range(len(array)):\n        diff = i + 1 - array[i]\n        if diff > max_diff:\n            max_diff = diff\n    return max_diff\n"}
{"task_id": "Open/47", "completion": "\n"}
{"task_id": "Open/48", "completion": "    count = 0\n    for i in range(a):\n        if a == 0:\n            count += 1\n        else:\n            a = i + (a ^ i)\n    return count\n"}
{"task_id": "Open/49", "completion": "    return L & R\n"}
{"task_id": "Open/50", "completion": "\n"}
{"task_id": "Open/51", "completion": "\n"}
{"task_id": "Open/52", "completion": "    # Write your code here\n    xor_dict = {}\n    for i in range(n):\n        for j in range(n):\n            if (i+j)%2!= 0:\n                xor_dict[i,j] = arr[i,j]^arr[i,j+1]^arr[i+1,j]^arr[i+1,j+1]\n    return xor_dict\n"}
{"task_id": "Open/53", "completion": "    count = 0\n    for i in range(N+1):\n        count += (i ^ i)\n    return count\n"}
{"task_id": "Open/54", "completion": "\n"}
{"task_id": "Open/55", "completion": "    return n & 1 == 1\n"}
{"task_id": "Open/56", "completion": "\n"}
{"task_id": "Open/57", "completion": "    return N if N % K == 0 else N - N % K\n"}
{"task_id": "Open/58", "completion": "\n"}
{"task_id": "Open/59", "completion": "    return arr[index]\n"}
{"task_id": "Open/60", "completion": "    #Step 1\n    for i in range( int(math.sqrt(n)) ) :\n        #Step 2\n        if i**2 + (n - i**2) in range(n) :\n            return True\n    #Step 3\n    return False\n"}
{"task_id": "Open/61", "completion": "\n"}
{"task_id": "Open/62", "completion": "    modified_str = \"\"\n    for i in range(len-1, -1, -1):\n        if str[i] > str[i+1]:\n            str[i] -= 1\n            for j in range(i+1, len):\n                str[j] = 9\n        modified_str += str[i]\n    return modified_str\n"}
{"task_id": "Open/63", "completion": "    \n    min_value = float('inf')\n    \n    for i in range(n) :\n        arr[i] = math.log(arr[i])\n    \n    for i in range(n) :\n        if arr[i] < min_value * n :\n            min_value = arr[i]\n    \n    return min_value\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n"}
{"task_id": "Open/64", "completion": "\n    # Step 1\n    largest = \"\"\n\n    # Step 2\n    for char in s :\n        if char!= \"1\" and len(largest) < len(char) :\n            largest = char\n\n    # Step 3\n    if largest == \"\" or largest == \"1\" :\n        return -1\n\n    # Step 4\n    return largest\n"}
{"task_id": "Open/65", "completion": "    count = 0\n    b = []\n    for i in range(k, n):\n        if a[i] <= k:\n            b.append(a[i])\n        else:\n            count += 1\n    return len(b), count\n"}
{"task_id": "Open/66", "completion": "    new_size = n - k\n    arr.sort()\n    if new_size % 2 == 0 :\n        return (arr[new_size//2] + arr[new_size//2 - 1]) / 2\n    else :\n        return arr[new_size//2]\n"}
{"task_id": "Open/67", "completion": "\n"}
{"task_id": "Open/68", "completion": "    if n == 1 :\n        return 0\n    v = []\n    n -= 1\n    while n > 0 :\n        v.append( n % 5 )\n        n = n // 5\n    result = 0\n    for i in range( len( v ) - 1, -1, -1 ) :\n        result = result * 10 + v[ i ]\n    return 2 * result\n"}
{"task_id": "Open/69", "completion": "    return False\n"}
{"task_id": "Open/70", "completion": "\n"}
{"task_id": "Open/71", "completion": "    # TODO: Write your code here\n    return 0\n"}
{"task_id": "Open/72", "completion": "    sum = 0\n    for i in range(1, n+1):\n        series = [1]\n        for j in range(1, i+1):\n            series.append(series[j-1] + 2)\n        sum += sum(series)\n    return sum\n"}
{"task_id": "Open/73", "completion": "    # Step 1\n    count = {}\n    for i in range(n) :\n        if arr[i] in count :\n            count[arr[i]] += 1\n        else :\n            count[arr[i]] = 1\n    # Step 2\n    for i in range(n) :\n        if count[arr[i]] > count[maxm] :\n            maxm = arr[i]\n    # Step 3\n    return maxm\n"}
{"task_id": "Open/74", "completion": "\n"}
{"task_id": "Open/75", "completion": "\n"}
{"task_id": "Open/76", "completion": "\n"}
{"task_id": "Open/77", "completion": "    return radian * 180 / pi\n"}
{"task_id": "Open/78", "completion": "    return math.floor(n/2)\n"}
{"task_id": "Open/79", "completion": "    return (a + (n-1) * d) * n / 2\n"}
{"task_id": "Open/80", "completion": "    if n % 2 == 1:\n        return 1\n    max_power = 0\n    while n > 1:\n        n = n // 2\n        max_power += 1\n    return max_power\n"}
{"task_id": "Open/81", "completion": "    # Write your code here\n    squares = 0\n    for i in range(moves):\n        if (row+i)>=0 and (row+i)<8 and (column+i)>=0 and (column+i)<8:\n            squares += 1\n    return squares\n"}
{"task_id": "Open/82", "completion": "\n"}
{"task_id": "Open/83", "completion": "\n"}
{"task_id": "Open/84", "completion": "    # Step 1\n    arr = []\n    \n    # Step 2\n    for i in range(1, n+1, 2):\n        arr.append(i)\n    \n    # Step 3\n    for i in range(2, n+1, 2):\n        arr.append(i)\n    \n    # Step 4\n    sum = 0\n    for i in range(l-1, r+1):\n        sum += arr[i]\n    \n    # Step 5\n    return sum\n"}
{"task_id": "Open/85", "completion": "    if x < y :\n        x, y = y, x\n    if x % y == 0 :\n        return y\n    else :\n        return getHCF(x//y, y)\n"}
{"task_id": "Open/86", "completion": "    count = 0\n    num = A\n    while count < N :\n        count += 1\n        num += B\n        A = num\n    return num\n"}
{"task_id": "Open/87", "completion": "    count = 0\n    for i in str.split() :\n        if i == substr :\n            count += 1\n    return count\n"}
{"task_id": "Open/88", "completion": "    # Step 1. Convert the annual interest rate to a monthly interest rate by dividing it by 12 and 100.\n    monthly_interest_rate = r / 1200\n    # Step 2. Convert the loan tenure from years to months by multiplying it by 12.\n    loan_tenure = t * 12\n    # Step 3. Calculate the EMI using the formula: EMI = (p * r * (1 + r)^t) / ((1 + r)^t - 1).\n    emi = (p * monthly_interest_rate * (1 + monthly_interest_rate)**loan_tenure) / ((1 + monthly_interest_rate)**loan_tenure - 1)\n    # Step 4. Return the calculated EMI.\n    return emi\n"}
{"task_id": "Open/89", "completion": "    # Write your code here.\n    counter = 0\n    for i in range(len(A)):\n        for j in range(i+1,len(A)):\n            for k in range(j+1,len(A)):\n                if A[i]*A[k] > A[j]*A[j]:\n                    counter += 1\n    return counter\n"}
{"task_id": "Open/90", "completion": "    count = 0\n    for i in range(l,r+1):\n        if i%10 in [2,3,9]:\n            count += 1\n    return count\n"}
{"task_id": "Open/91", "completion": "    max_length = 0\n    for i in range( len(arr) ) :\n        for j in range( i+1, len(arr) ) :\n            if arr[i] - arr[j] == 1 :\n                max_length += 1\n            else :\n                break\n    return max_length\n"}
{"task_id": "Open/92", "completion": "\n"}
{"task_id": "Open/93", "completion": "\n"}
{"task_id": "Open/94", "completion": "\n"}
{"task_id": "Open/95", "completion": "\n"}
{"task_id": "Open/96", "completion": "    sum1 = 0\n    sum2 = 0\n    for i in range(n) :\n        sum1 += arr[i]\n    for i in range(n) :\n        sum2 += arr[i]\n    if sum1 == sum2/3 and sum2 == sum1*2/3 :\n        return 1\n    else :\n        return 0\n\narr = [1, 2, 3, 4, 5]"}
{"task_id": "Open/97", "completion": "    return word in sentence.split()\n"}
{"task_id": "Open/98", "completion": "    return len(str(n))\n"}
{"task_id": "Open/99", "completion": "\n"}
{"task_id": "Open/100", "completion": "    x = bin(x)[2:]\n    y = bin(y)[2:]\n    while x!= y :\n        if len(x) < len(y) :\n            x = '0' + x\n        else :\n            y = '0' + y\n        if x < y :\n            x = x[1:] + '1'\n    return x == y\n"}
{"task_id": "Open/101", "completion": "    count = 0\n    for i in range(len(s)):\n        if s[i]!= s[i-1]:\n            count += 1\n    return count\n"}
{"task_id": "Open/102", "completion": "\n"}
{"task_id": "Open/103", "completion": "    arr.sort()\n    min_removal = 0\n    for i in range(1, n) :\n        diff = arr[i] - arr[i-1]\n        if diff > 0 :\n            min_removal += diff\n        else :\n            min_removal = max(min_removal, diff)\n    return min_removal\n\narr = [1, 3, 2, 2, 3]\nn = len(arr)"}
{"task_id": "Open/104", "completion": "\n    max_count = 0\n    for i in range(left, right+1):\n        count = 0\n        while i:\n            if i % 2 == 1:\n                count += 1\n            i //= 2\n        max_count = max(max_count, count)\n    return max_count\n"}
{"task_id": "Open/105", "completion": "\n"}
{"task_id": "Open/106", "completion": "    sum = 0\n    for i in range(1, n) :\n        if n % i == 0 :\n            sum += i\n    if sum == n :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/107", "completion": "    # Step 1\n    leap_centuries = year // 100\n    # Step 2\n    leap_years = year // 400\n    # Step 3\n    non_leap_years = year - leap_centuries * 100 - leap_years * 400\n    # Step 4\n    if leap_centuries > 0 or leap_years > 0:\n        non_leap_years -= leap_years\n    # Step 5\n    total_days = non_leap_years + 2 * leap_years\n    # Step 6\n    return total_days % 7\n"}
{"task_id": "Open/108", "completion": "    if a < 0:\n        return -1\n    else:\n        return (a * (3 * a - 1)) / 2\n"}
{"task_id": "Open/109", "completion": "\n"}
{"task_id": "Open/110", "completion": "    for digit in str(n) :\n        if digit in str(n) :\n            return False\n    return True\n"}
{"task_id": "Open/111", "completion": "    count = 0\n    for i in a:\n        while i % 5!= 0 or i % 3!= 0:\n            i = i // 5\n        count += 1\n    if count == n - 1:\n        return True\n    else:\n        return False\n"}
{"task_id": "Open/112", "completion": "\n"}
{"task_id": "Open/113", "completion": "\n"}
{"task_id": "Open/114", "completion": "    # Step 1. Initialize an array of length n+1 with all elements set to 0.\n    arr = [0]*(n+1)\n    # Step 2. Set the first element of the array to 1.\n    arr[0] = 1\n    # Step 3. Set the second element of the array to 2.\n    arr[1] = 2\n    # Step 4. Iterate from 3 to n.\n    for i in range(2, n+1):\n        # If the index is odd, calculate the element at that index by multiplying the element at index i//2 by 10 and adding 1.\n        if i%2!= 0:\n            arr[i] = arr[i//2]*10 + 1\n        # If the index is even, calculate the element at that index by multiplying the element at index (i//2)-1 by 10 and adding 2.\n        else:\n            arr[i] = arr[i//2-1]*10 + 2\n    # Step 5. Return the element at index n. \n    return arr[n]\n"}
{"task_id": "Open/115", "completion": "    sum = 0\n    for i in range(len(a)):\n        sum += a[i]\n    if sum % 11 == 0:\n        return True\n    else:\n        return False\n"}
{"task_id": "Open/116", "completion": "\n"}
{"task_id": "Open/117", "completion": "    # Step 1.\n    words = string.split()\n    # Step 2.\n    for i in range(len(words)):\n        words[i] = words[i].capitalize()\n    # Step 3.\n    return \" \".join(words)\n"}
{"task_id": "Open/118", "completion": "    return math.ceil( (8 * p + 1) ** 0.5 - 1 ) // 2\n"}
{"task_id": "Open/119", "completion": "    # Step 1\n    for i in range(len(arr)):\n        # Step 2\n        for j in range(i+1, len(arr)):\n            if arr[i] == arr[j]:\n                return False\n    # Step 3\n    return True\n"}
{"task_id": "Open/120", "completion": "\n"}
{"task_id": "Open/121", "completion": "    if lower == higher :\n        return lower\n    else :\n        return 2\n"}
{"task_id": "Open/122", "completion": "\n"}
{"task_id": "Open/123", "completion": "    # Write your code here.\n    longest = 0\n    for i in range(length):\n        if not s[i].isdigit():\n            break\n        if i == length - 1:\n            longest = i + 1\n            break\n        if not s[i+1].isdigit():\n            longest = i + 1\n            break\n        longest += 1\n    return s[0:longest]\n"}
{"task_id": "Open/124", "completion": "\n"}
{"task_id": "Open/125", "completion": "    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            return False\n    return True\n"}
{"task_id": "Open/126", "completion": "\n"}
{"task_id": "Open/127", "completion": "\n"}
{"task_id": "Open/128", "completion": "    return x!= y\n"}
{"task_id": "Open/129", "completion": "    Sn_1 = \"1\"\n    Sn_2 = \"12\"\n    Sn_3 = \"1213\"\n    for i in range(3, n+1):\n        Sn_1, Sn_2, Sn_3 = Sn_2, Sn_3, Sn_1 + Sn_2 + Sn_3\n    return Sn_3\n"}
{"task_id": "Open/130", "completion": "    min_steps = 0\n    for i in range(1, n):\n        min_steps += abs(arr[i] - arr[i-1])\n    return min_steps\n\narr = [1, 3, 5, 7, 9]\nn = len(arr)"}
{"task_id": "Open/131", "completion": "    return 0 if n % 4 == 0 else 1\n"}
{"task_id": "Open/132", "completion": "    m = int(N/a) + 1\n    sum = (m * (m + 1)) / 2\n    ans = a * sum\n    return ans\n"}
{"task_id": "Open/133", "completion": "    if N <= 2:\n        return N\n    elif N <= 4:\n        return N + 3\n    elif (N - 4) % 4 == 0:\n        return N + 1\n    elif (N - 4) % 4 <= 2:\n        return N + 2\n    else:\n        return N - 1\n"}
{"task_id": "Open/134", "completion": "    if arr[0] % 2 == 1 and arr[n-1] % 2 == 1 and n % 2 == 1 :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/135", "completion": "\n"}
{"task_id": "Open/136", "completion": "    for i in range(n) :\n        if arr[i] == i + 1 :\n            return arr[i + 1]\n    return n + 1\n"}
{"task_id": "Open/137", "completion": "    return int( ''.join( sorted( str(s) ) ) )\n"}
{"task_id": "Open/138", "completion": "\n"}
{"task_id": "Open/139", "completion": "\n"}
{"task_id": "Open/140", "completion": "\n"}
{"task_id": "Open/141", "completion": "    return math.gcd(x,y) * (x//math.gcd(x,y)) * (y//math.gcd(x,y))\n"}
{"task_id": "Open/142", "completion": "    pass\n"}
{"task_id": "Open/143", "completion": "\n    max_sum = 0\n    max_index = 0\n\n    for i in range(n) :\n        left_sum = 0\n        right_sum = 0\n\n        for j in range(i) :\n            left_sum ^= arr[j]\n\n        for j in range(i+1, n) :\n            right_sum ^= arr[j]\n\n        if left_sum + right_sum > max_sum :\n            max_sum = left_sum + right_sum\n            max_index = i\n\n    return max_index\n"}
{"task_id": "Open/144", "completion": "\n"}
{"task_id": "Open/145", "completion": "\n"}
{"task_id": "Open/146", "completion": "\n"}
{"task_id": "Open/147", "completion": "    # Write your code here\n    return 0\n"}
{"task_id": "Open/148", "completion": "\n"}
{"task_id": "Open/149", "completion": "    return s ** 0.5\n"}
{"task_id": "Open/150", "completion": "    return (p**2 + q**2) / (p + q)\n"}
{"task_id": "Open/151", "completion": "    # XOR of all the characters in the string\n    xor = 0\n    for i in range( len1 ) :\n        xor = xor ^ ord( str1[i] )\n    return xor\n"}
{"task_id": "Open/152", "completion": "\n"}
{"task_id": "Open/153", "completion": "    return True\n"}
{"task_id": "Open/154", "completion": "\n"}
{"task_id": "Open/155", "completion": "    # Step 1. Convert the input number to a float.\n    n = float(n)\n    \n    # Step 2. Calculate the logarithm of the input number.\n    log = math.log(n, 2)\n    \n    # Step 3. Calculate the nearest power of 2 using the logarithm value from step 2.\n    nearestPowerOf2 = 2 ** math.ceil(log)\n    \n    # Step 4. Calculate the difference between the input number and the nearest power of 2.\n    diff = n - nearestPowerOf2\n    \n    # Step 5. Return the absolute value of the difference from step 4. \n    return abs(diff)\n"}
{"task_id": "Open/156", "completion": "    if r < 0:\n        return -1\n    else:\n        return ( ( ( ( 1 + math.sqrt( 5 ) ) / 2 ) * math.pi * r**2 ) / 3 )\n"}
{"task_id": "Open/157", "completion": "\n"}
{"task_id": "Open/158", "completion": "\n"}
{"task_id": "Open/159", "completion": "    \n"}
{"task_id": "Open/160", "completion": "    # Write your code here.\n    count = [0] * 1000000\n    for i in range(len(arr)):\n        count[arr[i]] += 1\n    for i in range(len(count)):\n        if count[i] % 2!= 0:\n            return i\n    return None\n"}
{"task_id": "Open/161", "completion": "    xorArr = 0\n    ans = 0\n    for i in range(n) :\n        xorArr = xorArr ^ arr[i]\n    for i in range(n) :\n        ans = max(ans, xorArr ^ arr[i])\n    return ans\n\narr = [1,3,4,8]\nn = len(arr)"}
{"task_id": "Open/162", "completion": "    if ( sx == dx and sy == dy ) :\n        return True\n    elif ( sx == dx or sy == dy ) :\n        return True\n    else :\n        return False\n"}
{"task_id": "Open/163", "completion": "    if n % 2 == 1:\n        return 0\n    a = 1\n    b = 0\n    total = 0\n    for i in range(3, n//2+1):\n        total += cntWays(2*i) * cntWays(n-2*i)\n        a, b = b, a*2\n    return total\n"}
{"task_id": "Open/164", "completion": "    count = 0\n    dict = {}\n    for i in range(n) :\n        if arr[i] not in dict :\n            dict[arr[i]] = 1\n        else :\n            dict[arr[i]] += 1\n    for i in range(n) :\n        for j in range(i+1, n) :\n            if arr[i] == arr[j] :\n                count += dict[arr[i]] * dict[arr[j]]\n    return count\n\narr = [1, 2, 3, 4, 5]\nn = len(arr)"}
{"task_id": "Open/165", "completion": "\n"}
{"task_id": "Open/166", "completion": "    steps = 0\n    if source == dest :\n        return 0\n    elif abs(source - dest) > step :\n        return sys.maxsize\n    else :\n        steps = steps + steps(source - step, step, dest)\n        steps = steps + steps(source + step, step, dest)\n    return steps\n"}
{"task_id": "Open/167", "completion": "    s = 1\n    for i in range( 2, n + 1 ) :\n        count = 0\n        temp = \"\"\n        for j in range( len( s ) ) :\n            if s[ j ] == s[ j + 1 ] :\n                count += 1\n            else :\n                temp += str( count ) + s[ j ]\n                count = 0\n        s = temp\n    return s\n"}
{"task_id": "Open/168", "completion": "\n"}
{"task_id": "Open/169", "completion": "    m = abs(m)\n    n = abs(n)\n    product = m * n\n    sum = m + n\n    normal = product / math.sqrt(sum)\n    return normal\n"}
{"task_id": "Open/170", "completion": "    count = 0\n    for i in range(n-k+1):\n        sum = 0\n        for j in range(i,i+k):\n            sum += arr[j]\n        if sum < k:\n            count += 1\n    return count\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nn = len(arr)\nk = 3"}
{"task_id": "Open/171", "completion": "    arr.sort()\n    count = 0\n    for i in range(len(arr)) :\n        for j in range(i+1,len(arr)) :\n            for k in range(j+1,len(arr)) :\n                if arr[k] - arr[i] <= L :\n                    count += 1\n    return count\n"}
{"task_id": "Open/172", "completion": "    count = 0\n    for i in range(l,r+1):\n        if (i%2 == 0) and (i%3 == 0):\n            count += 1\n    return count\n"}
{"task_id": "Open/173", "completion": "\n"}
{"task_id": "Open/174", "completion": "\n"}
{"task_id": "Open/175", "completion": "    return math.floor(n * math.log10(n))"}
{"task_id": "Open/176", "completion": "    # Write your code here.\n    for i in range(1, len(A)):\n        if A[i] > A[i-1] and A[i] < A[i+1]:\n            return A[i]\n    return -1\n"}
{"task_id": "Open/177", "completion": "    a, b, c = sorted( (a, b, c) )\n    return c - max(a, b)\n"}
